{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\n/**\n * ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.\n*/\n\nvar IgrLinearContourValueResolver =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrLinearContourValueResolver, _super);\n\n  function IgrLinearContourValueResolver(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrLinearContourValueResolver.prototype.createImplementation = function () {\n    return new LinearContourValueResolver();\n  };\n\n  Object.defineProperty(IgrLinearContourValueResolver.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrLinearContourValueResolver.prototype, \"valueCount\", {\n    /**\n     * Gets or sets how many contour values to return.\n    */\n    get: function () {\n      return this.i.valueCount;\n    },\n    set: function (v) {\n      this.i.valueCount = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrLinearContourValueResolver;\n}(IgrContourValueResolver);\n\nexport { IgrLinearContourValueResolver };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-linear-contour-value-resolver.ts"],"names":[],"mappings":";AAKA,SAAS,uBAAT,QAAuE,8BAAvE;AACA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;;;AAGA,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAalD,WAAA,6BAAA,CAAY,KAAZ,EAAsD;WACrD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,6BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,0BAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,6BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAS5B,EAAA,MAAA,CAAA,cAAA,CAAI,6BAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AAHd;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,UAAf;AACA,KAFa;SAGd,UAAe,CAAf,EAAwB;AACvB,WAAK,CAAL,CAAO,UAAP,GAAoB,CAAC,CAArB;AACA,KALa;oBAAA;;AAAA,GAAd;AAMD,SAAA,6BAAA;AAAC,CAzBD,CAAmD,uBAAnD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\n/**\n * ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.\n*/\nvar IgrLinearContourValueResolver = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrLinearContourValueResolver, _super);\n    function IgrLinearContourValueResolver(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrLinearContourValueResolver.prototype.createImplementation = function () {\n        return new LinearContourValueResolver();\n    };\n    Object.defineProperty(IgrLinearContourValueResolver.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrLinearContourValueResolver.prototype, \"valueCount\", {\n        /**\n         * Gets or sets how many contour values to return.\n        */\n        get: function () {\n            return this.i.valueCount;\n        },\n        set: function (v) {\n            this.i.valueCount = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrLinearContourValueResolver;\n}(IgrContourValueResolver));\nexport { IgrLinearContourValueResolver };\n//# sourceMappingURL=igr-linear-contour-value-resolver.js.map\n"]},"metadata":{},"sourceType":"module"}