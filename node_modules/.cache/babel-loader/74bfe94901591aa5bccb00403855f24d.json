{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { EaseOfMovementIndicator } from \"./EaseOfMovementIndicator\";\n/**\n * Represents a IgxDataChartComponent Ease of Movement indicator series.\n * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to\n * its volume. Normally smoothed with a moving average.\n * Default required members: Low, High, Volume\n*\n* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrEaseOfMovementIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\tvolumeMemberPath=\"Volume\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*/\n\nvar IgrEaseOfMovementIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrEaseOfMovementIndicator, _super);\n\n  function IgrEaseOfMovementIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrEaseOfMovementIndicator.prototype.createImplementation = function () {\n    return new EaseOfMovementIndicator();\n  };\n\n  Object.defineProperty(IgrEaseOfMovementIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrEaseOfMovementIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrEaseOfMovementIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-ease-of-movement-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,uBAAT,QAAwC,2BAAxC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAA,0BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,OAAA,CAAA,SAAA,CAAA,0BAAA,EAAA,MAAA;;AAa/C,WAAA,0BAAA,CAAY,KAAZ,EAAmD;WAClD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,0BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,uBAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,0BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAM7B,SAAA,0BAAA;AAAC,CAhBD,CAAgD,yBAAhD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { EaseOfMovementIndicator } from \"./EaseOfMovementIndicator\";\n/**\n * Represents a IgxDataChartComponent Ease of Movement indicator series.\n * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to\n * its volume. Normally smoothed with a moving average.\n * Default required members: Low, High, Volume\n*\n* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrEaseOfMovementIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\tvolumeMemberPath=\"Volume\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*/\nvar IgrEaseOfMovementIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrEaseOfMovementIndicator, _super);\n    function IgrEaseOfMovementIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrEaseOfMovementIndicator.prototype.createImplementation = function () {\n        return new EaseOfMovementIndicator();\n    };\n    Object.defineProperty(IgrEaseOfMovementIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrEaseOfMovementIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrEaseOfMovementIndicator };\n//# sourceMappingURL=igr-ease-of-movement-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}