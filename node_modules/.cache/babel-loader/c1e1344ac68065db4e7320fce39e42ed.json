{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { CommodityChannelIndexIndicator } from \"./CommodityChannelIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Commodity Channel Index indicator series.\n * Default required members: High, Low, Close\n*\n* `IgrCommodityChannelIndexIndicator` class specify the series as Commodity Channel Index Indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrCommodityChannelIndexIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" \t/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* series1 = new IgrCommodityChannelIndexIndicator({ name: \"colSeries1\" });\n* series1.dataSource = this.categoryData;\n* series1.xAxis = this.categoryXAxis;\n* series1.yAxis = this.numericYAxis;\n* series1.xAxisName = \"categoryXAxis\";\n* series1.yAxisName = \"numericYAxis\";\n* series1.valueMemberPath = \"Volume\";\n* series1.openMemberPath = \"open\";\n* series1.highMemberPath = \"high\";\n* series1.lowMemberPath = \"low\";\n* series1.closeMemberPath = \"close\";\n* ```\n*/\n\nvar IgrCommodityChannelIndexIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrCommodityChannelIndexIndicator, _super);\n\n  function IgrCommodityChannelIndexIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCommodityChannelIndexIndicator.prototype.createImplementation = function () {\n    return new CommodityChannelIndexIndicator();\n  };\n\n  Object.defineProperty(IgrCommodityChannelIndexIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCommodityChannelIndexIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current CCISeries object.\n     * The typical, and initial, value for CCI periods is 20.\n    *\n    * ```ts\n    * this.series.period = 30;\n    * ```\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *    <IgrCommodityChannelIndexIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod= {30}/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.qx;\n    },\n    set: function (v) {\n      this.i.qx = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrCommodityChannelIndexIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrCommodityChannelIndexIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-commodity-channel-index-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,8BAAT,QAA+C,kCAA/C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuD,EAAA,OAAA,CAAA,SAAA,CAAA,iCAAA,EAAA,MAAA;;AAatD,WAAA,iCAAA,CAAY,KAAZ,EAA0D;WACzD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,iCAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,8BAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,iCAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAkC5B,EAAA,MAAA,CAAA,cAAA,CAAI,iCAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AA5BV;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA4BA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFS;SAGV,UAAW,CAAX,EAAoB;AACnB,WAAK,CAAL,CAAO,EAAP,GAAY,CAAC,CAAb;AACA,KALS;oBAAA;;AAAA,GAAV;AAMD,SAAA,iCAAA;AAAC,CAlDD,CAAuD,yBAAvD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { CommodityChannelIndexIndicator } from \"./CommodityChannelIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Commodity Channel Index indicator series.\n * Default required members: High, Low, Close\n*\n* `IgrCommodityChannelIndexIndicator` class specify the series as Commodity Channel Index Indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrCommodityChannelIndexIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" \t/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* series1 = new IgrCommodityChannelIndexIndicator({ name: \"colSeries1\" });\n* series1.dataSource = this.categoryData;\n* series1.xAxis = this.categoryXAxis;\n* series1.yAxis = this.numericYAxis;\n* series1.xAxisName = \"categoryXAxis\";\n* series1.yAxisName = \"numericYAxis\";\n* series1.valueMemberPath = \"Volume\";\n* series1.openMemberPath = \"open\";\n* series1.highMemberPath = \"high\";\n* series1.lowMemberPath = \"low\";\n* series1.closeMemberPath = \"close\";\n* ```\n*/\nvar IgrCommodityChannelIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrCommodityChannelIndexIndicator, _super);\n    function IgrCommodityChannelIndexIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCommodityChannelIndexIndicator.prototype.createImplementation = function () {\n        return new CommodityChannelIndexIndicator();\n    };\n    Object.defineProperty(IgrCommodityChannelIndexIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCommodityChannelIndexIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current CCISeries object.\n         * The typical, and initial, value for CCI periods is 20.\n        *\n        * ```ts\n        * this.series.period = 30;\n        * ```\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *    <IgrCommodityChannelIndexIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod= {30}/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.qx;\n        },\n        set: function (v) {\n            this.i.qx = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrCommodityChannelIndexIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrCommodityChannelIndexIndicator };\n//# sourceMappingURL=igr-commodity-channel-index-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}