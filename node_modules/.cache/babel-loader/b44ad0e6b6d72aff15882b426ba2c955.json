{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as React from 'react';\nimport { TypeRegistrar } from \"igniteui-react-core\";\n\nfunction getSliceLabel(series, item) {\n  return item[series.labelMemberPath];\n}\n\nfunction getValue(series, item) {\n  return item[getValueMemberPath(series)];\n}\n\nfunction getValueMemberPath(series) {\n  return series.valueMemberPath;\n}\n\nfunction getBrush(i) {\n  if (i.slice.background) return i.slice.background.fill;\n  return \"black\";\n}\n\nvar DoughnutSliceTooltip = function (props) {\n  if (!props.dataContext) {\n    return null;\n  }\n\n  if (!props.dataContext.item) {\n    return null;\n  }\n\n  var series = props.dataContext.series;\n  var item = props.dataContext.item;\n  return React.createElement(\"div\", {\n    className: 'ui-chart-default-tooltip-content'\n  }, React.createElement(\"span\", {\n    style: {\n      color: getBrush(props.dataContext.i)\n    }\n  }, getSliceLabel(series, item)), React.createElement(\"br\", null), React.createElement(\"span\", {\n    className: \"ui-tooltip-priority\"\n  }, getValueMemberPath(series), \" : \", getValue(series, item)));\n};\n\nvar IgrDoughnutChartDefaultTooltips =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrDoughnutChartDefaultTooltips() {\n    this.doughnutSliceTooltip = DoughnutSliceTooltip;\n  }\n\n  IgrDoughnutChartDefaultTooltips.prototype.ensureDefaultTooltip = function (series) {\n    if (series.showDefaultTooltip) {\n      series.tooltipTemplate = this.doughnutSliceTooltip;\n    } else {\n      if (series.tooltipTemplate === this.doughnutSliceTooltip) {\n        series.tooltipTemplate = null;\n      }\n    }\n  };\n\n  IgrDoughnutChartDefaultTooltips.register = function () {\n    TypeRegistrar.registerCons(\"IgrDoughnutChartDefaultTooltips\", IgrDoughnutChartDefaultTooltips);\n  };\n\n  return IgrDoughnutChartDefaultTooltips;\n}();\n\nexport { IgrDoughnutChartDefaultTooltips };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-doughnut-chart-default-tooltips.tsx"],"names":[],"mappings":"AAAA;;;;;;AAOA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,aAAT,QAA8B,qBAA9B;;AAIA,SAAS,aAAT,CAAuB,MAAvB,EAAoC,IAApC,EAA6C;AACzC,SAAO,IAAI,CAAC,MAAM,CAAC,eAAR,CAAX;AACH;;AAED,SAAS,QAAT,CAAkB,MAAlB,EAA+B,IAA/B,EAAwC;AACpC,SAAO,IAAI,CAAC,kBAAkB,CAAC,MAAD,CAAnB,CAAX;AACH;;AAED,SAAS,kBAAT,CAA4B,MAA5B,EAAuC;AACnC,SAAO,MAAM,CAAC,eAAd;AACH;;AAED,SAAS,QAAT,CAAkB,CAAlB,EAAwB;AACpB,MAAI,CAAC,CAAC,KAAF,CAAQ,UAAZ,EACI,OAAO,CAAC,CAAC,KAAF,CAAQ,UAAR,CAAmB,IAA1B;AACJ,SAAO,OAAP;AACH;;AAED,IAAM,oBAAoB,GAAkC,UAAC,KAAD,EAA0B;AAClF,MAAI,CAAC,KAAK,CAAC,WAAX,EAAwB;AACpB,WAAO,IAAP;AACH;;AACD,MAAI,CAAC,KAAK,CAAC,WAAN,CAAkB,IAAvB,EAA6B;AACzB,WAAO,IAAP;AACH;;AACD,MAAM,MAAM,GAAsB,KAAK,CAAC,WAAN,CAAkB,MAApD;AAEA,MAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,IAA/B;AAEA,SACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAiD,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,MAAA,KAAA,EAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA;AAAA;AAAA,GAAA,EAAA,aAAA,CAAA,MAAA,EAAA,IAAA,CAAA,CAAjD,EAAiD,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,CAAjD,EAAiD,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAAA,EAAA,kBAAA,CAAA,MAAA,CAAA,EAAA,KAAA,EAAA,QAAA,CAAA,MAAA,EAAA,IAAA,CAAA,CAAjD,CADJ;AAEQ,CAbZ;;IAcQ,+BAAA;AAAA;;AAAM;AAAA,YAAA;AACN,WAAA,+BAAA,GAAe;AAAyB,SAAA,oBAAA,GAAmB,oBAAnB;;;AAAiC,EAAA,+BAA+B,CACjG,SADkE,CAE3E,oBAF2E,GAE3E,UAAA,MAAA,EAAA;AACL,QAAA,MAAA,CAAA,kBAAA,EAAA;AAGD,MAAA,MAAA,CAAA,eAAA,GAAA,KAAA,oBAAA;AAII,KAPH,MAKU;AAIN,UAAA,MAAA,CAAA,eAAA,KAAA,KAAA,oBAAA,EAAA;AAED,QAAA,MAAA,CAAA,eAAA,GAAA,IAAA;AACQ;AACA;AACH,GAjBwE;;AAiBlE,EAAA,+BAAA,CAAA,QAAA,GAAA,YAAA;AACH,IAAA,aAAI,CAAM,YAAV,CAAW,iCAAX,EAA0D,+BAA1D;AACI,GAFD;;SAGF,+B;AACJ,CAtBK,E;;AAuBV,SAAC,+BAAD","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as React from 'react';\nimport { TypeRegistrar } from \"igniteui-react-core\";\nfunction getSliceLabel(series, item) {\n    return item[series.labelMemberPath];\n}\nfunction getValue(series, item) {\n    return item[getValueMemberPath(series)];\n}\nfunction getValueMemberPath(series) {\n    return series.valueMemberPath;\n}\nfunction getBrush(i) {\n    if (i.slice.background)\n        return i.slice.background.fill;\n    return \"black\";\n}\nvar DoughnutSliceTooltip = function (props) {\n    if (!props.dataContext) {\n        return null;\n    }\n    if (!props.dataContext.item) {\n        return null;\n    }\n    var series = props.dataContext.series;\n    var item = props.dataContext.item;\n    return (React.createElement(\"div\", { className: 'ui-chart-default-tooltip-content' }, React.createElement(\"span\", { style: { color: getBrush(props.dataContext.i) } }, getSliceLabel(series, item)), React.createElement(\"br\", null), React.createElement(\"span\", { className: \"ui-tooltip-priority\" }, getValueMemberPath(series), \" : \", getValue(series, item))));\n};\nvar IgrDoughnutChartDefaultTooltips = /** @class */ /*@__PURE__*/ (function () {\n    function IgrDoughnutChartDefaultTooltips() {\n        this.doughnutSliceTooltip = DoughnutSliceTooltip;\n    }\n    IgrDoughnutChartDefaultTooltips.prototype.ensureDefaultTooltip = function (series) {\n        if (series.showDefaultTooltip) {\n            series.tooltipTemplate = this.doughnutSliceTooltip;\n        }\n        else {\n            if (series.tooltipTemplate === this.doughnutSliceTooltip) {\n                series.tooltipTemplate = null;\n            }\n        }\n    };\n    IgrDoughnutChartDefaultTooltips.register = function () {\n        TypeRegistrar.registerCons(\"IgrDoughnutChartDefaultTooltips\", IgrDoughnutChartDefaultTooltips);\n    };\n    return IgrDoughnutChartDefaultTooltips;\n}());\nexport { IgrDoughnutChartDefaultTooltips };\n//# sourceMappingURL=igr-doughnut-chart-default-tooltips.js.map\n"]},"metadata":{},"sourceType":"module"}