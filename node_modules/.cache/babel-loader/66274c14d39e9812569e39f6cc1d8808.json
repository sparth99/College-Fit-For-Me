{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Cities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner, Button, Jumbotron, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport CityFilters from '../Components/CityFilters';\nimport SearchInput from '../Components/SearchInput';\nexport default class Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: null,\n      page: 1,\n      apiLink: 'https://api.collegefitfor.me/cities',\n      loading: true,\n      filtered: false\n    };\n\n    this.setter = apiLink => {\n      let split_idx = String(apiLink).lastIndexOf('&') === -1 ? String(apiLink).length : String(apiLink).lastIndexOf('&');\n      let baseApi = String(apiLink).substring(0, split_idx);\n      this.setState({\n        apiLink: baseApi\n      });\n      axios.get(apiLink).then(res => {\n        const cities = res.data;\n        this.setState({\n          cities,\n          page: 1\n        });\n\n        if (apiLink === 'https://api.collegefitfor.me/cities' || String(apiLink).substring(0, 50) === 'https://api.collegefitfor.me/cities/filter/?order=') {\n          this.setState({\n            filtered: false\n          });\n        } else {\n          this.setState({\n            filtered: true\n          });\n        }\n      });\n    };\n\n    this.fetchCities = () => {\n      axios.get(this.state.apiLink, {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(cities => {\n        this.setState({\n          cities,\n          loading: false\n        });\n      }).catch(() => {\n        // attempting to go forward to a page that doesn't exist\n        this.setState({\n          page: this.state.page - 1,\n          loading: false\n        });\n      });\n    };\n\n    this.formatNumber = value => {\n      return value === 0 ? 'N/A' : value.toLocaleString();\n    };\n\n    this.formatIndex = value => {\n      return value === 0 ? 'N/A' : value.toFixed(2);\n    };\n\n    this.displayCities = () => {\n      const {\n        cities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 4; c++) {\n          if (cities.length <= c + 4 * r) {\n            break;\n          }\n\n          var city = cities[c + 4 * r];\n          children.push(\n          /*#__PURE__*/\n          React.createElement(Card, {\n            style: {\n              maxWidth: \"17rem\"\n            },\n            className: \"cities-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Nav.Link, {\n            className: \"city-instance\",\n            href: '/cities/' + String(city.city_state_name),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Img, {\n            variant: \"top\",\n            src: city.image_url,\n            style: {\n              height: '190px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(Card.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }\n          }, city.city_name,\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }\n          }), city.state_name),\n          /*#__PURE__*/\n          React.createElement(ListGroup, {\n            className: \"list-group-flush\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(ListGroupItem, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }\n          }, \"Population: \"), this.formatNumber(city.population)),\n          /*#__PURE__*/\n          React.createElement(ListGroupItem, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }\n          }, \"Safety Index: \"), this.formatIndex(city.safety_index)),\n          /*#__PURE__*/\n          React.createElement(ListGroupItem, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }\n          }, \"Rent Index: \"), this.formatIndex(city.rent_index)),\n          /*#__PURE__*/\n          React.createElement(ListGroupItem, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }\n          }, \"Healthcare Index: \"), this.formatIndex(city.health_care_index)))))));\n        }\n\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }\n        }));\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, children));\n        if (cities.length < 4 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page,\n        loading: true\n      }, () => this.fetchCities());\n    };\n\n    this.displayButtons = filtered => {\n      let buttons = [];\n\n      if (filtered) {\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(this.state.page > 1 ? this.state.page - 1 : 1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }\n        }, \"<<\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }\n        }, this.state.page));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(this.state.page + 1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }\n        }, \">>\"));\n      } else {\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }\n        }, \"<<\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }\n        }, \"1\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(2);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }\n        }, \"2\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(3);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }\n        }, \"3\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(4);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 9\n          }\n        }, \"4\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(5);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 9\n          }\n        }, \"5\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(5);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }\n        }, \">>\"));\n      }\n\n      return buttons;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Jumbotron, {\n        className: \"cities-jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }\n      }, \"Cities\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"cities-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }, \"City matters a lot when deciding a University to attend.\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, \"Whether you're a West Coast or East Coast person, prefer a big or small city, or looking for a city that has great access to nature, there's a city for you!\"), this.state.loading ?\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        className: \"Spinner-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"d-flex flex-column align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(SearchInput, {\n        modelType: \"cities\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(CityFilters, {\n        setter: this.setter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(CardDeck, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, this.displayCities()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }), this.displayButtons(this.state.filtered)),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Cities.js"],"names":["React","Component","Nav","CardDeck","Spinner","Button","Jumbotron","Card","ListGroup","ListGroupItem","axios","Navigation","Footer","CityFilters","SearchInput","Cities","state","cities","page","apiLink","loading","filtered","setter","split_idx","String","lastIndexOf","length","baseApi","substring","setState","get","then","res","data","fetchCities","params","catch","formatNumber","value","toLocaleString","formatIndex","toFixed","displayCities","rows","r","children","c","city","push","maxWidth","city_state_name","image_url","height","city_name","state_name","population","safety_index","rent_index","health_care_index","changePage","displayButtons","buttons","e","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Nav,\n  CardDeck,\n  Spinner,\n  Button,\n  Jumbotron,\n  Card,\n  ListGroup, \n  ListGroupItem\n} from 'react-bootstrap';\nimport axios from 'axios';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport CityFilters from '../Components/CityFilters';\nimport SearchInput from '../Components/SearchInput';\n\nexport default class Cities extends Component {\n  state = {\n    cities: null,\n    page: 1,\n    apiLink: 'https://api.collegefitfor.me/cities',\n    loading: true,\n    filtered: false,\n  };\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  setter = (apiLink) => {\n    let split_idx = String(apiLink).lastIndexOf('&') === -1 ? String(apiLink).length : String(apiLink).lastIndexOf('&')\n    let baseApi = String(apiLink).substring(\n      0,\n      split_idx\n    );\n    this.setState({ apiLink: baseApi });\n    axios.get(apiLink).then((res) => {\n      const cities = res.data;\n      this.setState({ cities, page: 1 });\n      if (\n        apiLink === 'https://api.collegefitfor.me/cities' ||\n        String(apiLink).substring(0, 50) ===\n          'https://api.collegefitfor.me/cities/filter/?order='\n      ) {\n        this.setState({ filtered: false });\n      } else {\n        this.setState({ filtered: true });\n      }\n    });\n  };\n\n  fetchCities = () => {\n    axios\n      .get(this.state.apiLink, {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((cities) => {\n        this.setState({ cities, loading: false });\n      })\n      .catch(() => {\n        // attempting to go forward to a page that doesn't exist\n        this.setState({ page: this.state.page - 1, loading: false });\n      });\n  };\n\n  formatNumber = (value) => {\n    return value === 0 ? 'N/A' : value.toLocaleString();\n  };\n\n  formatIndex = (value) => {\n    return value === 0 ? 'N/A' : value.toFixed(2);\n  };\n\n  displayCities = () => {\n    const { cities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 4; c++) {\n        if (cities.length <= c + 4 * r) {\n          break;\n        }\n        var city = cities[c + 4 * r];\n        children.push(\n          <Card\n            style={{ maxWidth: \"17rem\"}}\n            className=\"cities-card\"\n          >\n            <Nav.Link\n              className=\"city-instance\"\n              href={'/cities/' + String(city.city_state_name)}\n            >\n              <Card.Img\n                variant=\"top\"\n                src={city.image_url}\n                style={{ height: '190px'}}\n              />\n              <Card.Body>\n                <Card.Title>\n                  {city.city_name} \n                  <br></br>\n                  {city.state_name}\n                </Card.Title>\n                <ListGroup className=\"list-group-flush\">\n                  <ListGroupItem>\n                    <span className =\"font-weight-bold\">Population: </span>\n                    {this.formatNumber(city.population)}\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    <span className =\"font-weight-bold\">Safety Index: </span>\n                    {this.formatIndex(city.safety_index)}\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    <span className =\"font-weight-bold\">Rent Index: </span>\n                    {this.formatIndex(city.rent_index)}\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    <span className =\"font-weight-bold\">Healthcare Index: </span>\n                    {this.formatIndex(city.health_care_index)}\n                  </ListGroupItem>\n                </ListGroup>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (cities.length < 4 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n        loading: true,\n      },\n      () => this.fetchCities()\n    );\n  };\n\n  displayButtons = (filtered) => {\n    let buttons = [];\n    if (filtered) {\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(this.state.page > 1 ? this.state.page - 1 : 1);\n          }}\n        >\n          &lt;&lt;\n        </Button>\n      );\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\">{this.state.page}</Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(this.state.page + 1);\n          }}\n        >\n          &gt;&gt;\n        </Button>\n      );\n    } else {\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(1);\n          }}\n        >\n          &lt;&lt;\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(1);\n          }}\n        >\n          1\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(2);\n          }}\n        >\n          2\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(3);\n          }}\n        >\n          3\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(4);\n          }}\n        >\n          4\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(5);\n          }}\n        >\n          5\n        </Button>\n      );\n      buttons.push(\n        <Button\n          variant=\"outline-primary mr-1\"\n          onClick={(e) => {\n            this.changePage(5);\n          }}\n        >\n          &gt;&gt;\n        </Button>\n      );\n    }\n    return buttons;\n  };\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Jumbotron className=\"cities-jumbotron\"></Jumbotron>\n        <h1>Cities</h1>\n        <p className=\"cities-header\">\n          City matters a lot when deciding a University to attend.\n        </p>\n        <p>\n          Whether you're a West Coast or East Coast person, prefer a big or\n          small city, or looking for a city that has great access to nature,\n          there's a city for you!\n        </p>\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <>\n            <p />\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"d-flex flex-column align-items-center\">\n                <SearchInput modelType=\"cities\" />\n                <br />\n                <CityFilters setter={this.setter} />\n              </div>\n            </div>\n\n            <CardDeck className = \"justify-content-center\">\n              {this.displayCities()}\n            </CardDeck>\n            <p />\n            {this.displayButtons(this.state.filtered)}\n          </>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}