{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar CommodityChannelIndexIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CommodityChannelIndexIndicatorStrategy, _super);\n\n  function CommodityChannelIndexIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CommodityChannelIndexIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.o(a.typicalColumn.basedOn);\n    c.o(b.c.c);\n    return c;\n  };\n\n  CommodityChannelIndexIndicatorStrategy.prototype.a = function (a, b) {\n    var c = a.period;\n    var d = a.typicalColumn;\n    var e = a.indicatorColumn;\n    var f = getEnumerator(b.c.b(d, c));\n    var g = getEnumerator(d);\n    var h = new Array(c);\n\n    for (var i = 0; i < c; i++) {\n      h[i] = 0;\n    }\n\n    var j = 0;\n\n    while (g.moveNext() && f.moveNext()) {\n      h[j % c] = g.current;\n      var k = 0;\n\n      for (var l = 0; l < c; ++l) {\n        k += Math.abs(f.current - h[l]);\n      }\n\n      k /= c;\n      e.item(j, b.i((g.current - f.current) / (0.015 * k)));\n      ++j;\n    }\n\n    return true;\n  };\n\n  CommodityChannelIndexIndicatorStrategy.$t = markType(CommodityChannelIndexIndicatorStrategy, 'CommodityChannelIndexIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return CommodityChannelIndexIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { CommodityChannelIndexIndicatorStrategy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/CommodityChannelIndexIndicatorStrategy.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAA+I,YAA/I,EAAmK,QAAnK,EAA6K,aAA7K,QAAkM,qBAAlM;AAGA,SAAS,MAAT,QAAuB,qBAAvB;AAIA;;;;AAGA,IAAA,sCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4D,EAAA,OAAA,CAAA,SAAA,CAAA,sCAAA,EAAA,MAAA;;AAA5D,WAAA,sCAAA,GAAA;;AA+BC;;AA7BA,EAAA,sCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,aAAF,CAAgB,OAApB;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAF,CAAI,CAAR;AACA,WAAO,CAAP;AACA,GALD;;AAMA,EAAA,sCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAW,CAAC,CAAC,MAAlB;AACA,QAAI,CAAC,GAA0B,CAAC,CAAC,aAAjC;AACA,QAAI,CAAC,GAAoB,CAAC,CAAC,eAA3B;AACA,QAAI,CAAC,GAA0B,aAAa,CAAC,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAN,EAAS,CAAT,CAAD,CAA5C;AACA,QAAI,CAAC,GAA0B,aAAa,CAAC,CAAD,CAA5C;AACA,QAAI,CAAC,GAAuB,IAAI,KAAJ,CAAU,CAAV,CAA5B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC3B,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;AACA;;AACD,QAAI,CAAC,GAAW,CAAhB;;AACA,WAAO,CAAC,CAAC,QAAF,MAAgB,CAAC,CAAC,QAAF,EAAvB,EAAqC;AACpC,MAAA,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,GAAmB,CAAC,CAAC,OAArB;AACA,UAAI,CAAC,GAAW,CAAhB;;AACA,WAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAA5B,EAA+B,EAAE,CAAjC,EAAoC;AACnC,QAAA,CAAC,IAAI,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,CAAD,CAAtB,CAAL;AACA;;AACD,MAAA,CAAC,IAAI,CAAL;AACA,MAAA,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,OAAf,KAA2B,QAAQ,CAAnC,CAAJ,CAAV;AACA,QAAE,CAAF;AACA;;AACD,WAAO,IAAP;AACA,GAtBD;;AAPO,EAAA,sCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,sCAAD,EAAyC,wCAAzC,EAAyF,4BAA6B,CAAC,CAAvH,CAAnB;AA8BR,SAAA,sCAAA;AAAC,CA/BD,CAA4D,4BAA5D,CAAA;;SAAa,sC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar CommodityChannelIndexIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CommodityChannelIndexIndicatorStrategy, _super);\n    function CommodityChannelIndexIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommodityChannelIndexIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.o(a.typicalColumn.basedOn);\n        c.o(b.c.c);\n        return c;\n    };\n    CommodityChannelIndexIndicatorStrategy.prototype.a = function (a, b) {\n        var c = a.period;\n        var d = a.typicalColumn;\n        var e = a.indicatorColumn;\n        var f = getEnumerator(b.c.b(d, c));\n        var g = getEnumerator(d);\n        var h = new Array(c);\n        for (var i = 0; i < c; i++) {\n            h[i] = 0;\n        }\n        var j = 0;\n        while (g.moveNext() && f.moveNext()) {\n            h[j % c] = g.current;\n            var k = 0;\n            for (var l = 0; l < c; ++l) {\n                k += Math.abs(f.current - h[l]);\n            }\n            k /= c;\n            e.item(j, b.i((g.current - f.current) / (0.015 * k)));\n            ++j;\n        }\n        return true;\n    };\n    CommodityChannelIndexIndicatorStrategy.$t = markType(CommodityChannelIndexIndicatorStrategy, 'CommodityChannelIndexIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return CommodityChannelIndexIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { CommodityChannelIndexIndicatorStrategy };\n//# sourceMappingURL=CommodityChannelIndexIndicatorStrategy.js.map\n"]},"metadata":{},"sourceType":"module"}