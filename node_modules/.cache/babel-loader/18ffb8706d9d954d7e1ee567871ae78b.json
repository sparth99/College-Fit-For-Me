{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IIndicatorProxy_$type } from \"./IIndicatorProxy\";\nimport { IShortPeriodLongPeriod_$type } from \"./IShortPeriodLongPeriod\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\nimport { stringEndsWith } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar IndicatorProxy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IndicatorProxy, _super);\n\n  function IndicatorProxy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  IndicatorProxy.prototype.matchesType = function (a) {\n    if (stringEndsWith(getInstanceType(a).typeName, \"Indicator\")) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndicatorProxy.prototype.setCloseMemberPath = function (a, b) {\n    a.oc = b;\n  };\n\n  IndicatorProxy.prototype.setDisplayType = function (a, b) {\n    a.pk = b;\n  };\n\n  IndicatorProxy.prototype.setHighMemberPath = function (a, b) {\n    a.of = b;\n  };\n\n  IndicatorProxy.prototype.setLongPeriod = function (a, b) {\n    if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n      a.longPeriod = b;\n    }\n  };\n\n  IndicatorProxy.prototype.setLowMemberPath = function (a, b) {\n    a.ok = b;\n  };\n\n  IndicatorProxy.prototype.setNegativeBrush = function (a, b) {\n    a.pe = b;\n  };\n\n  IndicatorProxy.prototype.setOpenMemberPath = function (a, b) {\n    a.oo = b;\n  };\n\n  IndicatorProxy.prototype.setPeriodOverride = function (a, b) {\n    if (typeCast(StrategyBasedIndicator.$, a) !== null) {\n      a.qr(b);\n    }\n  };\n\n  IndicatorProxy.prototype.setShortPeriod = function (a, b) {\n    if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n      a.shortPeriod = b;\n    }\n  };\n\n  IndicatorProxy.prototype.setSignalPeriod = function (a, b) {\n    if (getInstanceType(a).typeName == \"MovingAverageConvergenceDivergenceIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['signalPeriod'] = p_;\n    }\n  };\n\n  IndicatorProxy.prototype.setSmoothingPeriod = function (a, b) {\n    if (getInstanceType(a).typeName == \"FullStochasticOscillatorIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['smoothingPeriod'] = p_;\n    }\n  };\n\n  IndicatorProxy.prototype.setVolumeMemberPath = function (a, b) {\n    a.os = b;\n  };\n\n  IndicatorProxy.prototype.setXAxis = function (a, b) {\n    a.l8 = b;\n  };\n\n  IndicatorProxy.prototype.setYAxis = function (a, b) {\n    a.mt = b;\n  };\n\n  IndicatorProxy.prototype.handleCustomIndicatorEvent = function (a, b) {\n    if (getInstanceType(a).typeName == \"CustomIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['indicator'] = p_;\n    }\n  };\n\n  IndicatorProxy.$t = markType(IndicatorProxy, 'IndicatorProxy', Base.$, [IIndicatorProxy_$type]);\n  return IndicatorProxy;\n}(Base);\n\nexport { IndicatorProxy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/IndicatorProxy.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IIndicatorProxy_$type } from \"./IIndicatorProxy\";\nimport { IShortPeriodLongPeriod_$type } from \"./IShortPeriodLongPeriod\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\nimport { stringEndsWith } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar IndicatorProxy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IndicatorProxy, _super);\n    function IndicatorProxy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IndicatorProxy.prototype.matchesType = function (a) {\n        if (stringEndsWith(getInstanceType(a).typeName, \"Indicator\")) {\n            return true;\n        }\n        return false;\n    };\n    IndicatorProxy.prototype.setCloseMemberPath = function (a, b) {\n        a.oc = b;\n    };\n    IndicatorProxy.prototype.setDisplayType = function (a, b) {\n        a.pk = b;\n    };\n    IndicatorProxy.prototype.setHighMemberPath = function (a, b) {\n        a.of = b;\n    };\n    IndicatorProxy.prototype.setLongPeriod = function (a, b) {\n        if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n            a.longPeriod = b;\n        }\n    };\n    IndicatorProxy.prototype.setLowMemberPath = function (a, b) {\n        a.ok = b;\n    };\n    IndicatorProxy.prototype.setNegativeBrush = function (a, b) {\n        a.pe = b;\n    };\n    IndicatorProxy.prototype.setOpenMemberPath = function (a, b) {\n        a.oo = b;\n    };\n    IndicatorProxy.prototype.setPeriodOverride = function (a, b) {\n        if (typeCast(StrategyBasedIndicator.$, a) !== null) {\n            a.qr(b);\n        }\n    };\n    IndicatorProxy.prototype.setShortPeriod = function (a, b) {\n        if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n            a.shortPeriod = b;\n        }\n    };\n    IndicatorProxy.prototype.setSignalPeriod = function (a, b) {\n        if (getInstanceType(a).typeName == \"MovingAverageConvergenceDivergenceIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['signalPeriod'] = p_;\n        }\n    };\n    IndicatorProxy.prototype.setSmoothingPeriod = function (a, b) {\n        if (getInstanceType(a).typeName == \"FullStochasticOscillatorIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['smoothingPeriod'] = p_;\n        }\n    };\n    IndicatorProxy.prototype.setVolumeMemberPath = function (a, b) {\n        a.os = b;\n    };\n    IndicatorProxy.prototype.setXAxis = function (a, b) {\n        a.l8 = b;\n    };\n    IndicatorProxy.prototype.setYAxis = function (a, b) {\n        a.mt = b;\n    };\n    IndicatorProxy.prototype.handleCustomIndicatorEvent = function (a, b) {\n        if (getInstanceType(a).typeName == \"CustomIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['indicator'] = p_;\n        }\n    };\n    IndicatorProxy.$t = markType(IndicatorProxy, 'IndicatorProxy', Base.$, [IIndicatorProxy_$type]);\n    return IndicatorProxy;\n}(Base));\nexport { IndicatorProxy };\n//# sourceMappingURL=IndicatorProxy.js.map\n"]},"metadata":{},"sourceType":"module"}