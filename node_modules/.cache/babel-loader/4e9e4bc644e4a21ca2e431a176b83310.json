{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Components/CountriesIncomeBubbleChart.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport BChart from '@weknow/react-bubble-chart-d3';\nimport Promises from 'es6-promise';\n\nclass CountriesIncomeBubbleChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    var country_incomes = [{\n      \"label\": \"Low\",\n      \"value\": 0\n    }, {\n      \"label\": \"Middle\",\n      \"value\": 0\n    }, {\n      \"label\": \"High\",\n      \"value\": 0\n    }];\n    let promises = [];\n\n    for (let i = 0; i < 25; i++) {\n      let offset = i * 10;\n      promises.push(axios.get('https://api.pathogerm.com/countries/?offset=' + offset).then(res => {\n        const data = res.data;\n        const results = data.results;\n\n        for (let j = 0; j < 10; j++) {\n          if (results[j][\"incomelevel\"] === \"Low\") {\n            country_incomes[0][\"value\"] += 1;\n          } else if (results[j][\"incomelevel\"] === \"Middle\") {\n            country_incomes[1][\"value\"] += 1;\n          } else if (results[j][\"incomelevel\"] === \"High\") {\n            country_incomes[2][\"value\"] += 1;\n          }\n        }\n      }));\n    }\n\n    Promises.all(promises).then(() => this.setState({\n      data: country_incomes\n    }));\n  }\n\n  render() {\n    if (this.state.data.length > 0) {\n      return (\n        /*#__PURE__*/\n        React.createElement(BChart, {\n          graph: {\n            zoom: .8,\n            offsetX: 0.04,\n            offsetY: 0.05\n          },\n          width: 1100,\n          height: 800,\n          padding: 0 // optional value, number that set the padding between bubbles\n          ,\n          showLegend: true // optional value, pass false to disable the legend.\n          ,\n          legendPercentage: 15 // number that represent the % of with that legend going to use.\n          ,\n          legendFont: {\n            family: 'Arial',\n            size: 12,\n            color: '#000',\n            weight: 'bold'\n          },\n          valueFont: {\n            family: 'Arial',\n            size: 12,\n            color: '#fff',\n            weight: 'bold'\n          },\n          labelFont: {\n            family: 'Arial',\n            size: 16,\n            color: '#fff',\n            weight: 'bold'\n          } //Custom bubble/legend click functions such as searching using the label, redirecting to other page\n          ,\n          bubbleClickFunc: this.bubbleClick,\n          legendClickFun: this.legendClick,\n          data: this.state.data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        })\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }\n        }, \" Loading... \")\n      );\n    }\n  }\n\n}\n\nexport default CountriesIncomeBubbleChart;","map":{"version":3,"sources":["/Users/Parth/web-project/src/Components/CountriesIncomeBubbleChart.js"],"names":["React","Component","axios","BChart","Promises","CountriesIncomeBubbleChart","state","data","componentDidMount","country_incomes","promises","i","offset","push","get","then","res","results","j","all","setState","render","length","zoom","offsetX","offsetY","family","size","color","weight","bubbleClick","legendClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport BChart from '@weknow/react-bubble-chart-d3';\nimport Promises from 'es6-promise';\n\nclass CountriesIncomeBubbleChart extends Component{\n\n  state = {\n    data: []\n  };\n\n  componentDidMount() {\n\n    var country_incomes = [{\"label\" : \"Low\", \"value\" : 0}, {\"label\" : \"Middle\", \"value\" : 0}, {\"label\" : \"High\", \"value\" : 0}]\n    let promises = []\n\n    for (let i = 0; i < 25; i++) {\n        let offset = i*10\n        promises.push(\n        axios.get('https://api.pathogerm.com/countries/?offset=' + offset)\n        .then(res => {\n            const data = res.data;\n            const results = data.results;\n\n            for (let j = 0; j < 10; j++) {\n                if (results[j][\"incomelevel\"] === \"Low\") {\n                    country_incomes[0][\"value\"] += 1\n                } else if (results[j][\"incomelevel\"] === \"Middle\") {\n                    country_incomes[1][\"value\"] += 1\n                } else if (results[j][\"incomelevel\"] === \"High\") {\n                    country_incomes[2][\"value\"] += 1\n                }\n            }\n        }))\n    }\n\n    Promises.all(promises).then(() => this.setState({data : country_incomes}));\n  }\n\n\trender() {\n        \n        if (this.state.data.length > 0) {\n            return (\n\n                <BChart\n                  graph= {{\n                    zoom: .8,\n                    offsetX: 0.04,\n                    offsetY: 0.05,\n                  }}\n                  width={1100}\n                  height={800}\n                  padding={0} // optional value, number that set the padding between bubbles\n                  showLegend={true} // optional value, pass false to disable the legend.\n                  legendPercentage={15} // number that represent the % of with that legend going to use.\n                  legendFont={{\n                        family: 'Arial',\n                        size: 12,\n                        color: '#000',\n                        weight: 'bold',\n                      }}\n                  valueFont={{\n                        family: 'Arial',\n                        size: 12,\n                        color: '#fff',\n                        weight: 'bold',\n                      }}\n                  labelFont={{\n                        family: 'Arial',\n                        size: 16,\n                        color: '#fff',\n                        weight: 'bold',\n                      }}\n                  //Custom bubble/legend click functions such as searching using the label, redirecting to other page\n                  bubbleClickFunc={this.bubbleClick}\n                  legendClickFun={this.legendClick}\n                  data={this.state.data}\n                />\n          );\n\n        } else {\n            return <b> Loading... </b>\n        }\n\t}\n\n}\n\nexport default CountriesIncomeBubbleChart;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}