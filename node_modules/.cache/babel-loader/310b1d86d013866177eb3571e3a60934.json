{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove, TypeRegistrar } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { ensureEnum, toBrushCollection, fromBrushCollection, isValidProp, getModifiedProps, ensureBool, toSpinal, initializePropertiesFromCss, NamePatcher, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents a IgxDoughnutChartComponent base series.\n*/\n\nvar IgrRingSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrRingSeriesBase, _super);\n\n  function IgrRingSeriesBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._dataSource = null;\n    _this._tooltipTemplate = null;\n    _this._tooltipContent = null;\n    _this._tooltipContainerTemplate = null;\n    _this._showDefaultTooltip = false;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._propertyUpdated = null;\n    _this._propertyUpdated_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  IgrRingSeriesBase.prototype.createImplementation = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"dataSource\", {\n    get: function () {\n      return this._dataSource;\n    },\n    set: function (value) {\n      this._dataSource = value;\n      this.bindData();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.bindData = function () {\n    if (this.i != null && this.i !== undefined) {\n      this.i.itemsSource = this._dataSource;\n    }\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.onImplementationCreated = function () {};\n\n  IgrRingSeriesBase.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          {\n            this[p] = this.props[p];\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrRingSeriesBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrRingSeriesBase.prototype.render = function () {\n    return null;\n  };\n\n  IgrRingSeriesBase._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"legend\", {\n    get: function () {\n      if (this.i.legend != null) return this.i.legend.externalObject;\n    },\n    set: function (v) {\n      if (v != undefined && v != null) this.i.legend = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"tooltipTemplate\", {\n    get: function () {\n      return this._tooltipTemplate;\n    },\n    set: function (value) {\n      this._tooltipTemplate = value;\n\n      if (value == null) {\n        if (this._tooltipContent !== null) {\n          //this._tooltipContent.destroy();\n          this._tooltipContent = null;\n        }\n      }\n\n      if (this._tooltipContent != null) {\n        this._tooltipContent.template = this._tooltipTemplate;\n      } else {\n        if (this.owner != null) {\n          this.owner._ensureTooltipCreated(this);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"tooltipContainerTemplate\", {\n    get: function () {\n      return this._tooltipContainerTemplate;\n    },\n    set: function (value) {\n      this._tooltipContainerTemplate = value;\n\n      if (this._tooltipContent != null) {\n        this._tooltipContent.instance.containerTemplate = this._tooltipContainerTemplate;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype._ensureTooltipCreated = function (createTooltip, createWrapper) {\n    if (this._tooltipTemplate == null) {\n      this.i.toolTip = null;\n    }\n\n    if (this._tooltipContent == null && this._tooltipTemplate != null) {\n      var tooltip = createTooltip();\n\n      if (tooltip == null) {\n        return;\n      }\n\n      this._tooltipContent = tooltip;\n      tooltip.tooltipTemplate = this._tooltipTemplate;\n      this.i.toolTip = createWrapper(tooltip);\n    }\n  };\n\n  IgrRingSeriesBase.prototype._ensureTooltipDestroyed = function () {\n    if (this._tooltipContent !== null) {\n      //this._tooltipContent.destroy();\n      this._tooltipContent = null;\n    }\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"showDefaultTooltip\", {\n    /**\n     * Gets or sets whether default tooltip will be shown.\n    */\n    get: function () {\n      return this._showDefaultTooltip;\n    },\n    set: function (v) {\n      this._showDefaultTooltip = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.sychronizeCollections = function () {};\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"valueMemberPath\", {\n    /**\n    * Gets or Sets the property name that contains the values.\n    */\n    get: function () {\n      return this.i.b9;\n    },\n    set: function (v) {\n      this.i.b9 = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"labelMemberPath\", {\n    /**\n     * Gets or sets the property name that contains the labels.\n    */\n    get: function () {\n      return this.i.bg;\n    },\n    set: function (v) {\n      this.i.bg = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"legendLabelMemberPath\", {\n    /**\n     * Gets or sets the property name that contains the legend labels.\n    */\n    get: function () {\n      return this.i.br;\n    },\n    set: function (v) {\n      this.i.br = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"labelsPosition\", {\n    /**\n     * Gets or sets the position of chart labels.\n    */\n    get: function () {\n      return this.i.aj;\n    },\n    set: function (v) {\n      this.i.aj = ensureEnum(LabelsPosition_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineVisibility\", {\n    /**\n     * Gets or sets whether the leader lines are visible.\n    */\n    get: function () {\n      return this.i.dw;\n    },\n    set: function (v) {\n      this.i.dw = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.dr ? this.i.dr.fill : null;\n    },\n    set: function (v) {\n      this.ensureLeaderLineStyle();\n      this.i.dr.fill = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.dr ? this.i.dr.stroke : null;\n    },\n    set: function (v) {\n      this.ensureLeaderLineStyle();\n      this.i.dr.stroke = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.dr ? this.i.dr.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureLeaderLineStyle();\n      this.i.dr.strokeThickness = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.dr ? this.i.dr.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureLeaderLineStyle();\n      this.i.dr.opacity = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.ensureLeaderLineStyle = function () {\n    if (this.i.dr) {\n      return;\n    }\n\n    this.i.dr = new Style();\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineType\", {\n    /**\n     * Gets or sets what type of leader lines will be used for the outside end labels.\n    */\n    get: function () {\n      return this.i.ak;\n    },\n    set: function (v) {\n      this.i.ak = ensureEnum(LeaderLineType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineMargin\", {\n    /**\n     * Gets or sets the margin between a label and its leader line. The default is 6 pixels.\n    */\n    get: function () {\n      return this.i.a1;\n    },\n    set: function (v) {\n      this.i.a1 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryThreshold\", {\n    /**\n     * Gets or sets the threshold value that determines if slices are grouped into the Others slice.\n    */\n    get: function () {\n      return this.i.a2;\n    },\n    set: function (v) {\n      this.i.a2 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryType\", {\n    /**\n     * Gets or sets whether to use numeric or percent-based threshold value.\n    */\n    get: function () {\n      return this.i.al;\n    },\n    set: function (v) {\n      this.i.al = ensureEnum(OthersCategoryType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryText\", {\n    /**\n     * Gets or sets the label of the Others slice.\n    */\n    get: function () {\n      return this.i.bv;\n    },\n    set: function (v) {\n      this.i.bv = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"formatLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n    */\n    get: function () {\n      return this.i.am;\n    },\n    set: function (v) {\n      this.i.am = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"formatLegendLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart's legend.\n    */\n    get: function () {\n      return this.i.an;\n    },\n    set: function (v) {\n      this.i.an = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"labelExtent\", {\n    /**\n     * Gets or sets the pixel amount by which the labels are offset from the edge of the slices.\n    */\n    get: function () {\n      return this.i.a0;\n    },\n    set: function (v) {\n      this.i.a0 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"startAngle\", {\n    /**\n     * Gets or sets the starting angle of the chart.\n     * The default zero value is equivalent to 3 o'clock.\n    */\n    get: function () {\n      return this.i.a4;\n    },\n    set: function (v) {\n      this.i.a4 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.ds ? this.i.ds.fill : null;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.ds.fill = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.ds ? this.i.ds.stroke : null;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.ds.stroke = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.ds ? this.i.ds.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.ds.strokeThickness = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.ds ? this.i.ds.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.ds.opacity = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.ensureOthersCategoryStyle = function () {\n    if (this.i.ds) {\n      return;\n    }\n\n    this.i.ds = new Style();\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.dt ? this.i.dt.fill : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.dt.fill = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.dt ? this.i.dt.stroke : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.dt.stroke = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.dt ? this.i.dt.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.dt.strokeThickness = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.dt ? this.i.dt.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.dt.opacity = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.ensureSelectedStyle = function () {\n    if (this.i.dt) {\n      return;\n    }\n\n    this.i.dt = new Style();\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"brushes\", {\n    /**\n     * Gets or sets the palette of brushes to use for coloring the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.ag);\n    },\n    set: function (v) {\n      this.i.ag = toBrushCollection(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"outlines\", {\n    /**\n     * Gets or sets the palette of brushes to use for outlines on the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.ah);\n    },\n    set: function (v) {\n      this.i.ah = toBrushCollection(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"labelOuterColor\", {\n    /**\n     * Gets or sets the color for labels rendered outside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.dp);\n    },\n    set: function (v) {\n      this.i.dp = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"labelInnerColor\", {\n    /**\n     * Gets or sets the color for labels rendered inside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.dn);\n    },\n    set: function (v) {\n      this.i.dn = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"isSurfaceInteractionDisabled\", {\n    /**\n     * Gets or sets whether all surface interactions with the plot area should be disabled.\n    */\n    get: function () {\n      return this.i.ax;\n    },\n    set: function (v) {\n      this.i.ax = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"radiusFactor\", {\n    /**\n     * Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.\n    */\n    get: function () {\n      return this.i.a3;\n    },\n    set: function (v) {\n      this.i.a3 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeriesBase.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrRingSeriesBase.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"RingSeriesBase\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n  * Called by the UI framework to provide a UI container for rendering this control.\n  * @param container  * The UI container element.\n  */\n\n\n  IgrRingSeriesBase.prototype.provideContainer = function (container) {\n    this.i.cm(container);\n  };\n\n  Object.defineProperty(IgrRingSeriesBase.prototype, \"propertyUpdated\", {\n    /**\n     * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n    */\n    get: function () {\n      return this._propertyUpdated;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._propertyUpdated_wrapped !== null) {\n        this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        this._propertyUpdated_wrapped = null;\n        this._propertyUpdated = null;\n      }\n\n      this._propertyUpdated = ev;\n\n      this._propertyUpdated_wrapped = function (o, e) {\n        var outerArgs = new IgrPropertyUpdatedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforePropertyUpdated) {\n          _this.beforePropertyUpdated(_this, outerArgs);\n        }\n\n        if (_this._propertyUpdated) {\n          _this._propertyUpdated(_this, outerArgs);\n        }\n      };\n\n      this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrRingSeriesBase;\n}(React.Component);\n\nexport { IgrRingSeriesBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-ring-series-base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove, TypeRegistrar } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { ensureEnum, toBrushCollection, fromBrushCollection, isValidProp, getModifiedProps, ensureBool, toSpinal, initializePropertiesFromCss, NamePatcher, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents a IgxDoughnutChartComponent base series.\n*/\nvar IgrRingSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrRingSeriesBase, _super);\n    function IgrRingSeriesBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._dataSource = null;\n        _this._tooltipTemplate = null;\n        _this._tooltipContent = null;\n        _this._tooltipContainerTemplate = null;\n        _this._showDefaultTooltip = false;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._propertyUpdated = null;\n        _this._propertyUpdated_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    IgrRingSeriesBase.prototype.createImplementation = function () {\n        return null;\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"dataSource\", {\n        get: function () {\n            return this._dataSource;\n        },\n        set: function (value) {\n            this._dataSource = value;\n            this.bindData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.bindData = function () {\n        if (this.i != null && this.i !== undefined) {\n            this.i.itemsSource = this._dataSource;\n        }\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.onImplementationCreated = function () {\n    };\n    IgrRingSeriesBase.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    {\n                        this[p] = this.props[p];\n                    }\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrRingSeriesBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrRingSeriesBase.prototype.render = function () {\n        return null;\n    };\n    IgrRingSeriesBase._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"legend\", {\n        get: function () {\n            if (this.i.legend != null)\n                return this.i.legend.externalObject;\n        },\n        set: function (v) {\n            if (v != undefined && v != null)\n                this.i.legend = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"tooltipTemplate\", {\n        get: function () {\n            return this._tooltipTemplate;\n        },\n        set: function (value) {\n            this._tooltipTemplate = value;\n            if (value == null) {\n                if (this._tooltipContent !== null) {\n                    //this._tooltipContent.destroy();\n                    this._tooltipContent = null;\n                }\n            }\n            if (this._tooltipContent != null) {\n                this._tooltipContent.template = this._tooltipTemplate;\n            }\n            else {\n                if (this.owner != null) {\n                    this.owner._ensureTooltipCreated(this);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"tooltipContainerTemplate\", {\n        get: function () {\n            return this._tooltipContainerTemplate;\n        },\n        set: function (value) {\n            this._tooltipContainerTemplate = value;\n            if (this._tooltipContent != null) {\n                this._tooltipContent.instance.containerTemplate = this._tooltipContainerTemplate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype._ensureTooltipCreated = function (createTooltip, createWrapper) {\n        if (this._tooltipTemplate == null) {\n            this.i.toolTip = null;\n        }\n        if (this._tooltipContent == null && this._tooltipTemplate != null) {\n            var tooltip = createTooltip();\n            if (tooltip == null) {\n                return;\n            }\n            this._tooltipContent = tooltip;\n            tooltip.tooltipTemplate = this._tooltipTemplate;\n            this.i.toolTip = createWrapper(tooltip);\n        }\n    };\n    IgrRingSeriesBase.prototype._ensureTooltipDestroyed = function () {\n        if (this._tooltipContent !== null) {\n            //this._tooltipContent.destroy();\n            this._tooltipContent = null;\n        }\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"showDefaultTooltip\", {\n        /**\n         * Gets or sets whether default tooltip will be shown.\n        */\n        get: function () {\n            return this._showDefaultTooltip;\n        },\n        set: function (v) {\n            this._showDefaultTooltip = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.sychronizeCollections = function () { };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"valueMemberPath\", {\n        /**\n     * Gets or Sets the property name that contains the values.\n    */\n        get: function () {\n            return this.i.b9;\n        },\n        set: function (v) {\n            this.i.b9 = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"labelMemberPath\", {\n        /**\n         * Gets or sets the property name that contains the labels.\n        */\n        get: function () {\n            return this.i.bg;\n        },\n        set: function (v) {\n            this.i.bg = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"legendLabelMemberPath\", {\n        /**\n         * Gets or sets the property name that contains the legend labels.\n        */\n        get: function () {\n            return this.i.br;\n        },\n        set: function (v) {\n            this.i.br = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"labelsPosition\", {\n        /**\n         * Gets or sets the position of chart labels.\n        */\n        get: function () {\n            return this.i.aj;\n        },\n        set: function (v) {\n            this.i.aj = ensureEnum(LabelsPosition_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineVisibility\", {\n        /**\n         * Gets or sets whether the leader lines are visible.\n        */\n        get: function () {\n            return this.i.dw;\n        },\n        set: function (v) {\n            this.i.dw = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.dr ? this.i.dr.fill : null;\n        },\n        set: function (v) {\n            this.ensureLeaderLineStyle();\n            this.i.dr.fill = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.dr ? this.i.dr.stroke : null;\n        },\n        set: function (v) {\n            this.ensureLeaderLineStyle();\n            this.i.dr.stroke = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.dr ? this.i.dr.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureLeaderLineStyle();\n            this.i.dr.strokeThickness = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.dr ? this.i.dr.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureLeaderLineStyle();\n            this.i.dr.opacity = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.ensureLeaderLineStyle = function () {\n        if (this.i.dr) {\n            return;\n        }\n        this.i.dr = new Style();\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineType\", {\n        /**\n         * Gets or sets what type of leader lines will be used for the outside end labels.\n        */\n        get: function () {\n            return this.i.ak;\n        },\n        set: function (v) {\n            this.i.ak = ensureEnum(LeaderLineType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"leaderLineMargin\", {\n        /**\n         * Gets or sets the margin between a label and its leader line. The default is 6 pixels.\n        */\n        get: function () {\n            return this.i.a1;\n        },\n        set: function (v) {\n            this.i.a1 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryThreshold\", {\n        /**\n         * Gets or sets the threshold value that determines if slices are grouped into the Others slice.\n        */\n        get: function () {\n            return this.i.a2;\n        },\n        set: function (v) {\n            this.i.a2 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryType\", {\n        /**\n         * Gets or sets whether to use numeric or percent-based threshold value.\n        */\n        get: function () {\n            return this.i.al;\n        },\n        set: function (v) {\n            this.i.al = ensureEnum(OthersCategoryType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryText\", {\n        /**\n         * Gets or sets the label of the Others slice.\n        */\n        get: function () {\n            return this.i.bv;\n        },\n        set: function (v) {\n            this.i.bv = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"formatLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n        */\n        get: function () {\n            return this.i.am;\n        },\n        set: function (v) {\n            this.i.am = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"formatLegendLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart's legend.\n        */\n        get: function () {\n            return this.i.an;\n        },\n        set: function (v) {\n            this.i.an = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"labelExtent\", {\n        /**\n         * Gets or sets the pixel amount by which the labels are offset from the edge of the slices.\n        */\n        get: function () {\n            return this.i.a0;\n        },\n        set: function (v) {\n            this.i.a0 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"startAngle\", {\n        /**\n         * Gets or sets the starting angle of the chart.\n         * The default zero value is equivalent to 3 o'clock.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.ds ? this.i.ds.fill : null;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.ds.fill = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.ds ? this.i.ds.stroke : null;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.ds.stroke = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.ds ? this.i.ds.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.ds.strokeThickness = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"othersCategoryOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.ds ? this.i.ds.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.ds.opacity = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.ensureOthersCategoryStyle = function () {\n        if (this.i.ds) {\n            return;\n        }\n        this.i.ds = new Style();\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.dt ? this.i.dt.fill : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.dt.fill = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.dt ? this.i.dt.stroke : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.dt.stroke = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.dt ? this.i.dt.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.dt.strokeThickness = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"selectedSliceOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.dt ? this.i.dt.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.dt.opacity = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.ensureSelectedStyle = function () {\n        if (this.i.dt) {\n            return;\n        }\n        this.i.dt = new Style();\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"brushes\", {\n        /**\n         * Gets or sets the palette of brushes to use for coloring the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.ag);\n        },\n        set: function (v) {\n            this.i.ag = toBrushCollection(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"outlines\", {\n        /**\n         * Gets or sets the palette of brushes to use for outlines on the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.ah);\n        },\n        set: function (v) {\n            this.i.ah = toBrushCollection(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"labelOuterColor\", {\n        /**\n         * Gets or sets the color for labels rendered outside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.dp);\n        },\n        set: function (v) {\n            this.i.dp = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"labelInnerColor\", {\n        /**\n         * Gets or sets the color for labels rendered inside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.dn);\n        },\n        set: function (v) {\n            this.i.dn = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"isSurfaceInteractionDisabled\", {\n        /**\n         * Gets or sets whether all surface interactions with the plot area should be disabled.\n        */\n        get: function () {\n            return this.i.ax;\n        },\n        set: function (v) {\n            this.i.ax = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"radiusFactor\", {\n        /**\n         * Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.\n        */\n        get: function () {\n            return this.i.a3;\n        },\n        set: function (v) {\n            this.i.a3 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeriesBase.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrRingSeriesBase.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"RingSeriesBase\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n * Called by the UI framework to provide a UI container for rendering this control.\n\r\n* @param container  * The UI container element.\n*/\n    IgrRingSeriesBase.prototype.provideContainer = function (container) {\n        this.i.cm(container);\n    };\n    Object.defineProperty(IgrRingSeriesBase.prototype, \"propertyUpdated\", {\n        /**\n         * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n        */\n        get: function () {\n            return this._propertyUpdated;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._propertyUpdated_wrapped !== null) {\n                this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n                this._propertyUpdated_wrapped = null;\n                this._propertyUpdated = null;\n            }\n            this._propertyUpdated = ev;\n            this._propertyUpdated_wrapped = function (o, e) {\n                var outerArgs = new IgrPropertyUpdatedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforePropertyUpdated) {\n                    _this.beforePropertyUpdated(_this, outerArgs);\n                }\n                if (_this._propertyUpdated) {\n                    _this._propertyUpdated(_this, outerArgs);\n                }\n            };\n            this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrRingSeriesBase;\n}(React.Component));\nexport { IgrRingSeriesBase };\n//# sourceMappingURL=igr-ring-series-base.js.map\n"]},"metadata":{},"sourceType":"module"}