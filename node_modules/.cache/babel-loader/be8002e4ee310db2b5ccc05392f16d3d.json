{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { HorizontalAxisLabelPanelBase } from \"./HorizontalAxisLabelPanelBase\";\nimport { Number_$type, fromEnum, Boolean_$type, markType } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { HorizontalAxisLabelPanelBaseView } from \"./HorizontalAxisLabelPanelBaseView\";\nimport { TransformGroup } from \"igniteui-react-core\";\nimport { RotateTransform } from \"igniteui-react-core\";\nimport { TranslateTransform } from \"igniteui-react-core\";\nimport { ViewportUtils } from \"./ViewportUtils\";\n/**\n * @hidden\n */\n\nvar RadialAxisLabelPanel =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RadialAxisLabelPanel, _super);\n\n  function RadialAxisLabelPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dh = null;\n    _this.de = 0;\n    _this.dd = new List$1(Number_$type, 0);\n    return _this;\n  }\n\n  RadialAxisLabelPanel.prototype.ad = function () {\n    return new RadialAxisLabelPanelView(this);\n  };\n\n  RadialAxisLabelPanel.prototype.b8 = function (a) {\n    _super.prototype.b8.call(this, a);\n\n    this.da = a;\n  };\n\n  Object.defineProperty(RadialAxisLabelPanel.prototype, \"dc\", {\n    get: function () {\n      return this.ac.aw != null && this.ac.aw.c != 5 && this.ac.aw.c != 4;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RadialAxisLabelPanel.prototype, \"db\", {\n    get: function () {\n      return !this.dc;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RadialAxisLabelPanel.prototype.cv = function () {\n    return this.am && (!this.ap || this.bd() == -180);\n  };\n\n  RadialAxisLabelPanel.prototype.cw = function () {\n    return !this.aq;\n  };\n\n  RadialAxisLabelPanel.prototype.bt = function (a) {\n    _super.prototype.bt.call(this, a);\n\n    if (this.de % 360 == 0 || this.dc) {\n      this.da.a3();\n    } else {\n      this.da.a2(a);\n    }\n  };\n\n  RadialAxisLabelPanel.prototype.bd = function () {\n    var a = _super.prototype.bd.call(this);\n\n    if (this.db) {\n      a -= this.de * 180 / Math.PI;\n    }\n\n    return a;\n  };\n\n  RadialAxisLabelPanel.prototype.cu = function () {\n    return this.bd() % 360 != 0;\n  };\n\n  RadialAxisLabelPanel.prototype.ct = function () {\n    if (this.dc) {\n      return true;\n    }\n\n    var a = this.de * 180 / Math.PI;\n\n    if (a < 30 || a > 330 || a > 150 && a < 210) {\n      return true;\n    }\n\n    return false;\n  };\n\n  RadialAxisLabelPanel.prototype.cb = function (a, b) {\n    var c = b * Math.PI / 180;\n    var d = Math.abs(Math.sin(c));\n\n    if (this.ac.aw != null && this.ac.aw.c == 4) {\n      d = d * -1;\n    }\n\n    this.da.a4(a, b, d);\n  };\n\n  RadialAxisLabelPanel.prototype.dg = function () {\n    var e_1, _a;\n\n    var a = 1.7976931348623157E+308;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.a2)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        a = Math.min(b.c, a);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return a;\n  };\n\n  RadialAxisLabelPanel.prototype.df = function () {\n    var e_2, _a;\n\n    var a = -1.7976931348623157E+308;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.a2)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n        a = Math.max(b.c, a);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return a;\n  };\n\n  RadialAxisLabelPanel.prototype.c8 = function (a, b) {\n    var c;\n\n    if (this.ac.b8) {\n      c = this.dg();\n    } else {\n      c = this.df();\n    }\n\n    var d = new List$1(Number_$type, 0);\n    var e = new List$1(Boolean_$type, 0);\n\n    for (var f = 0; f < this.a2.count; f++) {\n      var g = this.a2._inner[f];\n\n      if (g.c == c && !g.a) {\n        d.add(this.a2.indexOf(g));\n      }\n    }\n\n    this.dd = d;\n    var h = new List$1(Rect.$, 0);\n\n    for (var i = 0; i < a.count; i++) {\n      var j = a._inner[i];\n      var k = this.a2._inner[i].a;\n\n      if (!this.dd.contains(i)) {\n        h.add(j);\n        e.add(k);\n      }\n    }\n\n    this.am = this.al(h, e);\n  };\n\n  RadialAxisLabelPanel.prototype.ao = function (a, b) {\n    if (this.dd.contains(a)) {\n      return false;\n    } else {\n      return _super.prototype.ao.call(this, a, b);\n    }\n  };\n\n  RadialAxisLabelPanel.prototype.c9 = function () {\n    this.dd = new List$1(Number_$type, 0);\n\n    _super.prototype.c9.call(this);\n  };\n\n  RadialAxisLabelPanel.prototype.ah = function () {\n    return 5;\n  };\n\n  RadialAxisLabelPanel.prototype.as = function (a) {\n    return a == 5 || a == 4 || a == 1 || a == 0;\n  };\n\n  RadialAxisLabelPanel.prototype.b0 = function () {};\n\n  RadialAxisLabelPanel.$t = markType(RadialAxisLabelPanel, 'RadialAxisLabelPanel', HorizontalAxisLabelPanelBase.$);\n  return RadialAxisLabelPanel;\n}(HorizontalAxisLabelPanelBase);\n\nexport { RadialAxisLabelPanel };\n/**\n * @hidden\n */\n\nvar RadialAxisLabelPanelView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RadialAxisLabelPanelView, _super);\n\n  function RadialAxisLabelPanelView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.a1 = null;\n    _this.a1 = a;\n    return _this;\n  }\n\n  RadialAxisLabelPanelView.prototype.a4 = function (a, b, c) {\n    var d = this.m(a);\n    var e = this.l(a);\n    var f = new TransformGroup();\n    f.j.add(function () {\n      var $ret = new RotateTransform();\n      $ret.j = b;\n      $ret.k = d / 2;\n      $ret.l = e / 2;\n      return $ret;\n    }());\n    f.j.add(function () {\n      var $ret = new TranslateTransform();\n      $ret.j = d / -2;\n      $ret.k = d / 2 * c;\n      return $ret;\n    }());\n    a.j = f;\n  };\n\n  RadialAxisLabelPanelView.prototype.a3 = function () {\n    this.a.j = null;\n  };\n\n  RadialAxisLabelPanelView.prototype.a2 = function (a) {\n    var _this = this;\n\n    var b = ViewportUtils.f(0.5, this.a.cp, this.a.co);\n\n    this.a.j = function () {\n      var $ret = new RotateTransform();\n      $ret.j = _this.a1.de * 180 / Math.PI;\n      $ret.k = _this.a1.dh.x;\n      $ret.l = _this.a1.dh.y * a.height + b;\n      return $ret;\n    }();\n  };\n\n  RadialAxisLabelPanelView.prototype.al = function () {\n    _super.prototype.al.call(this);\n\n    this.a.cq(new Size(1, this.a.cn.width, this.a.cn.height));\n  };\n\n  RadialAxisLabelPanelView.$t = markType(RadialAxisLabelPanelView, 'RadialAxisLabelPanelView', HorizontalAxisLabelPanelBaseView.$);\n  return RadialAxisLabelPanelView;\n}(HorizontalAxisLabelPanelBaseView);\n\nexport { RadialAxisLabelPanelView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/RadialAxisLabelPanel_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { HorizontalAxisLabelPanelBase } from \"./HorizontalAxisLabelPanelBase\";\nimport { Number_$type, fromEnum, Boolean_$type, markType } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { HorizontalAxisLabelPanelBaseView } from \"./HorizontalAxisLabelPanelBaseView\";\nimport { TransformGroup } from \"igniteui-react-core\";\nimport { RotateTransform } from \"igniteui-react-core\";\nimport { TranslateTransform } from \"igniteui-react-core\";\nimport { ViewportUtils } from \"./ViewportUtils\";\n/**\n * @hidden\n */\nvar RadialAxisLabelPanel = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RadialAxisLabelPanel, _super);\n    function RadialAxisLabelPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dh = null;\n        _this.de = 0;\n        _this.dd = new List$1(Number_$type, 0);\n        return _this;\n    }\n    RadialAxisLabelPanel.prototype.ad = function () {\n        return new RadialAxisLabelPanelView(this);\n    };\n    RadialAxisLabelPanel.prototype.b8 = function (a) {\n        _super.prototype.b8.call(this, a);\n        this.da = a;\n    };\n    Object.defineProperty(RadialAxisLabelPanel.prototype, \"dc\", {\n        get: function () {\n            return this.ac.aw != null && (this.ac.aw.c != 5 && this.ac.aw.c != 4);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadialAxisLabelPanel.prototype, \"db\", {\n        get: function () {\n            return !this.dc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadialAxisLabelPanel.prototype.cv = function () {\n        return this.am && (!this.ap || this.bd() == -180);\n    };\n    RadialAxisLabelPanel.prototype.cw = function () {\n        return !this.aq;\n    };\n    RadialAxisLabelPanel.prototype.bt = function (a) {\n        _super.prototype.bt.call(this, a);\n        if (this.de % 360 == 0 || this.dc) {\n            this.da.a3();\n        }\n        else {\n            this.da.a2(a);\n        }\n    };\n    RadialAxisLabelPanel.prototype.bd = function () {\n        var a = _super.prototype.bd.call(this);\n        if (this.db) {\n            a -= (this.de * 180) / Math.PI;\n        }\n        return a;\n    };\n    RadialAxisLabelPanel.prototype.cu = function () {\n        return this.bd() % 360 != 0;\n    };\n    RadialAxisLabelPanel.prototype.ct = function () {\n        if (this.dc) {\n            return true;\n        }\n        var a = this.de * 180 / Math.PI;\n        if (a < 30 || a > 330 || (a > 150 && a < 210)) {\n            return true;\n        }\n        return false;\n    };\n    RadialAxisLabelPanel.prototype.cb = function (a, b) {\n        var c = b * Math.PI / 180;\n        var d = Math.abs(Math.sin(c));\n        if (this.ac.aw != null && this.ac.aw.c == 4) {\n            d = d * -1;\n        }\n        this.da.a4(a, b, d);\n    };\n    RadialAxisLabelPanel.prototype.dg = function () {\n        var e_1, _a;\n        var a = 1.7976931348623157E+308;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.a2)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var b = _c.value;\n                a = Math.min(b.c, a);\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return a;\n    };\n    RadialAxisLabelPanel.prototype.df = function () {\n        var e_2, _a;\n        var a = -1.7976931348623157E+308;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.a2)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var b = _c.value;\n                a = Math.max(b.c, a);\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return a;\n    };\n    RadialAxisLabelPanel.prototype.c8 = function (a, b) {\n        var c;\n        if (this.ac.b8) {\n            c = this.dg();\n        }\n        else {\n            c = this.df();\n        }\n        var d = new List$1(Number_$type, 0);\n        var e = new List$1(Boolean_$type, 0);\n        for (var f = 0; f < this.a2.count; f++) {\n            var g = this.a2._inner[f];\n            if (g.c == c && !g.a) {\n                d.add(this.a2.indexOf(g));\n            }\n        }\n        this.dd = d;\n        var h = new List$1(Rect.$, 0);\n        for (var i = 0; i < a.count; i++) {\n            var j = a._inner[i];\n            var k = this.a2._inner[i].a;\n            if (!this.dd.contains(i)) {\n                h.add(j);\n                e.add(k);\n            }\n        }\n        this.am = this.al(h, e);\n    };\n    RadialAxisLabelPanel.prototype.ao = function (a, b) {\n        if (this.dd.contains(a)) {\n            return false;\n        }\n        else {\n            return _super.prototype.ao.call(this, a, b);\n        }\n    };\n    RadialAxisLabelPanel.prototype.c9 = function () {\n        this.dd = new List$1(Number_$type, 0);\n        _super.prototype.c9.call(this);\n    };\n    RadialAxisLabelPanel.prototype.ah = function () {\n        return 5;\n    };\n    RadialAxisLabelPanel.prototype.as = function (a) {\n        return a == 5 || a == 4 || a == 1 || a == 0;\n    };\n    RadialAxisLabelPanel.prototype.b0 = function () {\n    };\n    RadialAxisLabelPanel.$t = markType(RadialAxisLabelPanel, 'RadialAxisLabelPanel', HorizontalAxisLabelPanelBase.$);\n    return RadialAxisLabelPanel;\n}(HorizontalAxisLabelPanelBase));\nexport { RadialAxisLabelPanel };\n/**\n * @hidden\n */\nvar RadialAxisLabelPanelView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RadialAxisLabelPanelView, _super);\n    function RadialAxisLabelPanelView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.a1 = null;\n        _this.a1 = a;\n        return _this;\n    }\n    RadialAxisLabelPanelView.prototype.a4 = function (a, b, c) {\n        var d = this.m(a);\n        var e = this.l(a);\n        var f = new TransformGroup();\n        f.j.add(((function () {\n            var $ret = new RotateTransform();\n            $ret.j = b;\n            $ret.k = d / 2;\n            $ret.l = e / 2;\n            return $ret;\n        })()));\n        f.j.add(((function () {\n            var $ret = new TranslateTransform();\n            $ret.j = d / -2;\n            $ret.k = d / 2 * c;\n            return $ret;\n        })()));\n        a.j = f;\n    };\n    RadialAxisLabelPanelView.prototype.a3 = function () {\n        this.a.j = null;\n    };\n    RadialAxisLabelPanelView.prototype.a2 = function (a) {\n        var _this = this;\n        var b = ViewportUtils.f(0.5, this.a.cp, this.a.co);\n        this.a.j = ((function () {\n            var $ret = new RotateTransform();\n            $ret.j = (_this.a1.de * 180) / Math.PI;\n            $ret.k = _this.a1.dh.x;\n            $ret.l = (_this.a1.dh.y * a.height) + b;\n            return $ret;\n        })());\n    };\n    RadialAxisLabelPanelView.prototype.al = function () {\n        _super.prototype.al.call(this);\n        this.a.cq(new Size(1, this.a.cn.width, this.a.cn.height));\n    };\n    RadialAxisLabelPanelView.$t = markType(RadialAxisLabelPanelView, 'RadialAxisLabelPanelView', HorizontalAxisLabelPanelBaseView.$);\n    return RadialAxisLabelPanelView;\n}(HorizontalAxisLabelPanelBaseView));\nexport { RadialAxisLabelPanelView };\n//# sourceMappingURL=RadialAxisLabelPanel_combined.js.map\n"]},"metadata":{},"sourceType":"module"}