{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, Point_$type, fromEnum, markType, getEnumerator } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { Clipper } from \"igniteui-react-core\";\nimport { AngleRadiusPair } from \"./AngleRadiusPair\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { SpiralFlattener } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PolarLinePlanner =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarLinePlanner, _super);\n\n  function PolarLinePlanner() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = false;\n    _this.b = 0;\n    _this.m = null;\n    _this.n = null;\n    _this.o = null;\n    _this.p = null;\n    _this.l = 0;\n    _this.q = 0;\n    _this.z = null;\n    _this.aa = null;\n    _this.a = null;\n    _this.c = false;\n    _this.d = false;\n    _this.i = null;\n    return _this;\n  }\n\n  Object.defineProperty(PolarLinePlanner.prototype, \"ab\", {\n    get: function () {\n      return this.z;\n    },\n    set: function (a) {\n      this.z = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PolarLinePlanner.prototype, \"ac\", {\n    get: function () {\n      return this.aa;\n    },\n    set: function (a) {\n      this.aa = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PolarLinePlanner.prototype.g = function () {\n    if (this.m == null || this.n == null || this.o == null || this.p == null || Rect.l_op_Equality(this.ab, Rect.empty) || Rect.l_op_Equality(this.ac, Rect.empty)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  PolarLinePlanner.prototype.k = function (a, b, c, d) {\n    var e = a(d) - a(c);\n    var f = b(d) - b(c);\n    return e * e + f * f;\n  };\n\n  PolarLinePlanner.prototype.h = function (a) {\n    var b = new List$1(AngleRadiusPair.$, 0);\n    var c = this.l * this.l;\n    var d;\n\n    if (a != null) {\n      d = a;\n    } else {\n      var e = new List$1(Number_$type, 0);\n\n      for (var f = 0; f < this.q; f++) {\n        e.add(f);\n      }\n\n      d = e;\n    }\n\n    var g = getEnumerator(d);\n    var h = true;\n    h = g.moveNext();\n    var i = 0;\n\n    if (h) {\n      i = g.current;\n    }\n\n    while (h) {\n      var j = i;\n      h = g.moveNext();\n      i = g.current;\n\n      while (h && this.k(this.o, this.p, j, i) < c) {\n        h = g.moveNext();\n        i = g.current;\n      }\n\n      var k = new AngleRadiusPair();\n      k.c = j;\n\n      if (!this.f) {\n        k.a = this.m(j);\n        k.b = this.n(j);\n      }\n\n      b.add(k);\n    }\n\n    return b;\n  };\n\n  PolarLinePlanner.prototype.v = function (a) {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.h(a))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n\n        if (isNaN_(b.a) || isInfinity(b.a) || isNaN_(b.b) || isInfinity(b.b)) {\n          this.s({\n            $type: Point_$type,\n            x: NaN,\n            y: NaN\n          });\n          continue;\n        }\n\n        this.s({\n          $type: Point_$type,\n          x: this.o(b.c),\n          y: this.p(b.c)\n        });\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  PolarLinePlanner.prototype.j = function () {\n    return Math.pow(this.l / Math.max(this.ab.width / this.ac.width, this.ab.height / this.ac.height), 2);\n  };\n\n  PolarLinePlanner.prototype.r = function (a, b) {\n    var c = 0.5 + b * Math.cos(a);\n    var d = 0.5 + b * Math.sin(a);\n    c = this.z.left + this.z.width * (c - this.aa.left) / this.aa.width;\n    d = this.z.top + this.z.height * (d - this.aa.top) / this.aa.height;\n    this.s({\n      $type: Point_$type,\n      x: c,\n      y: d\n    });\n  };\n\n  PolarLinePlanner.prototype.y = function (a) {\n    var b = this.j();\n    var c = this.h(a);\n    var d = c.item(0).a;\n    var e = c.item(0).b;\n    var f = c.item(0).c;\n\n    for (var g = 1; g < c.count; g++) {\n      var h = c.item(g).a;\n      var i = c.item(g).b;\n      var j = c.item(g).c;\n\n      if (isNaN_(h) || isInfinity(h) || isNaN_(i) || isInfinity(i)) {\n        this.s({\n          $type: Point_$type,\n          x: NaN,\n          y: NaN\n        });\n\n        if (this.b != 0) {\n          g++;\n\n          if (g < c.count) {\n            d = c.item(g).a;\n            e = c.item(g).b;\n          }\n        }\n\n        continue;\n      }\n\n      this.t(h, i, d, e, g, b, f > j);\n      d = h;\n      e = i;\n      f = j;\n    }\n  };\n\n  PolarLinePlanner.prototype.t = function (a, b, c, d, e, f, g) {\n    var h = false;\n\n    if (a < c && !g || a > c && g) {\n      h = true;\n      var i = a;\n      a = c;\n      c = i;\n      i = b;\n      b = d;\n      d = i;\n    }\n\n    var j = SpiralFlattener.a(c, d, a, b, f);\n\n    if (h) {\n      var k = new List$1(Number_$type, 2, j.count);\n\n      for (var l = j.count - 1; l >= 0; l--) {\n        k.add(j._inner[l]);\n      }\n\n      j = k;\n    }\n\n    for (var m = 0; m < j.count; m++) {\n      var n = j._inner[m];\n      var o = c + n * (a - c);\n      var p = d + n * (b - d);\n      this.r(o, p);\n    }\n  };\n\n  PolarLinePlanner.prototype.u = function (a) {\n    var _this = this;\n\n    var b = this.ab.top - 10;\n    var c = this.ab.bottom + 10;\n    var d = this.ab.left - 10;\n    var e = this.ab.right + 10;\n\n    if (this.a == null) {\n      this.a = function () {\n        var $ret = new Clipper(1, d, c, e, b, _this.d);\n        $ret.i = a;\n        return $ret;\n      }();\n    }\n  };\n\n  PolarLinePlanner.prototype.e = function (a) {\n    return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\n  };\n\n  PolarLinePlanner.prototype.s = function (a) {\n    if (this.b == 0 && !this.e(a)) {\n      return;\n    }\n\n    if (this.c) {\n      this.i.add(a);\n    } else {\n      this.a.j(a);\n    }\n  };\n\n  PolarLinePlanner.prototype.w = function (a) {\n    this.x(null, null);\n  };\n\n  PolarLinePlanner.prototype.x = function (a, b) {\n    this.i = a;\n\n    if (!this.g()) {\n      return;\n    }\n\n    if (this.q > 1) {\n      this.u(a);\n\n      if (this.f) {\n        this.v(b);\n      } else {\n        this.y(b);\n      }\n\n      this.a.i = null;\n    }\n  };\n\n  PolarLinePlanner.$t = markType(PolarLinePlanner, 'PolarLinePlanner');\n  return PolarLinePlanner;\n}(Base);\n\nexport { PolarLinePlanner };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PolarLinePlanner.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, Point_$type, fromEnum, markType, getEnumerator } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { Clipper } from \"igniteui-react-core\";\nimport { AngleRadiusPair } from \"./AngleRadiusPair\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { SpiralFlattener } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PolarLinePlanner = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarLinePlanner, _super);\n    function PolarLinePlanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = false;\n        _this.b = 0;\n        _this.m = null;\n        _this.n = null;\n        _this.o = null;\n        _this.p = null;\n        _this.l = 0;\n        _this.q = 0;\n        _this.z = null;\n        _this.aa = null;\n        _this.a = null;\n        _this.c = false;\n        _this.d = false;\n        _this.i = null;\n        return _this;\n    }\n    Object.defineProperty(PolarLinePlanner.prototype, \"ab\", {\n        get: function () {\n            return this.z;\n        },\n        set: function (a) {\n            this.z = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PolarLinePlanner.prototype, \"ac\", {\n        get: function () {\n            return this.aa;\n        },\n        set: function (a) {\n            this.aa = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PolarLinePlanner.prototype.g = function () {\n        if (this.m == null || this.n == null || this.o == null || this.p == null || Rect.l_op_Equality(this.ab, Rect.empty) || Rect.l_op_Equality(this.ac, Rect.empty)) {\n            return false;\n        }\n        return true;\n    };\n    PolarLinePlanner.prototype.k = function (a, b, c, d) {\n        var e = a(d) - a(c);\n        var f = b(d) - b(c);\n        return e * e + f * f;\n    };\n    PolarLinePlanner.prototype.h = function (a) {\n        var b = new List$1(AngleRadiusPair.$, 0);\n        var c = this.l * this.l;\n        var d;\n        if (a != null) {\n            d = a;\n        }\n        else {\n            var e = new List$1(Number_$type, 0);\n            for (var f = 0; f < this.q; f++) {\n                e.add(f);\n            }\n            d = e;\n        }\n        var g = getEnumerator(d);\n        var h = true;\n        h = g.moveNext();\n        var i = 0;\n        if (h) {\n            i = g.current;\n        }\n        while (h) {\n            var j = i;\n            h = g.moveNext();\n            i = g.current;\n            while (h && this.k(this.o, this.p, j, i) < c) {\n                h = g.moveNext();\n                i = g.current;\n            }\n            var k = new AngleRadiusPair();\n            k.c = j;\n            if (!this.f) {\n                k.a = this.m(j);\n                k.b = this.n(j);\n            }\n            b.add(k);\n        }\n        return b;\n    };\n    PolarLinePlanner.prototype.v = function (a) {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.h(a))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var b = _c.value;\n                if (isNaN_(b.a) || isInfinity(b.a) || isNaN_(b.b) || isInfinity(b.b)) {\n                    this.s({ $type: Point_$type, x: NaN, y: NaN });\n                    continue;\n                }\n                this.s({ $type: Point_$type, x: this.o(b.c), y: this.p(b.c) });\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    PolarLinePlanner.prototype.j = function () {\n        return Math.pow(this.l / (Math.max(this.ab.width / this.ac.width, this.ab.height / this.ac.height)), 2);\n    };\n    PolarLinePlanner.prototype.r = function (a, b) {\n        var c = 0.5 + b * Math.cos(a);\n        var d = 0.5 + b * Math.sin(a);\n        c = this.z.left + this.z.width * (c - this.aa.left) / this.aa.width;\n        d = this.z.top + this.z.height * (d - this.aa.top) / this.aa.height;\n        this.s({ $type: Point_$type, x: c, y: d });\n    };\n    PolarLinePlanner.prototype.y = function (a) {\n        var b = this.j();\n        var c = this.h(a);\n        var d = c.item(0).a;\n        var e = c.item(0).b;\n        var f = c.item(0).c;\n        for (var g = 1; g < c.count; g++) {\n            var h = c.item(g).a;\n            var i = c.item(g).b;\n            var j = c.item(g).c;\n            if (isNaN_(h) || isInfinity(h) || isNaN_(i) || isInfinity(i)) {\n                this.s({ $type: Point_$type, x: NaN, y: NaN });\n                if (this.b != 0) {\n                    g++;\n                    if (g < c.count) {\n                        d = c.item(g).a;\n                        e = c.item(g).b;\n                    }\n                }\n                continue;\n            }\n            this.t(h, i, d, e, g, b, f > j);\n            d = h;\n            e = i;\n            f = j;\n        }\n    };\n    PolarLinePlanner.prototype.t = function (a, b, c, d, e, f, g) {\n        var h = false;\n        if ((a < c && !g) || (a > c && g)) {\n            h = true;\n            var i = a;\n            a = c;\n            c = i;\n            i = b;\n            b = d;\n            d = i;\n        }\n        var j = SpiralFlattener.a(c, d, a, b, f);\n        if (h) {\n            var k = new List$1(Number_$type, 2, j.count);\n            for (var l = j.count - 1; l >= 0; l--) {\n                k.add(j._inner[l]);\n            }\n            j = k;\n        }\n        for (var m = 0; m < j.count; m++) {\n            var n = j._inner[m];\n            var o = c + n * (a - c);\n            var p = d + n * (b - d);\n            this.r(o, p);\n        }\n    };\n    PolarLinePlanner.prototype.u = function (a) {\n        var _this = this;\n        var b = this.ab.top - 10;\n        var c = this.ab.bottom + 10;\n        var d = this.ab.left - 10;\n        var e = this.ab.right + 10;\n        if (this.a == null) {\n            this.a = ((function () {\n                var $ret = new Clipper(1, d, c, e, b, _this.d);\n                $ret.i = a;\n                return $ret;\n            })());\n        }\n    };\n    PolarLinePlanner.prototype.e = function (a) {\n        return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\n    };\n    PolarLinePlanner.prototype.s = function (a) {\n        if (this.b == 0 && !this.e(a)) {\n            return;\n        }\n        if (this.c) {\n            this.i.add(a);\n        }\n        else {\n            this.a.j(a);\n        }\n    };\n    PolarLinePlanner.prototype.w = function (a) {\n        this.x(null, null);\n    };\n    PolarLinePlanner.prototype.x = function (a, b) {\n        this.i = a;\n        if (!this.g()) {\n            return;\n        }\n        if (this.q > 1) {\n            this.u(a);\n            if (this.f) {\n                this.v(b);\n            }\n            else {\n                this.y(b);\n            }\n            this.a.i = null;\n        }\n    };\n    PolarLinePlanner.$t = markType(PolarLinePlanner, 'PolarLinePlanner');\n    return PolarLinePlanner;\n}(Base));\nexport { PolarLinePlanner };\n//# sourceMappingURL=PolarLinePlanner.js.map\n"]},"metadata":{},"sourceType":"module"}