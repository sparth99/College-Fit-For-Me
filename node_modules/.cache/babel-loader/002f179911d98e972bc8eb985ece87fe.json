{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IList$1_$type, Point_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { ReadOnlyCollection$1 } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar NaNSegmenter =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NaNSegmenter, _super);\n\n  function NaNSegmenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NaNSegmenter.c = function (a, b) {\n    var c = new List$1(IList$1_$type.specialize(Point_$type), 0);\n    var d = getEnumerator(a);\n    var e = new List$1(Point_$type, 0);\n    var f = true;\n\n    while (d.moveNext()) {\n      if (NaNSegmenter.a(d.current)) {\n        if (!f && b == 1) {\n          f = true;\n          var g = e;\n          e = new List$1(Point_$type, 0);\n          c.add(new ReadOnlyCollection$1(Point_$type, 1, g));\n        }\n      } else {\n        f = false;\n        e.add(d.current);\n      }\n    }\n\n    c.add(new ReadOnlyCollection$1(Point_$type, 1, e));\n    return c;\n  };\n\n  NaNSegmenter.a = function (a) {\n    return isNaN_(a.x) || isNaN_(a.y) || isInfinity(a.x) || isInfinity(a.y);\n  };\n\n  NaNSegmenter.b = function (a) {\n    return !NaNSegmenter.a(a);\n  };\n\n  NaNSegmenter.$t = markType(NaNSegmenter, 'NaNSegmenter');\n  return NaNSegmenter;\n}(Base);\n\nexport { NaNSegmenter };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/NaNSegmenter.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAwB,aAAxB,EAA0L,WAA1L,EAA6M,QAA7M,EAAuN,aAAvN,QAA4O,qBAA5O;AAEA,SAAS,MAAT,QAAuB,qBAAvB;AACA,SAAS,oBAAT,QAAqC,qBAArC;AACA,SAAS,MAAT,EAAiB,UAAjB,QAAmC,qBAAnC;AAEA;;;;AAGA,IAAA,YAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,OAAA,CAAA,SAAA,CAAA,YAAA,EAAA,MAAA;;AAAlC,WAAA,YAAA,GAAA;;AA6BC;;AA3BO,EAAA,YAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAA4B,CAA5B,EAAmD;AAClD,QAAI,CAAC,GAA4B,IAAI,MAAJ,CAA2B,aAAa,CAAC,UAAd,CAAyB,WAAzB,CAA3B,EAAkE,CAAlE,CAAjC;AACA,QAAI,CAAC,GAAyB,aAAa,CAAC,CAAD,CAA3C;AACA,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAkB,WAAlB,EAA+B,CAA/B,CAAxB;AACA,QAAI,CAAC,GAAY,IAAjB;;AACA,WAAO,CAAC,CAAC,QAAF,EAAP,EAAqB;AACpB,UAAI,YAAY,CAAC,CAAb,CAAe,CAAC,CAAC,OAAjB,CAAJ,EAA+B;AAC9B,YAAI,CAAC,CAAD,IAAM,CAAC,IAAI,CAAf,EAAkB;AACjB,UAAA,CAAC,GAAG,IAAJ;AACA,cAAI,CAAC,GAAmB,CAAxB;AACA,UAAA,CAAC,GAAG,IAAI,MAAJ,CAAkB,WAAlB,EAA+B,CAA/B,CAAJ;AACA,UAAA,CAAC,CAAC,GAAF,CAAM,IAAI,oBAAJ,CAAgC,WAAhC,EAA6C,CAA7C,EAAgD,CAAhD,CAAN;AACA;AACD,OAPD,MAOO;AACN,QAAA,CAAC,GAAG,KAAJ;AACA,QAAA,CAAC,CAAC,GAAF,CAAM,CAAC,CAAC,OAAR;AACA;AACD;;AACD,IAAA,CAAC,CAAC,GAAF,CAAM,IAAI,oBAAJ,CAAgC,WAAhC,EAA6C,CAA7C,EAAgD,CAAhD,CAAN;AACA,WAAO,CAAP;AACA,GApBM;;AAqBA,EAAA,YAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAiB;AAChB,WAAQ,MAAM,CAAC,CAAC,CAAC,CAAH,CAAN,IAAe,MAAM,CAAC,CAAC,CAAC,CAAH,CAArB,IAA8B,UAAU,CAAC,CAAC,CAAC,CAAH,CAAxC,IAAiD,UAAU,CAAC,CAAC,CAAC,CAAH,CAAnE;AACA,GAFM;;AAGA,EAAA,YAAA,CAAA,CAAA,GAAP,UAAS,CAAT,EAAiB;AAChB,WAAO,CAAC,YAAY,CAAC,CAAb,CAAe,CAAf,CAAR;AACA,GAFM;;AAzBA,EAAA,YAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,YAAD,EAAe,cAAf,CAAnB;AA4BR,SAAA,YAAA;AAAC,CA7BD,CAAkC,IAAlC,CAAA;;SAAa,Y","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IList$1_$type, Point_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { ReadOnlyCollection$1 } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar NaNSegmenter = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NaNSegmenter, _super);\n    function NaNSegmenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NaNSegmenter.c = function (a, b) {\n        var c = new List$1(IList$1_$type.specialize(Point_$type), 0);\n        var d = getEnumerator(a);\n        var e = new List$1(Point_$type, 0);\n        var f = true;\n        while (d.moveNext()) {\n            if (NaNSegmenter.a(d.current)) {\n                if (!f && b == 1) {\n                    f = true;\n                    var g = e;\n                    e = new List$1(Point_$type, 0);\n                    c.add(new ReadOnlyCollection$1(Point_$type, 1, g));\n                }\n            }\n            else {\n                f = false;\n                e.add(d.current);\n            }\n        }\n        c.add(new ReadOnlyCollection$1(Point_$type, 1, e));\n        return c;\n    };\n    NaNSegmenter.a = function (a) {\n        return (isNaN_(a.x) || isNaN_(a.y) || isInfinity(a.x) || isInfinity(a.y));\n    };\n    NaNSegmenter.b = function (a) {\n        return !NaNSegmenter.a(a);\n    };\n    NaNSegmenter.$t = markType(NaNSegmenter, 'NaNSegmenter');\n    return NaNSegmenter;\n}(Base));\nexport { NaNSegmenter };\n//# sourceMappingURL=NaNSegmenter.js.map\n"]},"metadata":{},"sourceType":"module"}