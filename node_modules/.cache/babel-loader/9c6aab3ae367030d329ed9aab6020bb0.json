{"ast":null,"code":"import _classCallCheck from\"/Users/Parth/web-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Parth/web-project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Parth/web-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Parth/web-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Parth/web-project/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Row}from'react-bootstrap';import ProfileCard from'./ProfileCard';// TODO: Add your role and bio here\nvar members=[{name:'Parth Shah',userName:'parth.shah2',email:'sparth99@gmail.com',role:'Full Stack',bio:'YEEEEET',commitCount:0,issueCount:0,testCount:0,photoURL:'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5338834/avatar.png'},{name:'Leon Cai',userName:'leoncai1999',email:'leoncai197@gmail.com',role:'Front End',bio:'Not a React God',commitCount:0,issueCount:0,testCount:0,photoURL:'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5312295/avatar.png'},{name:'Jed Eloja',userName:'eloja.jed',email:'',role:'',bio:'',commitCount:0,issueCount:0,testCount:0,photoURL:'https://secure.gravatar.com/avatar/c8979ef91370bd06269cee292576f74a?s=80&d=identicon'},{name:'Michael Munoz',userName:'michaelmunoz',email:'mmunoz11@cs.utexas.edu',role:'Front End',bio:'React God.',commitCount:0,issueCount:0,testCount:0,photoURL:'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5312671/avatar.png'},{name:'Alec Hillyard',userName:'MrPackman1000',email:'',role:'',bio:'',commitCount:0,issueCount:0,testCount:0,photoURL:'https://secure.gravatar.com/avatar/d1d5837aea4eb5962b847430c5c7af2a?s=80&d=identicon'},{name:'Chinedu Enwere',userName:'cjenwere',email:'',role:'Backend',bio:'#Free6ix9ine',commitCount:0,issueCount:0,testCount:0,photoURL:'https://secure.gravatar.com/avatar/9dc34bcaa09dbf8872f24f549f521d54?s=80&d=identicon'}];var Gitlab=/*#__PURE__*/function(_Component){_inherits(Gitlab,_Component);function Gitlab(props){var _this;_classCallCheck(this,Gitlab);_this=_possibleConstructorReturn(this,_getPrototypeOf(Gitlab).call(this,props));_this.populateCommits=function(){// match member.name to commit.author_name\nvar _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{var _loop=function _loop(){var member=_step.value;commits=_this.state.commits.filter(function(commit){return commit['author_name']===member['name']||commit['author_email']===member['email'];});member['commitCount']=commits.length;};for(var _iterator=members[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var commits;_loop();}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}};_this.populateIssues=function(){// match member.userName to issue.author.username\nvar _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{var _loop2=function _loop2(){var member=_step2.value;issues=_this.state.issues.filter(function(issue){return issue['author']['username']===member['name']||issue['author']['username']===member['userName'];});member['issueCount']=issues.length;};for(var _iterator2=members[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var issues;_loop2();}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}};_this.state={commits:[],issues:[]};return _this;}_createClass(Gitlab,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://gitlab.com/api/v4/projects/16968914/repository/commits?per_page=1000&page=1').then(function(res){return res.json();}).then(function(commits){_this2.setState({commits:commits});console.log(commits);}).catch(console.log);fetch('https://gitlab.com/api/v4/projects/16968914/issues?per_page=100&page=1').then(function(res){return res.json();}).then(function(issues){_this2.setState({issues:issues});console.log(issues);}).catch(console.log);}},{key:\"render\",value:function render(){this.populateCommits();this.populateIssues();return React.createElement(\"body\",null,React.createElement(Row,null,members.map(function(member){return React.createElement(ProfileCard,{member:member});})));}}]);return Gitlab;}(Component);export{Gitlab as default};","map":{"version":3,"sources":["/Users/Parth/web-project/src/Components/Gitlab.js"],"names":["React","Component","Row","ProfileCard","members","name","userName","email","role","bio","commitCount","issueCount","testCount","photoURL","Gitlab","props","populateCommits","member","commits","state","filter","commit","length","populateIssues","issues","issue","fetch","then","res","json","setState","console","log","catch","map"],"mappings":"qiBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,IAAI,CAAE,YADR,CAEEC,QAAQ,CAAE,aAFZ,CAGEC,KAAK,CAAE,oBAHT,CAIEC,IAAI,CAAE,YAJR,CAKEC,GAAG,CAAE,SALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,kFAVJ,CADc,CAad,CACER,IAAI,CAAE,UADR,CAEEC,QAAQ,CAAE,aAFZ,CAGEC,KAAK,CAAE,sBAHT,CAIEC,IAAI,CAAE,WAJR,CAKEC,GAAG,CAAE,iBALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,kFAVJ,CAbc,CAyBd,CACER,IAAI,CAAE,WADR,CAEEC,QAAQ,CAAE,WAFZ,CAGEC,KAAK,CAAE,EAHT,CAIEC,IAAI,CAAE,EAJR,CAKEC,GAAG,CAAE,EALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,sFAVJ,CAzBc,CAqCd,CACER,IAAI,CAAE,eADR,CAEEC,QAAQ,CAAE,cAFZ,CAGEC,KAAK,CAAE,wBAHT,CAIEC,IAAI,CAAE,WAJR,CAKEC,GAAG,CAAE,YALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,kFAVJ,CArCc,CAiDd,CACER,IAAI,CAAE,eADR,CAEEC,QAAQ,CAAE,eAFZ,CAGEC,KAAK,CAAE,EAHT,CAIEC,IAAI,CAAE,EAJR,CAKEC,GAAG,CAAE,EALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,sFAVJ,CAjDc,CA6Dd,CACER,IAAI,CAAE,gBADR,CAEEC,QAAQ,CAAE,UAFZ,CAGEC,KAAK,CAAE,EAHT,CAIEC,IAAI,CAAE,SAJR,CAKEC,GAAG,CAAE,cALP,CAMEC,WAAW,CAAE,CANf,CAOEC,UAAU,CAAE,CAPd,CAQEC,SAAS,CAAE,CARb,CASEC,QAAQ,CACN,sFAVJ,CA7Dc,CAAhB,C,GA2EqBC,CAAAA,M,gEACnB,gBAAYC,KAAZ,CAAmB,wCACjB,wEAAMA,KAAN,GADiB,MA8BnBC,eA9BmB,CA8BD,UAAM,CACtB;AADsB,8HAEXC,CAAAA,MAFW,aAGhBC,OAAO,CAAG,MAAKC,KAAL,CAAWD,OAAX,CAAmBE,MAAnB,CACZ,SAACC,MAAD,QACEA,CAAAA,MAAM,CAAC,aAAD,CAAN,GAA0BJ,MAAM,CAAC,MAAD,CAAhC,EACAI,MAAM,CAAC,cAAD,CAAN,GAA2BJ,MAAM,CAAC,OAAD,CAFnC,EADY,CAHM,CAQpBA,MAAM,CAAC,aAAD,CAAN,CAAwBC,OAAO,CAACI,MAAhC,CARoB,EAEtB,kBAAqBlB,OAArB,oHAA8B,IACxBc,CAAAA,OADwB,SAO7B,CATqB,qMAUvB,CAxCkB,OA0CnBK,cA1CmB,CA0CF,UAAM,CACrB;AADqB,mIAEVN,CAAAA,MAFU,cAGfO,MAAM,CAAG,MAAKL,KAAL,CAAWK,MAAX,CAAkBJ,MAAlB,CACX,SAACK,KAAD,QACEA,CAAAA,KAAK,CAAC,QAAD,CAAL,CAAgB,UAAhB,IAAgCR,MAAM,CAAC,MAAD,CAAtC,EACAQ,KAAK,CAAC,QAAD,CAAL,CAAgB,UAAhB,IAAgCR,MAAM,CAAC,UAAD,CAFxC,EADW,CAHM,CAQnBA,MAAM,CAAC,YAAD,CAAN,CAAuBO,MAAM,CAACF,MAA9B,CARmB,EAErB,mBAAqBlB,OAArB,yHAA8B,IACxBoB,CAAAA,MADwB,UAO7B,CAToB,4MAUtB,CApDkB,CAEjB,MAAKL,KAAL,CAAa,CACXD,OAAO,CAAE,EADE,CAEXM,MAAM,CAAE,EAFG,CAAb,CAFiB,aAMlB,C,gFAEmB,iBAClBE,KAAK,CACH,qFADG,CAAL,CAGGC,IAHH,CAGQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHR,EAIGF,IAJH,CAIQ,SAACT,OAAD,CAAa,CACjB,MAAI,CAACY,QAAL,CAAc,CAAEZ,OAAO,CAAPA,OAAF,CAAd,EACAa,OAAO,CAACC,GAAR,CAAYd,OAAZ,EACD,CAPH,EAQGe,KARH,CAQSF,OAAO,CAACC,GARjB,EAUAN,KAAK,CACH,wEADG,CAAL,CAGGC,IAHH,CAGQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHR,EAIGF,IAJH,CAIQ,SAACH,MAAD,CAAY,CAChB,MAAI,CAACM,QAAL,CAAc,CAAEN,MAAM,CAANA,MAAF,CAAd,EACAO,OAAO,CAACC,GAAR,CAAYR,MAAZ,EACD,CAPH,EAQGS,KARH,CAQSF,OAAO,CAACC,GARjB,EASD,C,uCA0BQ,CACP,KAAKhB,eAAL,GACA,KAAKO,cAAL,GAEA,MACE,iCACE,oBAAC,GAAD,MACGnB,OAAO,CAAC8B,GAAR,CAAY,SAACjB,MAAD,QACX,qBAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,EADW,EAAZ,CADH,CADF,CADF,CASD,C,oBApEiChB,S,SAAfa,M","sourcesContent":["import React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\nimport ProfileCard from './ProfileCard';\n\n// TODO: Add your role and bio here\nconst members = [\n  {\n    name: 'Parth Shah',\n    userName: 'parth.shah2',\n    email: 'sparth99@gmail.com',\n    role: 'Full Stack',\n    bio: 'YEEEEET',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5338834/avatar.png',\n  },\n  {\n    name: 'Leon Cai',\n    userName: 'leoncai1999',\n    email: 'leoncai197@gmail.com',\n    role: 'Front End',\n    bio: 'Not a React God',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5312295/avatar.png',\n  },\n  {\n    name: 'Jed Eloja',\n    userName: 'eloja.jed',\n    email: '',\n    role: '',\n    bio: '',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://secure.gravatar.com/avatar/c8979ef91370bd06269cee292576f74a?s=80&d=identicon',\n  },\n  {\n    name: 'Michael Munoz',\n    userName: 'michaelmunoz',\n    email: 'mmunoz11@cs.utexas.edu',\n    role: 'Front End',\n    bio: 'React God.',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://assets.gitlab-static.net/uploads/-/system/user/avatar/5312671/avatar.png',\n  },\n  {\n    name: 'Alec Hillyard',\n    userName: 'MrPackman1000',\n    email: '',\n    role: '',\n    bio: '',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://secure.gravatar.com/avatar/d1d5837aea4eb5962b847430c5c7af2a?s=80&d=identicon',\n  },\n  {\n    name: 'Chinedu Enwere',\n    userName: 'cjenwere',\n    email: '',\n    role: 'Backend',\n    bio: '#Free6ix9ine',\n    commitCount: 0,\n    issueCount: 0,\n    testCount: 0,\n    photoURL:\n      'https://secure.gravatar.com/avatar/9dc34bcaa09dbf8872f24f549f521d54?s=80&d=identicon',\n  },\n];\n\nexport default class Gitlab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commits: [],\n      issues: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      'https://gitlab.com/api/v4/projects/16968914/repository/commits?per_page=1000&page=1'\n    )\n      .then((res) => res.json())\n      .then((commits) => {\n        this.setState({ commits });\n        console.log(commits);\n      })\n      .catch(console.log);\n\n    fetch(\n      'https://gitlab.com/api/v4/projects/16968914/issues?per_page=100&page=1'\n    )\n      .then((res) => res.json())\n      .then((issues) => {\n        this.setState({ issues });\n        console.log(issues);\n      })\n      .catch(console.log);\n  }\n\n  populateCommits = () => {\n    // match member.name to commit.author_name\n    for (const member of members) {\n      var commits = this.state.commits.filter(\n        (commit) =>\n          commit['author_name'] === member['name'] ||\n          commit['author_email'] === member['email']\n      );\n      member['commitCount'] = commits.length;\n    }\n  };\n\n  populateIssues = () => {\n    // match member.userName to issue.author.username\n    for (const member of members) {\n      var issues = this.state.issues.filter(\n        (issue) =>\n          issue['author']['username'] === member['name'] ||\n          issue['author']['username'] === member['userName']\n      );\n      member['issueCount'] = issues.length;\n    }\n  };\n\n  render() {\n    this.populateCommits();\n    this.populateIssues();\n\n    return (\n      <body>\n        <Row>\n          {members.map((member) => (\n            <ProfileCard member={member} />\n          ))}\n        </Row>\n      </body>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}