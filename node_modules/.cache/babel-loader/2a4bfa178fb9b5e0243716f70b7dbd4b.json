{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { Legend } from \"./Legend\";\nimport { LegendOrientation_$type } from './LegendOrientation';\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a legend in a IgxDataChartComponent control.\n*\n* The `IgrLegend` helps end-user identify visuals of chart series with contextual information related to the data plotted in the chart control.\n*\n* ```ts\n* <IgrDataChart\n* \tdataSource={this.data}\n* \tref={this.onChartRef} width=\"100%\" height=\"400px\">\n* <IgrCategoryXAxis name=\"xAxis\" label=\"Country\" />\n* <IgrNumericYAxis name=\"yAxis\" minimumValue={0}  />\n*\n* <IgrLegend ref={this.onLegendRef}\n*            orientation=\"Horizontal\" />\n* ```\n*\n* ```ts\n* public onChartRef(chart: IgrDataChart) {\n*     this.chart = chart;\n*     if (this.legend) {\n*         this.chart.legend = this.legend;\n*     }\n* }\n*\n* public onLegendRef(legend: IgrLegend) {\n*     this.legend = legend;\n*     if (this.chart) {\n*         this.chart.legend = this.legend;\n*     }\n* }\n* ```\n*/\n\nvar IgrLegend =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrLegend, _super);\n\n  function IgrLegend(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._getMainRef = _this._getMainRef.bind(_this);\n    var container;\n\n    if (document) {\n      container = document.createElement(\"div\");\n      container.style.display = \"block\";\n      container.style.width = \"100%\";\n      container.style.height = \"100%\";\n    }\n\n    var root;\n    root = container;\n    var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n    _this.container = ren.getWrapper(container);\n    _this._wrapper = ren;\n\n    _this.i.provideContainer(ren);\n\n    return _this;\n  }\n\n  IgrLegend.prototype.render = function () {\n    var div = React.createElement(\"div\", {\n      className: \"ig-legend igr-legend\",\n      ref: this._getMainRef\n    });\n    return div;\n  };\n\n  IgrLegend.prototype._getMainRef = function (div) {\n    this._elRef = div;\n  };\n\n  IgrLegend.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    this.initializeContent();\n  };\n\n  IgrLegend.prototype.initializeContent = function () {\n    this._elRef.appendChild(this.container.getNativeElement());\n  };\n\n  IgrLegend.prototype.destroy = function () {\n    this._wrapper.destroy();\n\n    this.i.provideContainer(null);\n  };\n\n  IgrLegend.prototype.createImplementation = function () {\n    return new Legend();\n  };\n\n  Object.defineProperty(IgrLegend.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrLegend.prototype, \"orientation\", {\n    /**\n    * Gets or sets the current Legend object's orientation.\n    *\n    * ```ts\n    * <IgrLegend ref={this.onLegendRef}\n    * \torientation=\"Horizontal\" />\n    * ```\n    */\n    get: function () {\n      return this.i.bb;\n    },\n    set: function (v) {\n      this.i.bb = ensureEnum(LegendOrientation_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrLegend.prototype, \"textColor\", {\n    /**\n     * Gets or sets color of text\n    *\n    * ```ts\n    *  <IgrLegend ref={this.onLegendRef}\n    *             textColor= \"red\"  />\n    * ```\n    */\n    get: function () {\n      return this.i.bh;\n    },\n    set: function (v) {\n      this.i.bh = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrLegend.prototype, \"textStyle\", {\n    /**\n     * Gets or sets style of text.\n    *\n    * ```ts\n    *  <IgrLegend ref={this.onLegendRef}\n    *             textStyle= \"9pt Verdana\" />\n    * ```\n    */\n    get: function () {\n      return this.i.bi;\n    },\n    set: function (v) {\n      this.i.bi = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrLegend;\n}(IgrLegendBase);\n\nexport { IgrLegend };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-legend.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { Legend } from \"./Legend\";\nimport { LegendOrientation_$type } from './LegendOrientation';\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a legend in a IgxDataChartComponent control.\n*\n* The `IgrLegend` helps end-user identify visuals of chart series with contextual information related to the data plotted in the chart control.\n*\n* ```ts\n* <IgrDataChart\n* \tdataSource={this.data}\n* \tref={this.onChartRef} width=\"100%\" height=\"400px\">\n* <IgrCategoryXAxis name=\"xAxis\" label=\"Country\" />\n* <IgrNumericYAxis name=\"yAxis\" minimumValue={0}  />\n*\n* <IgrLegend ref={this.onLegendRef}\n*            orientation=\"Horizontal\" />\n* ```\n*\n* ```ts\n* public onChartRef(chart: IgrDataChart) {\n*     this.chart = chart;\n*     if (this.legend) {\n*         this.chart.legend = this.legend;\n*     }\n* }\n*\n* public onLegendRef(legend: IgrLegend) {\n*     this.legend = legend;\n*     if (this.chart) {\n*         this.chart.legend = this.legend;\n*     }\n* }\n* ```\n*/\nvar IgrLegend = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrLegend, _super);\n    function IgrLegend(props) {\n        var _this = _super.call(this, props) || this;\n        _this._getMainRef = _this._getMainRef.bind(_this);\n        var container;\n        if (document) {\n            container = document.createElement(\"div\");\n            container.style.display = \"block\";\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n        }\n        var root;\n        root = container;\n        var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n        _this.container = ren.getWrapper(container);\n        _this._wrapper = ren;\n        _this.i.provideContainer(ren);\n        return _this;\n    }\n    IgrLegend.prototype.render = function () {\n        var div = React.createElement(\"div\", {\n            className: \"ig-legend igr-legend\",\n            ref: this._getMainRef\n        });\n        return div;\n    };\n    IgrLegend.prototype._getMainRef = function (div) {\n        this._elRef = div;\n    };\n    IgrLegend.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.initializeContent();\n    };\n    IgrLegend.prototype.initializeContent = function () {\n        this._elRef.appendChild(this.container.getNativeElement());\n    };\n    IgrLegend.prototype.destroy = function () {\n        this._wrapper.destroy();\n        this.i.provideContainer(null);\n    };\n    IgrLegend.prototype.createImplementation = function () {\n        return new Legend();\n    };\n    Object.defineProperty(IgrLegend.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrLegend.prototype, \"orientation\", {\n        /**\n     * Gets or sets the current Legend object's orientation.\n    *\n    * ```ts\n    * <IgrLegend ref={this.onLegendRef}\n    * \torientation=\"Horizontal\" />\n    * ```\n    */\n        get: function () {\n            return this.i.bb;\n        },\n        set: function (v) {\n            this.i.bb = ensureEnum(LegendOrientation_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrLegend.prototype, \"textColor\", {\n        /**\n         * Gets or sets color of text\n        *\n        * ```ts\n        *  <IgrLegend ref={this.onLegendRef}\n        *             textColor= \"red\"  />\n        * ```\n        */\n        get: function () {\n            return this.i.bh;\n        },\n        set: function (v) {\n            this.i.bh = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrLegend.prototype, \"textStyle\", {\n        /**\n         * Gets or sets style of text.\n        *\n        * ```ts\n        *  <IgrLegend ref={this.onLegendRef}\n        *             textStyle= \"9pt Verdana\" />\n        * ```\n        */\n        get: function () {\n            return this.i.bi;\n        },\n        set: function (v) {\n            this.i.bi = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrLegend;\n}(IgrLegendBase));\nexport { IgrLegend };\n//# sourceMappingURL=igr-legend.js.map\n"]},"metadata":{},"sourceType":"module"}