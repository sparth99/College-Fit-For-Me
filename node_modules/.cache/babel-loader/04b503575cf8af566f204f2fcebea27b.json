{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar SparklineAxisVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SparklineAxisVisualData, _super);\n\n  function SparklineAxisVisualData() {\n    var _this = _super.call(this) || this;\n\n    _this._name = null;\n    _this._minLabel = null;\n    _this._maxLabel = null;\n    _this._axisLine = null;\n    return _this;\n  }\n\n  Object.defineProperty(SparklineAxisVisualData.prototype, \"name\", {\n    get: function () {\n      return this._name;\n    },\n    set: function (a) {\n      this._name = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SparklineAxisVisualData.prototype, \"minLabel\", {\n    get: function () {\n      return this._minLabel;\n    },\n    set: function (a) {\n      this._minLabel = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SparklineAxisVisualData.prototype, \"maxLabel\", {\n    get: function () {\n      return this._maxLabel;\n    },\n    set: function (a) {\n      this._maxLabel = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SparklineAxisVisualData.prototype, \"axisLine\", {\n    get: function () {\n      return this._axisLine;\n    },\n    set: function (a) {\n      this._axisLine = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SparklineAxisVisualData.prototype.scaleByViewport = function (a) {};\n\n  SparklineAxisVisualData.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.u(\"{\");\n    a.u(\"name: \\\"\" + this.name + \"\\\"\");\n\n    if (this.minLabel != null) {\n      a.u(\",\");\n      a.l(\"minLabel: \" + this.minLabel.serialize());\n    }\n\n    if (this.maxLabel != null) {\n      a.u(\",\");\n      a.l(\"maxLabel: \" + this.maxLabel.serialize());\n    }\n\n    if (this.axisLine != null) {\n      a.u(\",\");\n      a.l(\"axisLine: \" + this.axisLine.serialize());\n    }\n\n    a.u(\"\");\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  SparklineAxisVisualData.$t = markType(SparklineAxisVisualData, 'SparklineAxisVisualData');\n  return SparklineAxisVisualData;\n}(Base);\n\nexport { SparklineAxisVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/SparklineAxisVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar SparklineAxisVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SparklineAxisVisualData, _super);\n    function SparklineAxisVisualData() {\n        var _this = _super.call(this) || this;\n        _this._name = null;\n        _this._minLabel = null;\n        _this._maxLabel = null;\n        _this._axisLine = null;\n        return _this;\n    }\n    Object.defineProperty(SparklineAxisVisualData.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (a) {\n            this._name = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SparklineAxisVisualData.prototype, \"minLabel\", {\n        get: function () {\n            return this._minLabel;\n        },\n        set: function (a) {\n            this._minLabel = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SparklineAxisVisualData.prototype, \"maxLabel\", {\n        get: function () {\n            return this._maxLabel;\n        },\n        set: function (a) {\n            this._maxLabel = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SparklineAxisVisualData.prototype, \"axisLine\", {\n        get: function () {\n            return this._axisLine;\n        },\n        set: function (a) {\n            this._axisLine = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SparklineAxisVisualData.prototype.scaleByViewport = function (a) {\n    };\n    SparklineAxisVisualData.prototype.serialize = function () {\n        var a = new StringBuilder(0);\n        a.u(\"{\");\n        a.u(\"name: \\\"\" + this.name + \"\\\"\");\n        if (this.minLabel != null) {\n            a.u(\",\");\n            a.l(\"minLabel: \" + this.minLabel.serialize());\n        }\n        if (this.maxLabel != null) {\n            a.u(\",\");\n            a.l(\"maxLabel: \" + this.maxLabel.serialize());\n        }\n        if (this.axisLine != null) {\n            a.u(\",\");\n            a.l(\"axisLine: \" + this.axisLine.serialize());\n        }\n        a.u(\"\");\n        a.u(\"}\");\n        return a.toString();\n    };\n    SparklineAxisVisualData.$t = markType(SparklineAxisVisualData, 'SparklineAxisVisualData');\n    return SparklineAxisVisualData;\n}(Base));\nexport { SparklineAxisVisualData };\n//# sourceMappingURL=SparklineAxisVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}