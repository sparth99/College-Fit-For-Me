{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrAssigningCategoryStyleEventArgsBase } from \"./igr-assigning-category-style-event-args-base\";\nimport { AssigningCategoryStyleEventArgs as AssigningCategoryStyleEventArgs_internal } from \"./AssigningCategoryStyleEventArgs\";\n/**\n * Represents event arguments class for the AssigningCategoryStyleEvent\n*\n* The `AssigningCategoryStyle` event fired to allow you to override the style of items in a category or financial series\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrRangeColumnSeries\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\"\n* \t\tisCustomCategoryStyleAllowed=\"true\"\n* \t\tassigningCategoryMarkerStyle= {this.onAssigningCategoryStyle} />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*  series1.assigningCategoryStyle = this.onAssigningCategoryStyle ;\n*  public onAssigningCategoryStyle =( s:IgrCategorySeries , e: AssigningCategoryStyleEventArgs) => {\n*\n*   }\n* ```\n*/\n\nvar IgrAssigningCategoryStyleEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrAssigningCategoryStyleEventArgs, _super);\n\n  function IgrAssigningCategoryStyleEventArgs() {\n    return _super.call(this) || this;\n  }\n\n  IgrAssigningCategoryStyleEventArgs.prototype.createImplementation = function () {\n    return new AssigningCategoryStyleEventArgs_internal();\n  };\n\n  Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"strokeThickness\", {\n    /**\n     * Gets or sets stroke thickness to use for the current item.\n    *\n    * Used the `strokeThickness` proprty  for the current item thickness.\n    *\n    * ```ts\n    * public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries , e: AssigningCategoryStyleEventArgs) => {\n    *     e.strokeThickness = 5;\n    * }\n    * ```\n    */\n    get: function () {\n      return this.i.r;\n    },\n    set: function (v) {\n      this.i.r = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"radiusX\", {\n    /**\n     * Gets or sets corner radius X to use for the current item, if applicable.\n    *\n    * Use the `radiusX` property to round the corners of the column.\n    *\n    * ```ts\n    * public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries, e: AssigningCategoryStyleEventArgs) => {\n    *   e.radiusX = 5;\n    *   }\n    * ```\n    */\n    get: function () {\n      return this.i.p;\n    },\n    set: function (v) {\n      this.i.p = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"radiusY\", {\n    /**\n     * Gets or sets corner radius Y to use for the current item, if applicable.\n    *\n    * Use the `radiusY` property for the y-radius of the ellipse that is used to round the corners of the column.\n    *\n    * ```ts\n    *  public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries<IIgrRangeAreaSeriesProps>, e: AssigningCategoryStyleEventArgs) => {\n    * \te.radiusY = 5;\n    * }\n    * ```\n    */\n    get: function () {\n      return this.i.q;\n    },\n    set: function (v) {\n      this.i.q = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrAssigningCategoryStyleEventArgs;\n}(IgrAssigningCategoryStyleEventArgsBase);\n\nexport { IgrAssigningCategoryStyleEventArgs };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-assigning-category-style-event-args.ts"],"names":[],"mappings":";AAKA,SAAS,sCAAT,QAAuD,gDAAvD;AACA,SAAS,+BAA+B,IAAI,wCAA5C,QAA4F,mCAA5F;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAA,kCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,OAAA,CAAA,SAAA,CAAA,kCAAA,EAAA,MAAA;;AAavD,WAAA,kCAAA,GAAA;WACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,I;AACP;;AAZQ,EAAA,kCAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,wCAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,kCAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAiB5B,EAAA,MAAA,CAAA,cAAA,CAAI,kCAAA,CAAA,SAAJ,EAAI,iBAAJ,EAAmB;AAXnB;;;;;;;;;;;SAWA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,CAAf;AACA,KAFkB;SAGnB,UAAoB,CAApB,EAA6B;AAC5B,WAAK,CAAL,CAAO,CAAP,GAAW,CAAC,CAAZ;AACA,KALkB;oBAAA;;AAAA,GAAnB;AAiBA,EAAA,MAAA,CAAA,cAAA,CAAI,kCAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAXX;;;;;;;;;;;SAWA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,CAAf;AACA,KAFU;SAGX,UAAY,CAAZ,EAAqB;AACpB,WAAK,CAAL,CAAO,CAAP,GAAW,CAAC,CAAZ;AACA,KALU;oBAAA;;AAAA,GAAX;AAiBA,EAAA,MAAA,CAAA,cAAA,CAAI,kCAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAXX;;;;;;;;;;;SAWA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,CAAf;AACA,KAFU;SAGX,UAAY,CAAZ,EAAqB;AACpB,WAAK,CAAL,CAAO,CAAP,GAAW,CAAC,CAAZ;AACA,KALU;oBAAA;;AAAA,GAAX;AAMD,SAAA,kCAAA;AAAC,CAnED,CAAwD,sCAAxD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrAssigningCategoryStyleEventArgsBase } from \"./igr-assigning-category-style-event-args-base\";\nimport { AssigningCategoryStyleEventArgs as AssigningCategoryStyleEventArgs_internal } from \"./AssigningCategoryStyleEventArgs\";\n/**\n * Represents event arguments class for the AssigningCategoryStyleEvent\n*\n* The `AssigningCategoryStyle` event fired to allow you to override the style of items in a category or financial series\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrRangeColumnSeries\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\"\n* \t\tisCustomCategoryStyleAllowed=\"true\"\n* \t\tassigningCategoryMarkerStyle= {this.onAssigningCategoryStyle} />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*  series1.assigningCategoryStyle = this.onAssigningCategoryStyle ;\n*  public onAssigningCategoryStyle =( s:IgrCategorySeries , e: AssigningCategoryStyleEventArgs) => {\n*\n*   }\n* ```\n*/\nvar IgrAssigningCategoryStyleEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrAssigningCategoryStyleEventArgs, _super);\n    function IgrAssigningCategoryStyleEventArgs() {\n        return _super.call(this) || this;\n    }\n    IgrAssigningCategoryStyleEventArgs.prototype.createImplementation = function () {\n        return new AssigningCategoryStyleEventArgs_internal();\n    };\n    Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"strokeThickness\", {\n        /**\n         * Gets or sets stroke thickness to use for the current item.\n        *\n        * Used the `strokeThickness` proprty  for the current item thickness.\n        *\n        * ```ts\n        * public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries , e: AssigningCategoryStyleEventArgs) => {\n        *     e.strokeThickness = 5;\n        * }\n        * ```\n        */\n        get: function () {\n            return this.i.r;\n        },\n        set: function (v) {\n            this.i.r = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"radiusX\", {\n        /**\n         * Gets or sets corner radius X to use for the current item, if applicable.\n        *\n        * Use the `radiusX` property to round the corners of the column.\n        *\n        * ```ts\n        * public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries, e: AssigningCategoryStyleEventArgs) => {\n        *   e.radiusX = 5;\n        *   }\n        * ```\n        */\n        get: function () {\n            return this.i.p;\n        },\n        set: function (v) {\n            this.i.p = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAssigningCategoryStyleEventArgs.prototype, \"radiusY\", {\n        /**\n         * Gets or sets corner radius Y to use for the current item, if applicable.\n        *\n        * Use the `radiusY` property for the y-radius of the ellipse that is used to round the corners of the column.\n        *\n        * ```ts\n        *  public onAssigningCategoryMarkerStyle =( s:IgrCategorySeries<IIgrRangeAreaSeriesProps>, e: AssigningCategoryStyleEventArgs) => {\n        * \te.radiusY = 5;\n        * }\n        * ```\n        */\n        get: function () {\n            return this.i.q;\n        },\n        set: function (v) {\n            this.i.q = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrAssigningCategoryStyleEventArgs;\n}(IgrAssigningCategoryStyleEventArgsBase));\nexport { IgrAssigningCategoryStyleEventArgs };\n//# sourceMappingURL=igr-assigning-category-style-event-args.js.map\n"]},"metadata":{},"sourceType":"module"}