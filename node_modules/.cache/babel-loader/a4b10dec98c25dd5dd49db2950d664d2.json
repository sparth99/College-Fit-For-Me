{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, enumGetBox, markType } from \"igniteui-react-core\";\nimport { TimeAxisIntervalType_$type } from \"./TimeAxisIntervalType\";\nimport { truncate } from \"igniteui-react-core\";\nimport { dateAddSeconds, dateFromValues, dateGetMonth, dateAddMinutes, dateAddHours, dateAddDays, dateMaxValue, dateAddMonths, dateAddYears } from \"igniteui-react-core\";\nimport { timeSpanFromTicks, timeSpanFromMilliseconds, timeSpanFromSeconds, timeSpanFromMinutes, timeSpanFromHours, timeSpanFromDays } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar TimeAxisInterval =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TimeAxisInterval, _super);\n\n  function TimeAxisInterval() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.j = 0;\n    _this.e = 0;\n    _this.a = 0;\n    _this.propertyChanged = null;\n    return _this;\n  }\n\n  Object.defineProperty(TimeAxisInterval.prototype, \"k\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      var b = this.k;\n\n      if (a != b) {\n        this.j = a;\n        this.l(\"Range\", b, this.k);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeAxisInterval.prototype, \"f\", {\n    get: function () {\n      return this.e;\n    },\n    set: function (a) {\n      var b = this.f;\n\n      if (a != b) {\n        this.e = a;\n        this.l(\"Interval\", b, this.f);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeAxisInterval.prototype, \"b\", {\n    get: function () {\n      return this.a;\n    },\n    set: function (a) {\n      var b = this.b;\n\n      if (a != b) {\n        this.a = a;\n        this.l(\"Interval\", enumGetBox(TimeAxisIntervalType_$type, b), enumGetBox(TimeAxisIntervalType_$type, this.b));\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TimeAxisInterval.prototype.d = function (a) {\n    var b;\n\n    switch (this.b) {\n      case 0:\n        var c = 10000;\n        return dateAddSeconds(a, 1 / c);\n\n      case 1:\n        b = dateAddSeconds(a, 1 / 1000);\n        return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), b.getSeconds(), b.getMilliseconds());\n\n      case 2:\n        b = dateAddSeconds(a, 1);\n        return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), b.getSeconds(), 0);\n\n      case 3:\n        b = dateAddMinutes(a, 1);\n        return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), 0, 0);\n\n      case 4:\n      case 5:\n        b = dateAddHours(a, 1);\n        return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), 0, 0, 0);\n\n      case 6:\n      case 7:\n      case 8:\n        b = dateAddDays(a, 1);\n        return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), 0, 0, 0, 0);\n\n      default:\n        return a;\n    }\n  };\n\n  TimeAxisInterval.prototype.c = function (a) {\n    var b = +dateMaxValue() - +a;\n\n    switch (this.b) {\n      case 0:\n        var c = 10000;\n\n        if (b > timeSpanFromTicks(truncate(this.f))) {\n          return dateAddSeconds(a, this.f / c);\n        }\n\n        return dateMaxValue();\n\n      case 1:\n        if (b > timeSpanFromMilliseconds(this.f)) {\n          return dateAddSeconds(a, this.f / 1000);\n        }\n\n        return dateMaxValue();\n\n      case 2:\n        if (b > timeSpanFromSeconds(this.f)) {\n          return dateAddSeconds(a, this.f);\n        }\n\n        return dateMaxValue();\n\n      case 3:\n        if (b > timeSpanFromMinutes(this.f)) {\n          return dateAddMinutes(a, this.f);\n        }\n\n        return dateMaxValue();\n\n      case 4:\n        if (b > timeSpanFromHours(this.f)) {\n          return dateAddHours(a, this.f);\n        }\n\n        return dateMaxValue();\n\n      case 5:\n        if (b > timeSpanFromDays(this.f)) {\n          return dateAddDays(a, this.f);\n        }\n\n        return dateMaxValue();\n\n      case 6:\n        if (b > timeSpanFromDays(7 * this.f)) {\n          return dateAddDays(a, this.f * 7);\n        }\n\n        return dateMaxValue();\n\n      case 7:\n        if (b > timeSpanFromDays(31 * truncate(this.f))) {\n          return dateAddMonths(a, truncate(this.f));\n        }\n\n        return dateMaxValue();\n\n      case 8:\n        if (b > timeSpanFromDays(365 * truncate(this.f))) {\n          return dateAddYears(a, truncate(this.f));\n        }\n\n        return dateMaxValue();\n\n      default:\n        return a;\n    }\n  };\n\n  TimeAxisInterval.prototype.l = function (a, b, c) {\n    this.m(a, b, c);\n\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n  };\n\n  TimeAxisInterval.prototype.m = function (a, b, c) {};\n\n  TimeAxisInterval.$t = markType(TimeAxisInterval, 'TimeAxisInterval', Base.$, [INotifyPropertyChanged_$type]);\n  return TimeAxisInterval;\n}(Base);\n\nexport { TimeAxisInterval };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/TimeAxisInterval.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, enumGetBox, markType } from \"igniteui-react-core\";\nimport { TimeAxisIntervalType_$type } from \"./TimeAxisIntervalType\";\nimport { truncate } from \"igniteui-react-core\";\nimport { dateAddSeconds, dateFromValues, dateGetMonth, dateAddMinutes, dateAddHours, dateAddDays, dateMaxValue, dateAddMonths, dateAddYears } from \"igniteui-react-core\";\nimport { timeSpanFromTicks, timeSpanFromMilliseconds, timeSpanFromSeconds, timeSpanFromMinutes, timeSpanFromHours, timeSpanFromDays } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar TimeAxisInterval = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeAxisInterval, _super);\n    function TimeAxisInterval() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.j = (0);\n        _this.e = 0;\n        _this.a = 0;\n        _this.propertyChanged = null;\n        return _this;\n    }\n    Object.defineProperty(TimeAxisInterval.prototype, \"k\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            var b = this.k;\n            if (a != b) {\n                this.j = a;\n                this.l(\"Range\", b, this.k);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeAxisInterval.prototype, \"f\", {\n        get: function () {\n            return this.e;\n        },\n        set: function (a) {\n            var b = this.f;\n            if (a != b) {\n                this.e = a;\n                this.l(\"Interval\", b, this.f);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeAxisInterval.prototype, \"b\", {\n        get: function () {\n            return this.a;\n        },\n        set: function (a) {\n            var b = this.b;\n            if (a != b) {\n                this.a = a;\n                this.l(\"Interval\", enumGetBox(TimeAxisIntervalType_$type, b), enumGetBox(TimeAxisIntervalType_$type, this.b));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeAxisInterval.prototype.d = function (a) {\n        var b;\n        switch (this.b) {\n            case 0:\n                var c = 10000;\n                return dateAddSeconds(a, 1 / c);\n            case 1:\n                b = dateAddSeconds(a, 1 / 1000);\n                return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), b.getSeconds(), b.getMilliseconds());\n            case 2:\n                b = dateAddSeconds(a, 1);\n                return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), b.getSeconds(), 0);\n            case 3:\n                b = dateAddMinutes(a, 1);\n                return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), b.getMinutes(), 0, 0);\n            case 4:\n            case 5:\n                b = dateAddHours(a, 1);\n                return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), b.getHours(), 0, 0, 0);\n            case 6:\n            case 7:\n            case 8:\n                b = dateAddDays(a, 1);\n                return dateFromValues(b.getFullYear(), dateGetMonth(b), b.getDate(), 0, 0, 0, 0);\n            default: return a;\n        }\n    };\n    TimeAxisInterval.prototype.c = function (a) {\n        var b = +(dateMaxValue()) - +a;\n        switch (this.b) {\n            case 0:\n                var c = 10000;\n                if (b > timeSpanFromTicks(truncate(this.f))) {\n                    return dateAddSeconds(a, this.f / c);\n                }\n                return dateMaxValue();\n            case 1:\n                if (b > timeSpanFromMilliseconds(this.f)) {\n                    return dateAddSeconds(a, this.f / 1000);\n                }\n                return dateMaxValue();\n            case 2:\n                if (b > timeSpanFromSeconds(this.f)) {\n                    return dateAddSeconds(a, this.f);\n                }\n                return dateMaxValue();\n            case 3:\n                if (b > timeSpanFromMinutes(this.f)) {\n                    return dateAddMinutes(a, this.f);\n                }\n                return dateMaxValue();\n            case 4:\n                if (b > timeSpanFromHours(this.f)) {\n                    return dateAddHours(a, this.f);\n                }\n                return dateMaxValue();\n            case 5:\n                if (b > timeSpanFromDays(this.f)) {\n                    return dateAddDays(a, this.f);\n                }\n                return dateMaxValue();\n            case 6:\n                if (b > timeSpanFromDays(7 * this.f)) {\n                    return dateAddDays(a, this.f * 7);\n                }\n                return dateMaxValue();\n            case 7:\n                if (b > timeSpanFromDays(31 * truncate(this.f))) {\n                    return dateAddMonths(a, truncate(this.f));\n                }\n                return dateMaxValue();\n            case 8:\n                if (b > timeSpanFromDays(365 * truncate(this.f))) {\n                    return dateAddYears(a, truncate(this.f));\n                }\n                return dateMaxValue();\n            default: return a;\n        }\n    };\n    TimeAxisInterval.prototype.l = function (a, b, c) {\n        this.m(a, b, c);\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n    };\n    TimeAxisInterval.prototype.m = function (a, b, c) {\n    };\n    TimeAxisInterval.$t = markType(TimeAxisInterval, 'TimeAxisInterval', Base.$, [INotifyPropertyChanged_$type]);\n    return TimeAxisInterval;\n}(Base));\nexport { TimeAxisInterval };\n//# sourceMappingURL=TimeAxisInterval.js.map\n"]},"metadata":{},"sourceType":"module"}