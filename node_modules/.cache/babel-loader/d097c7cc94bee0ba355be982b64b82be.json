{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { BrushScale } from \"./BrushScale\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, toBrushCollection, fromBrushCollection, toSpinal, initializePropertiesFromCss, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a base class for brush scales.\n*/\n\nvar IgrBrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrBrushScale, _super);\n\n  function IgrBrushScale(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._propertyUpdated = null;\n    _this._propertyUpdated_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  IgrBrushScale.prototype.createImplementation = function () {\n    return new BrushScale();\n  };\n\n  Object.defineProperty(IgrBrushScale.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    }\n    /**\n                               * @hidden\n                               */\n    ,\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrBrushScale._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  IgrBrushScale.prototype.onImplementationCreated = function () {};\n\n  IgrBrushScale.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrBrushScale.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrBrushScale.prototype.render = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrBrushScale.prototype, \"brushes\", {\n    /**\n     * Gets the brushes collection used by this scale.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.brushes);\n    },\n    set: function (v) {\n      this.i.brushes = toBrushCollection(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrBrushScale.prototype, \"isReady\", {\n    /**\n     * Gets the status of the scale\n    */\n    get: function () {\n      return this.i.isReady;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrBrushScale.prototype, \"isBrushScale\", {\n    /**\n     * Checks if this item is a BrushScale\n    */\n    get: function () {\n      return this.i.isBrushScale;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrBrushScale.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrBrushScale.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrBrushScale.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"BrushScale\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * Registers a series with the scale. Under normal circumstances you should not need to call this manually.\n  \r\n  * @param series  * The series to register with the scale.\n  */\n\n\n  IgrBrushScale.prototype.registerSeries = function (series) {\n    this.i.registerSeries(series == null ? null : series.i);\n  };\n  /**\n   * Unregisters a series with the scale. Under normal circumstances you should not need to call this manually.\n  \r\n  * @param series  * The series to unregister from the scale.\n  */\n\n\n  IgrBrushScale.prototype.unregisterSeries = function (series) {\n    this.i.unregisterSeries(series == null ? null : series.i);\n  };\n  /**\n   * Gets a brush from the brushes collection by index.\n  \r\n  */\n\n\n  IgrBrushScale.prototype.getBrush = function (index) {\n    var iv = this.i.getBrush(index);\n    return brushToString(iv);\n  };\n\n  Object.defineProperty(IgrBrushScale.prototype, \"propertyUpdated\", {\n    /**\n     * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n    */\n    get: function () {\n      return this._propertyUpdated;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._propertyUpdated_wrapped !== null) {\n        this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        this._propertyUpdated_wrapped = null;\n        this._propertyUpdated = null;\n      }\n\n      this._propertyUpdated = ev;\n\n      this._propertyUpdated_wrapped = function (o, e) {\n        var outerArgs = new IgrPropertyUpdatedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforePropertyUpdated) {\n          _this.beforePropertyUpdated(_this, outerArgs);\n        }\n\n        if (_this._propertyUpdated) {\n          _this._propertyUpdated(_this, outerArgs);\n        }\n      };\n\n      this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrBrushScale;\n}(React.Component);\n\nexport { IgrBrushScale };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-brush-scale.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAKA,SAAS,eAAT,EAA0B,cAA1B,QAAgD,qBAAhD;AACA,SAAS,2BAAT,QAA4C,qBAA5C;AAEA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,aAAT,QAA8B,qBAA9B;AACA,SAAS,WAAT,EAAsB,gBAAtB,EAAwC,WAAxC,EAAqD,iBAArD,EAAwE,mBAAxE,EAAyG,QAAzG,EAAmH,2BAAnH,EAAgJ,aAAhJ,QAAqK,qBAArK;AAEA;;;;AAGA,IAAA,aAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwF,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;;AAiCvF,WAAA,aAAA,CAAY,KAAZ,EAAoB;AAApB,QAAA,KAAA,GACoC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADhD;;AAsDU,IAAA,KAAA,CAAA,GAAA,GAAc,IAAd;AACA,IAAA,KAAA,CAAA,cAAA,GAA8B,IAAI,GAAJ,EAA9B;AAUA,IAAA,KAAA,CAAA,iBAAA,GAAyB,IAAzB;AACA,IAAA,KAAA,CAAA,cAAA,GAAsB,IAAtB;AACA,IAAA,KAAA,CAAA,UAAA,GAAsB,KAAtB;AAiFE,IAAA,KAAA,CAAA,gBAAA,GAA+E,IAA/E;AACA,IAAA,KAAA,CAAA,wBAAA,GAAgC,IAAhC;;AAnJwB,QAAK,KAAY,CAAC,QAAlB,EAA4B;AACxB,MAAA,WAAW,CAAC,qBAAZ,CAAkC,MAAM,CAAC,cAAP,CAAsB,KAAtB,CAAlC;AACH;;AAC7B,IAAA,KAAI,CAAC,eAAL,GAAuB,KAAI,CAAC,oBAAL,EAAvB;AACC,IAAA,KAAI,CAAC,eAAL,CAA6B,cAA7B,GAA8C,KAA9C;;AACD,IAAA,KAAI,CAAC,uBAAL;;;AACA;;AAtCC,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,UAAJ,EAAP;AACA,GAHS;;AAQT,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHgB;;;SAG5B,YAAA;AACA,aAAO,KAAK,eAAZ;AACC;AAAA;;;AAFW;oBAAA;;AAAA,GAAZ;;AAKO,EAAA,aAAA,CAAA,mBAAA,GAAP,UAA2B,QAA3B,EAAwC;AACpC,QAAI,CAAC,QAAL,EAAe;AACiB,aAAO,IAAP;AACH;;AACD,QAAI,CAAC,QAAQ,CAAC,KAAd,EAAqB;AACjB,aAAO,IAAP;AACH;;AACD,QAAI,IAAI,GAAG,QAAQ,CAAC,KAAT,CAAe,IAA1B;AACA,QAAI,YAAY,GAAG,QAAQ,IAA3B;;AACA,QAAI,CAAC,aAAa,CAAC,YAAd,CAA2B,YAA3B,CAAL,EAA+C;AAC3C,aAAO,IAAP;AACH;;AACD,WAAO,aAAa,CAAC,MAAd,CAAqB,YAArB,CAAP;AACH,GAbtB;;AAcC,EAAA,aAAA,CAAA,SAAA,CAAA,uBAAA,GAAR,YAAA,CAEC,CAFO;;AAa+B,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;;;;AACH,WAAgB,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAM,CAAC,IAAP,CAAY,KAAK,KAAjB,CAAA,CAAA,EAAuB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAuC,CAAA,EAAA,CAAA,IAAvC,EAAuC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAyC;AAApC,YAAM,CAAC,GAAA,EAAA,CAAA,KAAP;;AACJ,YAAI,WAAW,CAAC,IAAD,EAAO,CAAP,CAAf,EAA0B;AAChB,eAAK,CAAL,IAAU,KAAK,KAAL,CAAW,CAAX,CAAV;AACT;AACD;;;;;;;;AACD,O,SAEzB;iBACgB,MAAA,GAAA,CAAA,KAAA;;AACZ;AAAK,GAV0B;;AAW3B,EAAA,aAAA,CAAA,SAAA,CAAI,qBAAJ,GAA0B,UAAA,SAAA,EAAA,SAAA,EAAA;aAC1B,E;;WACC,GAAA,gBAAA,CAAA,KAAA,KAAA,EAAA,SAAA,C;;QACJ;;;;;;;;;AAED,MAAA,GAAO,GAAA;AAAK,QAAA,KAAA,EAAA;AAAL,OAAP;AACH,K,SAED;AACI,UAAO;AACV,YAAA,EAAA,IAAA,CAAA,EAAA,CAAA,IAAA,KAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,EAIL,EAAA,CAAA,IAAA,CAAI,EAAJ;AAHA,OAFQ,S;AAIN,YAAA,GAAA,EACF,MAAA,GAAA,CAAA,KAAA;AACC;AACA;;AACD,WAAA,IAAA;AACC,GAlBW;;AAmBZ,EAAA,aAAC,CAAA,SAAD,CAAC,MAAD,GAAC,YAAA;;GAAD;;AAHC,EAAA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,SAAA,EAAA;AAOD;;;AADE,IAAA,GAAA,EAAA,YAAA;AACF,aAAA,mBAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA;AACC,KARA;AASD,IAAA,GAAC,EAAA,UAAA,CAAA,EAAA;;KATA;AASA,IAAA,UAAA,EAAA,IATA;AAaD,IAAA,YAAA,EAAA;AAbC,GAAA;;AAYC;;;AAGF,IAAA,GAAC,EAAA,YAAA;;;AAAA,IAAA,UAAA,EAAA,I;AAID,IAAA,YAAA,EAAA;;SACI,c,CAAY,aAAe,CAAA,S,EAAA,c,EAAA;AAC/B;;;AAAC,IAAA,GAAA,EAAA,YAAA;AACS,aAAA,KAAA,CAAA,CAAV,YAAU;AACN,KAH2B;AAIvB,IAAA,UAAK,EAAA,IAJkB;AAK1B,IAAA,YAAA,EAAA;AAL0B,G;AAWrB,EAAA,MAAA,CAAA,cAAA,CAAA,aAAV,CAAA,SAAU,EAAS,eAAT,EAAyB;AAC3B,IAAA,GAAA,EAAI,YAAK;AACL,aAAO,KAAA,cAAP;AACH,KAH0B;AAI3B,IAAA,UAAK,EAAA,IAJsB;AAK3B,IAAA,YAAK,EAAA;AALsB,GAAzB;;AAQF,EAAA,aAAI,CAAA,SAAJ,CAAoB,GAApB,GAAuB,UAAA,YAAA,EAAA;AACvB,QAAI,CAAA,KAAA,UAAJ,EAA+B;AAC3B,WAAA,cAAA,CAAiB,GAAjB,CAAuB,YAAvB;AACA;AACH,GAJD;;AAKA,EAAA,aAAA,CAAA,SAAA,CAAgB,QAAhB,GAAyB,UAAc,SAAd,EAAc,SAAd,EAAc,MAAd,EAAc;AAE9C,QAAI,KAAA,UAAJ,EAAI;AAEA;AACJ;;AAEO,SAAK,UAAL,GAAwB,IAAxB;AACA,SAAA,iBAAA,GAAsB,SAAtB;AACI,SAAC,cAAD,GAAgB,SAAhB;QACA,aAAU,GAAA,E;QACV,QAAM,GAAI,KAAA,CAAA,CAAA,KAAA,CAAA,I;;QACV,QAAM,CAAA,OAAN,CAAU,KAAV,MAA4B,C,EAAE;AAC9B,MAAA,QAAQ,GAAG,QAAO,CAAA,SAAP,CAAO,CAAP,CAAX;AACA;;AACI,IAAA,aAAA,GAAQ,QAAG,CAAA,YAAA,CAAX;QACH,kBAAA,GAAA,E;QACD,MAAI,GAAA,QAAa,CAAA,QAAA,C;AACjB,IAAA,kBAAA,CAAA,IAAA,CAAmB,MAAK,GAAA,GAAxB;QACA,CAAC,GAAG,KAAE,CAAF,CAAE,KAAF,CAAW,Q;;AAClB,WAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,QAAA,IAEJ,CAAA,CAAA,IAAA,IAAQ,MAFJ,IAGP,CAAA,CAAA,IAAA,IAAI,SAHG,IAIG,CAAA,CAAA,IAAA,IAAI,kBAJP,I,EAKO,I,IAAA,kBALP,EAKwB;AACpB,MAAA,QAAA,GAAA,CAAA,CAAA,IAAA;;AACD,UAAI,QAAA,CAAA,OAAA,CAAe,KAAf,MAAwB,CAA5B,EAA4B;AAEtC,QAAA,QAAA,GAAA,QAAuB,CAAC,SAAxB,CAAwB,CAAxB,CAAA;AACA;;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,QAAA,CAAA;AAED,MAAA,kBAAA,CAAA,IAAA,CAA4B,UAAS,GAAE,GAAvC;AAIY,MAAA,CAAA,GAAY,CAAC,CAAA,QAAb;AACA;;AACJ,QAAA,MAAA,EAAA;AACG,UAAC,cAAa,GAAM,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAApB;;AACX,UAAA,cAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACD,QAAA,cAAA,GAAA,cAAA,CAAA,SAAA,CAAA,CAAA,CAAA;;;;;AAIE,MAAA,kBAAA,CAAA,IAAA,CAAA,YAAA,GAAA,GAAA,GAAA,MAAA,GAAA,GAAA;AACF;;AACC,IAAA,2BAAuB,CAAA,SAAA,EAAgB,IAAhB,EAAsB,aAAa,GAAA,GAAnC,EAAmC,KAAA,aAAnC,EAAmC,KAAnC,EAAmC,kBAAnC,CAAvB;;AACA,QAAA,KAAA,aAAA,EAAA;AACD,WAAA,aAAA,CAAA,SAAA,EAAA,SAAA,EAAA,MAAA;;;;GAlDQ;AAsDN;;;;;;;;;AAOA,G;AACF;;;;;;;AAOA,EAAA,aAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,MAAA,EAAA;;AAEE,GAFF;AAIA;;;;;;AAGI,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA,GAqBC,UAAA,KAAA,EAAA;QApBG,EAAA,GAAI,KAAK,CAAL,CAAK,QAAL,CAAK,KAAL,C;WACA,aAAO,CAAA,EAAA,C;AACP,GAHR;;SAIQ,c,CAAK,aAAgB,CAAG,S,EAAK,iB,EAAA;AAChC;;;SAKW,YAAI;AACvB,aAAA,KAAA,gBAAA;AACmB,KARqB;SAShB,UAAA,EAAA,EAAa;UACjB,KAAA,GAAA,I;;UACD,KAAI,wBAAJ,KAA2B,I,EAAA;AAC3C,aAAA,CAAA,CAAA,eAAA,GAAK,cAAuB,CAAA,KAAW,CAAX,CAAW,eAAX,EAAW,KAAA,wBAAX,CAA5B;AACiB,aAAA,wBAAA,GAAA,IAAA;AAEX,aAAA,gBAAA,GAAA,IAAA;AACF;;AACH,WAAA,gBAAA,GAAA,EAAA;;;;;AAtBJ,QAAA,SAAA,CAAA,sBAAA,CAAA,CAAA;;AAuBF,YAAA,KAAC,CAAA,qBAAD,EAAC;AAAA,UAAA,KAAA,CAAA,qBAAA,CAAA,KAAA,EAAA,SAAA;;;;;;;;;KAlByC;oBAAA;;AAAA,G;;CAlM1C,C,eAAA,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { BrushScale } from \"./BrushScale\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, toBrushCollection, fromBrushCollection, toSpinal, initializePropertiesFromCss, brushToString } from \"igniteui-react-core\";\n/**\n * Represents a base class for brush scales.\n*/\nvar IgrBrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrBrushScale, _super);\n    function IgrBrushScale(props) {\n        var _this = _super.call(this, props) || this;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._propertyUpdated = null;\n        _this._propertyUpdated_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    IgrBrushScale.prototype.createImplementation = function () {\n        return new BrushScale();\n    };\n    Object.defineProperty(IgrBrushScale.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        } /**\n                                     * @hidden\n                                     */,\n        enumerable: true,\n        configurable: true\n    });\n    IgrBrushScale._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    IgrBrushScale.prototype.onImplementationCreated = function () {\n    };\n    IgrBrushScale.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrBrushScale.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrBrushScale.prototype.render = function () {\n        return null;\n    };\n    Object.defineProperty(IgrBrushScale.prototype, \"brushes\", {\n        /**\n         * Gets the brushes collection used by this scale.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.brushes);\n        },\n        set: function (v) {\n            this.i.brushes = toBrushCollection(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrBrushScale.prototype, \"isReady\", {\n        /**\n         * Gets the status of the scale\n        */\n        get: function () {\n            return this.i.isReady;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrBrushScale.prototype, \"isBrushScale\", {\n        /**\n         * Checks if this item is a BrushScale\n        */\n        get: function () {\n            return this.i.isBrushScale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrBrushScale.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrBrushScale.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrBrushScale.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"BrushScale\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * Registers a series with the scale. Under normal circumstances you should not need to call this manually.\n    \r\n    * @param series  * The series to register with the scale.\n    */\n    IgrBrushScale.prototype.registerSeries = function (series) {\n        this.i.registerSeries((series == null ? null : series.i));\n    };\n    /**\n     * Unregisters a series with the scale. Under normal circumstances you should not need to call this manually.\n    \r\n    * @param series  * The series to unregister from the scale.\n    */\n    IgrBrushScale.prototype.unregisterSeries = function (series) {\n        this.i.unregisterSeries((series == null ? null : series.i));\n    };\n    /**\n     * Gets a brush from the brushes collection by index.\n    \r\n    */\n    IgrBrushScale.prototype.getBrush = function (index) {\n        var iv = this.i.getBrush(index);\n        return brushToString(iv);\n    };\n    Object.defineProperty(IgrBrushScale.prototype, \"propertyUpdated\", {\n        /**\n         * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n        */\n        get: function () {\n            return this._propertyUpdated;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._propertyUpdated_wrapped !== null) {\n                this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n                this._propertyUpdated_wrapped = null;\n                this._propertyUpdated = null;\n            }\n            this._propertyUpdated = ev;\n            this._propertyUpdated_wrapped = function (o, e) {\n                var outerArgs = new IgrPropertyUpdatedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforePropertyUpdated) {\n                    _this.beforePropertyUpdated(_this, outerArgs);\n                }\n                if (_this._propertyUpdated) {\n                    _this._propertyUpdated(_this, outerArgs);\n                }\n            };\n            this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrBrushScale;\n}(React.Component));\nexport { IgrBrushScale };\n//# sourceMappingURL=igr-brush-scale.js.map\n"]},"metadata":{},"sourceType":"module"}