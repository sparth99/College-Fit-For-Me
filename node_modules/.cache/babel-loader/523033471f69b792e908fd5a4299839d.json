{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\nimport { ITrackBarVisual_$type } from \"./ITrackBarVisual\";\nimport { Path } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar DefaultTrackBarVisual =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(DefaultTrackBarVisual, _super);\n\n  function DefaultTrackBarVisual() {\n    var _this = _super.call(this) || this;\n\n    _this._translateX = 0;\n    _this._translateY = 0;\n    _this.b = -1;\n    _this.a = -1;\n    _this._barBox = null;\n    _this._allPaths = null;\n    _this.barBox = new Path();\n    _this.allPaths = new List$1(Path.$, 0);\n\n    _this.allPaths.add(_this.barBox);\n\n    _this.barBox._fill = _this.getBarBoxDefaultBrush();\n    return _this;\n  }\n\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"translateX\", {\n    get: function () {\n      return this._translateX;\n    },\n    set: function (a) {\n      this._translateX = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"translateY\", {\n    get: function () {\n      return this._translateY;\n    },\n    set: function (a) {\n      this._translateY = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DefaultTrackBarVisual.prototype.getBarBoxDefaultBrush = function () {\n    return function () {\n      var $ret = new Brush();\n      $ret.color = Color.u(255, 218, 218, 218);\n      return $ret;\n    }();\n  };\n\n  DefaultTrackBarVisual.prototype.getBarBoxDefaultOutline = function () {\n    return null;\n  };\n\n  DefaultTrackBarVisual.prototype.getBarBoxDefaultStrokeThickness = function () {\n    return 0;\n  };\n\n  DefaultTrackBarVisual.prototype.c = function () {\n    var a = new PathGeometry();\n    var b = new PathFigure();\n    var c = new PolyLineSegment();\n    b._isClosed = true;\n    b._isFilled = true;\n    b._startPoint = {\n      $type: Point_$type,\n      x: this.width / -2,\n      y: this.height / -2\n    };\n\n    c._points.add({\n      $type: Point_$type,\n      x: this.width / 2,\n      y: this.height / -2\n    });\n\n    c._points.add({\n      $type: Point_$type,\n      x: this.width / 2,\n      y: this.height / 2\n    });\n\n    c._points.add({\n      $type: Point_$type,\n      x: this.width / -2,\n      y: this.height / 2\n    });\n\n    b._segments.add(c);\n\n    a.c.add(b);\n    this.barBox.ak = a;\n  };\n\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"width\", {\n    get: function () {\n      return this.b;\n    },\n    set: function (a) {\n      var b = this.b;\n      this.b = a;\n\n      if (b != this.b) {\n        this.d();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DefaultTrackBarVisual.prototype.d = function () {\n    if (this.width > 0 && this.height > 0) {\n      this.c();\n    }\n  };\n\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"height\", {\n    get: function () {\n      return this.a;\n    },\n    set: function (a) {\n      var b = this.a;\n      this.a = a;\n\n      if (this.a != b) {\n        this.d();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"barBox\", {\n    get: function () {\n      return this._barBox;\n    },\n    set: function (a) {\n      this._barBox = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DefaultTrackBarVisual.prototype, \"allPaths\", {\n    get: function () {\n      return this._allPaths;\n    },\n    set: function (a) {\n      this._allPaths = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DefaultTrackBarVisual.$t = markType(DefaultTrackBarVisual, 'DefaultTrackBarVisual', Base.$, [ITrackBarVisual_$type]);\n  return DefaultTrackBarVisual;\n}(Base);\n\nexport { DefaultTrackBarVisual };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/DefaultTrackBarVisual.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\nimport { ITrackBarVisual_$type } from \"./ITrackBarVisual\";\nimport { Path } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar DefaultTrackBarVisual = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultTrackBarVisual, _super);\n    function DefaultTrackBarVisual() {\n        var _this = _super.call(this) || this;\n        _this._translateX = 0;\n        _this._translateY = 0;\n        _this.b = -1;\n        _this.a = -1;\n        _this._barBox = null;\n        _this._allPaths = null;\n        _this.barBox = new Path();\n        _this.allPaths = new List$1(Path.$, 0);\n        _this.allPaths.add(_this.barBox);\n        _this.barBox._fill = _this.getBarBoxDefaultBrush();\n        return _this;\n    }\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"translateX\", {\n        get: function () {\n            return this._translateX;\n        },\n        set: function (a) {\n            this._translateX = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"translateY\", {\n        get: function () {\n            return this._translateY;\n        },\n        set: function (a) {\n            this._translateY = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultTrackBarVisual.prototype.getBarBoxDefaultBrush = function () {\n        return ((function () {\n            var $ret = new Brush();\n            $ret.color = Color.u(255, 218, 218, 218);\n            return $ret;\n        })());\n    };\n    DefaultTrackBarVisual.prototype.getBarBoxDefaultOutline = function () {\n        return null;\n    };\n    DefaultTrackBarVisual.prototype.getBarBoxDefaultStrokeThickness = function () {\n        return 0;\n    };\n    DefaultTrackBarVisual.prototype.c = function () {\n        var a = new PathGeometry();\n        var b = new PathFigure();\n        var c = new PolyLineSegment();\n        b._isClosed = true;\n        b._isFilled = true;\n        b._startPoint = { $type: Point_$type, x: this.width / -2, y: this.height / -2 };\n        c._points.add({ $type: Point_$type, x: this.width / 2, y: this.height / -2 });\n        c._points.add({ $type: Point_$type, x: this.width / 2, y: this.height / 2 });\n        c._points.add({ $type: Point_$type, x: this.width / -2, y: this.height / 2 });\n        b._segments.add(c);\n        a.c.add(b);\n        this.barBox.ak = a;\n    };\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"width\", {\n        get: function () {\n            return this.b;\n        },\n        set: function (a) {\n            var b = this.b;\n            this.b = a;\n            if (b != this.b) {\n                this.d();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultTrackBarVisual.prototype.d = function () {\n        if (this.width > 0 && this.height > 0) {\n            this.c();\n        }\n    };\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"height\", {\n        get: function () {\n            return this.a;\n        },\n        set: function (a) {\n            var b = this.a;\n            this.a = a;\n            if (this.a != b) {\n                this.d();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"barBox\", {\n        get: function () {\n            return this._barBox;\n        },\n        set: function (a) {\n            this._barBox = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultTrackBarVisual.prototype, \"allPaths\", {\n        get: function () {\n            return this._allPaths;\n        },\n        set: function (a) {\n            this._allPaths = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultTrackBarVisual.$t = markType(DefaultTrackBarVisual, 'DefaultTrackBarVisual', Base.$, [ITrackBarVisual_$type]);\n    return DefaultTrackBarVisual;\n}(Base));\nexport { DefaultTrackBarVisual };\n//# sourceMappingURL=DefaultTrackBarVisual.js.map\n"]},"metadata":{},"sourceType":"module"}