{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/SearchResults.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner, Button, Card, ListGroup, ListGroupItem, ButtonGroup } from 'react-bootstrap';\nimport { api } from '../instance.js';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Highlighter from 'react-highlight-words';\nexport default class SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      models: [],\n      loading: true,\n      routeModelType: 'cities',\n      apiModelType: 'cities',\n      searchQuery: ''\n    };\n\n    this.fetchModels = (modelType = '') => {\n      let urlSplit = String(window.location.href).split('/');\n      let searchInfo = urlSplit[urlSplit.length - 1];\n      let routeModelType = modelType === '' ? searchInfo.substring(0, searchInfo.indexOf('?')) : modelType;\n      let apiModelType = routeModelType;\n\n      if (routeModelType === 'attractions') {\n        apiModelType = 'restaurants';\n      }\n\n      let searchQuery = searchInfo.substring(searchInfo.indexOf('=') + 1).replace(/%20/g, ' ');\n      this.setState({\n        searchQuery,\n        routeModelType,\n        apiModelType\n      });\n      api.get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery\n        }\n      }).then(res => res.data).then(models => {\n        this.setState({\n          models,\n          loading: false\n        });\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.switchModelQuery = routeModelType => {\n      let apiModelType = routeModelType;\n\n      if (routeModelType === 'attractions') {\n        apiModelType = 'restaurants';\n      }\n\n      const {\n        searchQuery\n      } = this.state;\n      api.get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery\n        }\n      }).then(res => res.data).then(models => {\n        this.setState({\n          models,\n          routeModelType,\n          apiModelType,\n          loading: false\n        });\n        window.location.href = `/search/${routeModelType}?search_query=${searchQuery}`;\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.formatNumber = value => {\n      return value === 0 ? 'N/A' : value.toLocaleString();\n    };\n\n    this.formatIndex = value => {\n      return value === 0 ? 'N/A' : value.toFixed(2);\n    };\n\n    this.formatPercent = value => {\n      return value === 0 ? 'N/A' : value.toFixed(2).toString() + '%';\n    };\n\n    this.formatString = value => {\n      return value === '' ? 'N/A' : value;\n    };\n\n    this.formatTuition = value => {\n      return value === 0 ? 'N/A' : '$' + value.toFixed().toString() + ' / year';\n    };\n\n    this.formatRating = value => {\n      return value === 0 ? 'N/A' : value.toString();\n    };\n\n    this.displayModels = () => {\n      const models = this.state.models;\n      let rows = [];\n\n      for (let r = 0; r < Infinity; r++) {\n        let children = [];\n\n        for (let c = 0; c < 4; c++) {\n          if (models.length <= c + 4 * r) {\n            break;\n          }\n\n          var model = models[c + 4 * r];\n\n          if (this.state.routeModelType === 'cities') {\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              style: {\n                maxWidth: \"17rem\"\n              },\n              className: \"cities-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"city-instance\",\n              href: '/cities/' + String(model.city_state_name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              src: model.image_url,\n              variant: \"top\",\n              height: \"200\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Title, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: model.city_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: model.state_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroup, {\n              className: \"list-group-flush\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }\n            }, \"Population: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: model.population.toString(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }\n            }, \"Safety Index: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatIndex(model.safety_index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }\n            }, \"Rent Index: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatIndex(model.rent_index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }\n            }, \"Healthcare Index: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatIndex(model.health_care_index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }\n            })))))));\n          } else if (this.state.routeModelType === 'universities') {\n            let city_name = model.city_name + ', ' + model.state_name;\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              style: {\n                maxWidth: \"17rem\"\n              },\n              className: \"universities-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"university-instance\",\n              href: '/universities/' + model.name.replace(/ /g, '_'),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              variant: \"top\",\n              src: model.image_url,\n              style: {\n                height: '190px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Title, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: model.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroup, {\n              className: \"list-group-flush\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }\n            }, \"Admission Rate: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatPercent(model.admission_rate),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }\n            }, \"Graduation Rate: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatPercent(model.grad_rate),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }\n            }, \"Tuition: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatTuition(model.cost_per_year),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }\n            }, \"City: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: city_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 23\n              }\n            })))))));\n          } else {\n            let city_name = model.city_name + ', ' + model.state_name;\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              style: {\n                maxWidth: \"17rem\"\n              },\n              className: \"attractions-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"attraction-instance\",\n              href: '/attractions/' + String(model.restaurant_name + '*' + model.id).replace(/ /g, '_').toLowerCase(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              variant: \"top\",\n              src: model.image_url,\n              style: {\n                height: '190px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Title, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: model.restaurant_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroup, {\n              className: \"list-group-flush\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }\n            }, \"Category: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatString(model.categories),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }\n            }, \"City: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: city_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }\n            }, \"Rating: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatRating(model.rating),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(ListGroupItem, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              className: \"font-weight-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 23\n              }\n            }, \"Price: \"),\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: this.formatString(model.price),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }\n            })))))));\n          }\n        }\n\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }\n        }));\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }\n        }, children));\n        if (models.length < 4 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.modelSelectionRow = () =>\n    /*#__PURE__*/\n    React.createElement(ButtonGroup, {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"primary\",\n      id: \"dropdown-btn\",\n      onClick: () => this.switchModelQuery('cities'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 7\n      }\n    }, \"Cities\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"primary\",\n      id: \"dropdown-btn\",\n      onClick: () => this.switchModelQuery('universities'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }\n    }, \"Universities\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"primary\",\n      id: \"dropdown-btn\",\n      onClick: () => this.switchModelQuery('attractions'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, \"Attractions\"));\n  }\n\n  componentDidMount() {\n    this.fetchModels();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }\n      }, \"Search Results for \\\"\", this.state.searchQuery, \"\\\"\"), this.modelSelectionRow(), this.state.loading ?\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        className: \"Spinner-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(CardDeck, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }, this.displayModels()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/SearchResults.js"],"names":["React","Component","Nav","CardDeck","Spinner","Button","Card","ListGroup","ListGroupItem","ButtonGroup","api","Navigation","Footer","Highlighter","SearchResults","state","models","loading","routeModelType","apiModelType","searchQuery","fetchModels","modelType","urlSplit","String","window","location","href","split","searchInfo","length","substring","indexOf","replace","setState","get","params","search_query","then","res","data","catch","switchModelQuery","formatNumber","value","toLocaleString","formatIndex","toFixed","formatPercent","toString","formatString","formatTuition","formatRating","displayModels","rows","r","Infinity","children","c","model","push","maxWidth","city_state_name","image_url","city_name","state_name","population","safety_index","rent_index","health_care_index","name","height","admission_rate","grad_rate","cost_per_year","restaurant_name","id","toLowerCase","categories","rating","price","modelSelectionRow","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Nav,\n  CardDeck,\n  Spinner,\n  Button,\n  Card,\n  ListGroup, \n  ListGroupItem,\n  ButtonGroup,\n} from 'react-bootstrap';\nimport { api } from '../instance.js';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Highlighter from 'react-highlight-words';\n\nexport default class SearchResults extends Component {\n  state = {\n    models: [],\n    loading: true,\n    routeModelType: 'cities',\n    apiModelType: 'cities',\n    searchQuery: '',\n  };\n\n  componentDidMount() {\n    this.fetchModels();\n  }\n\n  fetchModels = (modelType = '') => {\n    let urlSplit = String(window.location.href).split('/');\n    let searchInfo = urlSplit[urlSplit.length - 1];\n    let routeModelType =\n      modelType === ''\n        ? searchInfo.substring(0, searchInfo.indexOf('?'))\n        : modelType;\n    let apiModelType = routeModelType;\n    if (routeModelType === 'attractions') {\n      apiModelType = 'restaurants';\n    }\n    let searchQuery = searchInfo\n      .substring(searchInfo.indexOf('=') + 1)\n      .replace(/%20/g, ' ');\n    this.setState({ searchQuery, routeModelType, apiModelType });\n    api\n      .get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery,\n        },\n      })\n      .then((res) => res.data)\n      .then((models) => {\n        this.setState({ models, loading: false });\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  switchModelQuery = (routeModelType) => {\n    let apiModelType = routeModelType;\n    if (routeModelType === 'attractions') {\n      apiModelType = 'restaurants';\n    }\n    const { searchQuery } = this.state;\n    api\n      .get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery,\n        },\n      })\n      .then((res) => res.data)\n      .then((models) => {\n        this.setState({ models, routeModelType, apiModelType, loading: false });\n        window.location.href = `/search/${routeModelType}?search_query=${searchQuery}`;\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  formatNumber = (value) => {\n    return value === 0 ? 'N/A' : value.toLocaleString();\n  };\n\n  formatIndex = (value) => {\n    return value === 0 ? 'N/A' : value.toFixed(2);\n  };\n\n  formatPercent = (value) => {\n    return value === 0 ? 'N/A' : value.toFixed(2).toString() + '%';\n  };\n\n  formatString = (value) => {\n    return value === '' ? 'N/A' : value;\n  };\n\n  formatTuition = (value) => {\n    return value === 0 ? 'N/A' : '$' + value.toFixed().toString() + ' / year';\n  }\n\n  formatRating = (value) => {\n    return value === 0 ? 'N/A' : value.toString();\n  }\n\n  displayModels = () => {\n    const models = this.state.models;\n    let rows = [];\n    for (let r = 0; r < Infinity; r++) {\n      let children = [];\n      for (let c = 0; c < 4; c++) {\n        if (models.length <= c + 4 * r) {\n          break;\n        }\n        var model = models[c + 4 * r];\n        if (this.state.routeModelType === 'cities') {\n          children.push(\n            <Card \n              style={{ maxWidth: \"17rem\"}}\n              className=\"cities-card\">\n              <Nav.Link\n                className=\"city-instance\"\n                href={'/cities/' + String(model.city_state_name)}\n              >\n                <Card.Img src={model.image_url} variant=\"top\" height=\"200\" />\n                <Card.Body>\n                  <Card.Title>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={model.city_name}\n                    />\n                    <br></br>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={model.state_name}\n                    />\n                  </Card.Title>\n                  <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Population: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={model.population.toString()}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Safety Index: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatIndex(model.safety_index)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Rent Index: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatIndex(model.rent_index)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Healthcare Index: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatIndex(model.health_care_index)}\n                      />\n                    </ListGroupItem>\n                  </ListGroup>\n                </Card.Body>\n              </Nav.Link>\n            </Card>\n          );\n        } else if (this.state.routeModelType === 'universities') {\n          let city_name = model.city_name + ', ' + model.state_name;\n          children.push(\n            <Card\n              style={{ maxWidth: \"17rem\"}}\n              className=\"universities-card\"\n            >\n              <Nav.Link\n                className=\"university-instance\"\n                href={'/universities/' + model.name.replace(/ /g, '_')}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={model.image_url}\n                  style={{ height: '190px'}}\n                />\n                <Card.Body>\n                  <Card.Title>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={model.name}\n                    />\n                  </Card.Title>\n                  <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Admission Rate: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatPercent(model.admission_rate)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Graduation Rate: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatPercent(model.grad_rate)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Tuition: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatTuition(model.cost_per_year)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">City: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={city_name}\n                      />\n                    </ListGroupItem>\n                  </ListGroup>\n                </Card.Body>\n\n              </Nav.Link>\n            </Card>\n          );\n        } else {\n          let city_name = model.city_name + ', ' + model.state_name;\n          children.push(\n            <Card\n              style={{ maxWidth: \"17rem\"}}\n              className=\"attractions-card\"\n            >\n              <Nav.Link\n                className=\"attraction-instance\"\n                href={\n                  '/attractions/' +\n                  String(model.restaurant_name + '*' + model.id)\n                    .replace(/ /g, '_')\n                    .toLowerCase()\n                }\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={model.image_url}\n                  style={{ height: '190px'}}\n                />\n                <Card.Body>\n                  <Card.Title>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={model.restaurant_name}\n                    />\n                  </Card.Title>\n                  <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Category: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatString(model.categories)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">City: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={city_name}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Rating: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatRating(model.rating)}\n                      />\n                    </ListGroupItem>\n                    <ListGroupItem>\n                      <span className =\"font-weight-bold\">Price: </span>\n                      <Highlighter\n                        searchWords={[this.state.searchQuery]}\n                        autoEscape={true}\n                        textToHighlight={this.formatString(model.price)}\n                      />\n                    </ListGroupItem>\n                  </ListGroup>\n                </Card.Body>\n              </Nav.Link>\n            </Card>\n          );\n        }\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (models.length < 4 * r) break;\n    }\n    return rows;\n  };\n\n  modelSelectionRow = () => (\n    <ButtonGroup className=\"d-flex\">\n      <Button\n        variant=\"primary\"\n        id=\"dropdown-btn\"\n        onClick={() => this.switchModelQuery('cities')}\n      >\n        Cities\n      </Button>\n      <Button\n        variant=\"primary\"\n        id=\"dropdown-btn\"\n        onClick={() => this.switchModelQuery('universities')}\n      >\n        Universities\n      </Button>\n      <Button\n        variant=\"primary\"\n        id=\"dropdown-btn\"\n        onClick={() => this.switchModelQuery('attractions')}\n      >\n        Attractions\n      </Button>\n    </ButtonGroup>\n  );\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <p></p>\n        <h1>Search Results for \"{this.state.searchQuery}\"</h1>\n        {this.modelSelectionRow()}\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <CardDeck className = \"justify-content-center\">{this.displayModels()}</CardDeck>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}