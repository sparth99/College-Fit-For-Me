{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar FinancialChartTypePickerContext =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(FinancialChartTypePickerContext, _super);\n\n  function FinancialChartTypePickerContext() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._vm = null;\n    _this._template = null;\n    return _this;\n  }\n\n  Object.defineProperty(FinancialChartTypePickerContext.prototype, \"vm\", {\n    get: function () {\n      return this._vm;\n    },\n    set: function (a) {\n      this._vm = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FinancialChartTypePickerContext.prototype, \"template\", {\n    get: function () {\n      return this._template;\n    },\n    set: function (a) {\n      this._template = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  FinancialChartTypePickerContext.$t = markType(FinancialChartTypePickerContext, 'FinancialChartTypePickerContext');\n  return FinancialChartTypePickerContext;\n}(Base);\n\nexport { FinancialChartTypePickerContext };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/FinancialChartTypePickerContext.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAqB,QAArB,QAAqC,qBAArC;AAEA;;;;AAGA,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,OAAA,CAAA,SAAA,CAAA,+BAAA,EAAA,MAAA;;AAArD,WAAA,+BAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,GAAA,GAAW,IAAX;AAOA,IAAA,KAAA,CAAA,SAAA,GAAiB,IAAjB;;AAOR;;AAbA,EAAA,MAAA,CAAA,cAAA,CAAI,+BAAA,CAAA,SAAJ,EAAI,IAAJ,EAAM;SAAN,YAAA;AACC,aAAO,KAAK,GAAZ;AACA,KAFK;SAGN,UAAO,CAAP,EAAa;AACZ,WAAK,GAAL,GAAW,CAAX;AACA,KALK;oBAAA;;AAAA,GAAN;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,+BAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACC,aAAO,KAAK,SAAZ;AACA,KAFW;SAGZ,UAAa,CAAb,EAAmB;AAClB,WAAK,SAAL,GAAiB,CAAjB;AACA,KALW;oBAAA;;AAAA,GAAZ;AATO,EAAA,+BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,+BAAD,EAAkC,iCAAlC,CAAnB;AAeR,SAAA,+BAAA;AAAC,CAhBD,CAAqD,IAArD,CAAA;;SAAa,+B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar FinancialChartTypePickerContext = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinancialChartTypePickerContext, _super);\n    function FinancialChartTypePickerContext() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._vm = null;\n        _this._template = null;\n        return _this;\n    }\n    Object.defineProperty(FinancialChartTypePickerContext.prototype, \"vm\", {\n        get: function () {\n            return this._vm;\n        },\n        set: function (a) {\n            this._vm = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FinancialChartTypePickerContext.prototype, \"template\", {\n        get: function () {\n            return this._template;\n        },\n        set: function (a) {\n            this._template = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FinancialChartTypePickerContext.$t = markType(FinancialChartTypePickerContext, 'FinancialChartTypePickerContext');\n    return FinancialChartTypePickerContext;\n}(Base));\nexport { FinancialChartTypePickerContext };\n//# sourceMappingURL=FinancialChartTypePickerContext.js.map\n"]},"metadata":{},"sourceType":"module"}