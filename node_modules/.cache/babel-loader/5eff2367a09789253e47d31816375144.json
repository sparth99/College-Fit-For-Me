{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar func = _propTypes2.default.func,\n    oneOf = _propTypes2.default.oneOf,\n    bool = _propTypes2.default.bool,\n    objectOf = _propTypes2.default.objectOf,\n    number = _propTypes2.default.number;\nvar TooltipMixin = {\n  propTypes: {\n    tooltipHtml: func,\n    tooltipMode: oneOf(['mouse', 'element', 'fixed']),\n    tooltipContained: bool,\n    tooltipOffset: objectOf(number)\n  },\n  getInitialState: function getInitialState() {\n    return {\n      tooltip: {\n        hidden: true\n      }\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tooltipMode: 'mouse',\n      tooltipOffset: {\n        top: -35,\n        left: 0\n      },\n      tooltipHtml: null,\n      tooltipContained: false\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this._svgNode = _reactDom2.default.findDOMNode(this).getElementsByTagName('svg')[0];\n  },\n  onMouseEnter: function onMouseEnter(e, data) {\n    if (!this.props.tooltipHtml) {\n      return;\n    }\n\n    e.preventDefault();\n    var _props = this.props,\n        margin = _props.margin,\n        tooltipMode = _props.tooltipMode,\n        tooltipOffset = _props.tooltipOffset,\n        tooltipContained = _props.tooltipContained;\n    var svg = this._svgNode;\n    var position = void 0;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(svg.getScreenCTM().inverse());\n      position = [point.x - margin.left, point.y - margin.top];\n    } else {\n      var rect = svg.getBoundingClientRect();\n      position = [e.clientX - rect.left - svg.clientLeft - margin.left, e.clientY - rect.top - svg.clientTop - margin.top];\n    }\n\n    var _tooltipHtml = this._tooltipHtml(data, position),\n        _tooltipHtml2 = _slicedToArray(_tooltipHtml, 3),\n        html = _tooltipHtml2[0],\n        xPos = _tooltipHtml2[1],\n        yPos = _tooltipHtml2[2];\n\n    var svgTop = svg.getBoundingClientRect().top + margin.top;\n    var svgLeft = svg.getBoundingClientRect().left + margin.left;\n    var top = 0;\n    var left = 0;\n\n    if (tooltipMode === 'fixed') {\n      top = svgTop + tooltipOffset.top;\n      left = svgLeft + tooltipOffset.left;\n    } else if (tooltipMode === 'element') {\n      top = svgTop + yPos + tooltipOffset.top;\n      left = svgLeft + xPos + tooltipOffset.left;\n    } else {\n      // mouse\n      top = e.clientY + tooltipOffset.top;\n      left = e.clientX + tooltipOffset.left;\n    }\n\n    function lerp(t, a, b) {\n      return (1 - t) * a + t * b;\n    }\n\n    var translate = 50;\n\n    if (tooltipContained) {\n      var t = position[0] / svg.getBoundingClientRect().width;\n      translate = lerp(t, 0, 100);\n    }\n\n    this.setState({\n      tooltip: {\n        top: top,\n        left: left,\n        hidden: false,\n        html: html,\n        translate: translate\n      }\n    });\n  },\n  onMouseLeave: function onMouseLeave(e) {\n    if (!this.props.tooltipHtml) {\n      return;\n    }\n\n    e.preventDefault();\n    this.setState({\n      tooltip: {\n        hidden: true\n      }\n    });\n  }\n};\nexports.default = TooltipMixin;","map":{"version":3,"sources":["/Users/Parth/web-project/node_modules/react-d3-components/lib/TooltipMixin.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_propTypes","require","_propTypes2","_interopRequireDefault","_reactDom","_reactDom2","obj","__esModule","default","func","oneOf","bool","objectOf","number","TooltipMixin","propTypes","tooltipHtml","tooltipMode","tooltipContained","tooltipOffset","getInitialState","tooltip","hidden","getDefaultProps","top","left","componentDidMount","_svgNode","findDOMNode","getElementsByTagName","onMouseEnter","e","data","props","preventDefault","_props","margin","svg","position","createSVGPoint","point","x","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","_tooltipHtml","_tooltipHtml2","html","xPos","yPos","svgTop","svgLeft","lerp","t","a","b","translate","width","setState","onMouseLeave"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar func = _propTypes2.default.func,\n    oneOf = _propTypes2.default.oneOf,\n    bool = _propTypes2.default.bool,\n    objectOf = _propTypes2.default.objectOf,\n    number = _propTypes2.default.number;\n\n\nvar TooltipMixin = {\n    propTypes: {\n        tooltipHtml: func,\n        tooltipMode: oneOf(['mouse', 'element', 'fixed']),\n        tooltipContained: bool,\n        tooltipOffset: objectOf(number)\n    },\n\n    getInitialState: function getInitialState() {\n        return {\n            tooltip: {\n                hidden: true\n            }\n        };\n    },\n    getDefaultProps: function getDefaultProps() {\n        return {\n            tooltipMode: 'mouse',\n            tooltipOffset: { top: -35, left: 0 },\n            tooltipHtml: null,\n            tooltipContained: false\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        this._svgNode = _reactDom2.default.findDOMNode(this).getElementsByTagName('svg')[0];\n    },\n    onMouseEnter: function onMouseEnter(e, data) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        var _props = this.props,\n            margin = _props.margin,\n            tooltipMode = _props.tooltipMode,\n            tooltipOffset = _props.tooltipOffset,\n            tooltipContained = _props.tooltipContained;\n\n\n        var svg = this._svgNode;\n        var position = void 0;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = e.clientX, point.y = e.clientY;\n            point = point.matrixTransform(svg.getScreenCTM().inverse());\n            position = [point.x - margin.left, point.y - margin.top];\n        } else {\n            var rect = svg.getBoundingClientRect();\n            position = [e.clientX - rect.left - svg.clientLeft - margin.left, e.clientY - rect.top - svg.clientTop - margin.top];\n        }\n\n        var _tooltipHtml = this._tooltipHtml(data, position),\n            _tooltipHtml2 = _slicedToArray(_tooltipHtml, 3),\n            html = _tooltipHtml2[0],\n            xPos = _tooltipHtml2[1],\n            yPos = _tooltipHtml2[2];\n\n        var svgTop = svg.getBoundingClientRect().top + margin.top;\n        var svgLeft = svg.getBoundingClientRect().left + margin.left;\n\n        var top = 0;\n        var left = 0;\n\n        if (tooltipMode === 'fixed') {\n            top = svgTop + tooltipOffset.top;\n            left = svgLeft + tooltipOffset.left;\n        } else if (tooltipMode === 'element') {\n            top = svgTop + yPos + tooltipOffset.top;\n            left = svgLeft + xPos + tooltipOffset.left;\n        } else {\n            // mouse\n            top = e.clientY + tooltipOffset.top;\n            left = e.clientX + tooltipOffset.left;\n        }\n\n        function lerp(t, a, b) {\n            return (1 - t) * a + t * b;\n        }\n\n        var translate = 50;\n\n        if (tooltipContained) {\n            var t = position[0] / svg.getBoundingClientRect().width;\n            translate = lerp(t, 0, 100);\n        }\n\n        this.setState({\n            tooltip: {\n                top: top,\n                left: left,\n                hidden: false,\n                html: html,\n                translate: translate\n            }\n        });\n    },\n    onMouseLeave: function onMouseLeave(e) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        this.setState({\n            tooltip: {\n                hidden: true\n            }\n        });\n    }\n};\n\nexports.default = TooltipMixin;"]},"metadata":{},"sourceType":"script"}