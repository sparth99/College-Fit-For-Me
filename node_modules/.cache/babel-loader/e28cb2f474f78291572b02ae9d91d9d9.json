{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Cities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport CityFilters from '../Components/CityFilters';\nimport { api } from '../instance';\nexport default class Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: null,\n      page: 1,\n      state: \"Select State\",\n      apiLink: \"https://api.collegefitfor.me/cities\",\n      loading: true\n    };\n\n    this.setter = apiLink => {\n      this.setState({\n        apiLink\n      });\n      axios.get(this.state.apiLink).then(res => {\n        const cities = res.data;\n        this.setState({\n          cities\n        });\n      });\n    };\n\n    this.fetchCities = () => {\n      api.get('/cities', {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(cities => {\n        this.setState({\n          cities,\n          loading: false\n        });\n      });\n    };\n\n    this.formatNumber = value => {\n      return value === 0 ? 'N/A' : value.toLocaleString();\n    };\n\n    this.displayCities = () => {\n      const {\n        cities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 4; c++) {\n          if (cities.length <= c + 4 * r) {\n            break;\n          }\n\n          var city = cities[c + 4 * r];\n          children.push(\n          /*#__PURE__*/\n          React.createElement(Card, {\n            className: \"cities-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Nav.Link, {\n            className: \"city-instance\",\n            href: '/cities/' + String(city.city_state_name),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Img, {\n            src: city.image_url,\n            variant: \"top\",\n            height: \"200\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(Card.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }\n          }, city.city_name, \", \", city.state_name),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }\n          }, \"Population: \", this.formatNumber(city.population))))));\n        }\n\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }\n        }));\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, children));\n        if (cities.length < 4 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page,\n        loading: true\n      }, () => this.fetchCities());\n    };\n\n    this.displayButtons = () => {\n      let buttons = [];\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, \"<<\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, \"1\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, \"2\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(3);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, \"3\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(4);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, \"4\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(5);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, \"5\"));\n      buttons.push(\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(5);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, \">>\"));\n      return buttons;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n  /* works but is gacky. Use cleaner approach to access API like fetchCities method */\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Jumbotron, {\n        className: \"cities-jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, \"Cities\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"cities-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, \"City matters a lot when deciding a University to attend.\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, \"Whether you're a West Coast or East Coast person, prefer a big or small city, or looking for a city that has great access to nature, there's a city for you!\"), this.state.loading ?\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        className: \"Spinner-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CityFilters, {\n        setter: this.setter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(CardDeck, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, this.displayCities()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), this.displayButtons()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Cities.js"],"names":["React","Component","Nav","CardDeck","Spinner","Navigation","Footer","Jumbotron","Card","Button","axios","CityFilters","api","Cities","state","cities","page","apiLink","loading","setter","setState","get","then","res","data","fetchCities","params","formatNumber","value","toLocaleString","displayCities","rows","r","children","c","length","city","push","String","city_state_name","image_url","city_name","state_name","population","changePage","displayButtons","buttons","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,eAAe,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5Ca,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNF,MAAAA,KAAK,EAAE,cAHD;AAING,MAAAA,OAAO,EAAE,qCAJH;AAKNC,MAAAA,OAAO,EAAE;AALH,KADoC;;AAAA,SAc5CC,MAd4C,GAclCF,OAAD,IAAa;AACpB,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AAEAP,MAAAA,KAAK,CAACW,GAAN,CAAU,KAAKP,KAAL,CAAWG,OAArB,EACIK,IADJ,CACSC,GAAG,IAAI;AACT,cAAMR,MAAM,GAAGQ,GAAG,CAACC,IAAnB;AACA,aAAKJ,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACH,OAJJ;AAKD,KAtB2C;;AAAA,SAyB5CU,WAzB4C,GAyB9B,MAAM;AAClBb,MAAAA,GAAG,CACAS,GADH,CACO,SADP,EACkB;AACdK,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADX;AADM,OADlB,EAMGM,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IANrB,EAOGF,IAPH,CAOSP,MAAD,IAAY;AAChB,aAAKK,QAAL,CAAc;AAAEL,UAAAA,MAAF;AAAUG,UAAAA,OAAO,EAAE;AAAnB,SAAd;AACD,OATH;AAUD,KApC2C;;AAAA,SAsC5CS,YAtC4C,GAsC5BC,KAAD,IAAW;AACxB,aAAOA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,CAACC,cAAN,EAA7B;AACD,KAxC2C;;AAAA,SA0C5CC,aA1C4C,GA0C5B,MAAM;AACpB,YAAM;AAAEf,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,UAAIiB,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAInB,MAAM,CAACoB,MAAP,IAAiBD,CAAC,GAAG,IAAIF,CAA7B,EAAgC;AAC9B;AACD;;AACD,cAAII,IAAI,GAAGrB,MAAM,CAACmB,CAAC,GAAG,IAAIF,CAAT,CAAjB;AACAC,UAAAA,QAAQ,CAACI,IAAT;AAAA;AACE,8BAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,GAAD,CAAK,IAAL;AAAU,YAAA,SAAS,EAAC,eAApB;AAAoC,YAAA,IAAI,EAAE,aAAaC,MAAM,CAACF,IAAI,CAACG,eAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAEH,IAAI,CAACI,SAApB;AAA+B,YAAA,OAAO,EAAC,KAAvC;AAA6C,YAAA,MAAM,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAEE,8BAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGJ,IAAI,CAACK,SADR,QACqBL,IAAI,CAACM,UAD1B,CADF;AAAA;AAIE,8BAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACe,KAAKf,YAAL,CAAkBS,IAAI,CAACO,UAAvB,CADf,CAJF,CAFF,CADF,CADF;AAeD;;AACDZ,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACAN,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAU;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBJ,QAAtB,CAAV;AACA,YAAIlB,MAAM,CAACoB,MAAP,GAAgB,IAAIH,CAAxB,EAA2B;AAC5B;;AACD,aAAOD,IAAP;AACD,KAzE2C;;AAAA,SA2E5Ca,UA3E4C,GA2E9B5B,IAAD,IAAU;AACrB,WAAKI,QAAL,CACE;AACEJ,QAAAA,IAAI,EAAEA,IADR;AAEEE,QAAAA,OAAO,EAAE;AAFX,OADF,EAKE,MAAM,KAAKO,WAAL,EALR;AAOD,KAnF2C;;AAAA,SAqF5CoB,cArF4C,GAqF3B,MAAM;AACrB,UAAIC,OAAO,GAAG,EAAd;AAEAA,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMA,aAAOE,OAAP;AACD,KA7H2C;AAAA;;AAS5CE,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,WAAL;AACD;AAED;;;AAkHAwB,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAEE,0BAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAAA;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAIE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAJF;AAAA;AAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAPF,EAYG,KAAKnC,KAAL,CAAWI,OAAX;AAAA;AACC,0BAAC,OAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAAA;AAOC;AAAA;AACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAAA;AAKE,0BAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,KAAKW,aAAL,EAAX,CALF;AAAA;AAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOG,KAAKe,cAAL,EAPH,CAnBJ;AAAA;AA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF;AAAA;AA8BE,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF;AADF;AAkCD;;AAlK2C","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport CityFilters from '../Components/CityFilters';\nimport { api } from '../instance';\n\nexport default class Cities extends Component {\n  state = {\n    cities: null,\n    page: 1,\n    state: \"Select State\",\n    apiLink: \"https://api.collegefitfor.me/cities\",\n    loading: true,\n  };\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  /* works but is gacky. Use cleaner approach to access API like fetchCities method */\n  setter = (apiLink) => {\n    this.setState({apiLink})\n  \n    axios.get(this.state.apiLink)\n       .then(res => {\n           const cities = res.data;\n           this.setState({ cities });\n       })\n  }\n  \n\n  fetchCities = () => {\n    api\n      .get('/cities', {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((cities) => {\n        this.setState({ cities, loading: false });\n      });\n  };\n\n  formatNumber = (value) => {\n    return value === 0 ? 'N/A' : value.toLocaleString();\n  }\n\n  displayCities = () => {\n    const { cities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 4; c++) {\n        if (cities.length <= c + 4 * r) {\n          break;\n        }\n        var city = cities[c + 4 * r];\n        children.push(\n          <Card className=\"cities-card\">\n            <Nav.Link className=\"city-instance\" href={'/cities/' + String(city.city_state_name)}>\n              <Card.Img src={city.image_url} variant=\"top\" height=\"200\" />\n              <Card.Body>\n                <Card.Title>\n                  {city.city_name}, {city.state_name}\n                </Card.Title>\n                <Card.Text>\n                  Population: {this.formatNumber(city.population)}\n                </Card.Text>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (cities.length < 4 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n        loading: true,\n      },\n      () => this.fetchCities()\n    );\n  };\n\n  displayButtons = () => {\n    let buttons = []\n\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(1)}}>\n          &lt;&lt;\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(1)}}>\n        1\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(2)}}>\n        2\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(3)}}>\n        3\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(4)}}>\n        4\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(5)}}>\n        5\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(5)}}>\n          &gt;&gt;\n      </Button>\n    )\n\n    return buttons\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Jumbotron className=\"cities-jumbotron\"></Jumbotron>\n        <h1>Cities</h1>\n        <p className=\"cities-header\">\n          City matters a lot when deciding a University to attend.\n        </p>\n        <p>\n          Whether you're a West Coast or East Coast person, prefer a big or\n          small city, or looking for a city that has great access to nature,\n          there's a city for you!\n        </p>\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <>\n            <div className='row d-flex justify-content-center'>\n              <CityFilters setter={this.setter} />\n            </div>\n\n            <CardDeck>{this.displayCities()}</CardDeck>\n            <p />\n            {this.displayButtons()}\n          </>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}