{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { CategoryYAxis } from \"./CategoryYAxis\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent category Y axis.\n*/\n\nvar IgrCategoryYAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrCategoryYAxis, _super);\n\n  function IgrCategoryYAxis(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCategoryYAxis.prototype.createImplementation = function () {\n    return new CategoryYAxis();\n  };\n\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"isVertical\", {\n    /**\n     * Gets if the current axis is a vertical axis.\n    */\n    get: function () {\n      return this.i.cf;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"interval\", {\n    /**\n     * Gets or sets the frequency of displayed labels.\n     * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.\n    */\n    get: function () {\n      return this.i.k3;\n    },\n    set: function (v) {\n      this.i.k3 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"actualInterval\", {\n    /**\n     * Gets the effective value for the current Interval.\n    */\n    get: function () {\n      return this.i.kz;\n    },\n    set: function (v) {\n      this.i.kz = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"minorInterval\", {\n    /**\n     * Gets or sets the frequency of displayed minor lines.\n     * The set value is a factor that determines how the minor lines will be displayed.\n    */\n    get: function () {\n      return this.i.k4;\n    },\n    set: function (v) {\n      this.i.k4 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryYAxis.prototype, \"actualMinorInterval\", {\n    /**\n     * Gets the effective value for the current MinorInterval.\n    */\n    get: function () {\n      return this.i.k1;\n    },\n    set: function (v) {\n      this.i.k1 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrCategoryYAxis.prototype.getCategoryBoundingBox = function (point, useInterpolation, singularWidth) {\n    var iv = this.i.ku(toPoint(point), useInterpolation, singularWidth);\n    return fromRect(iv);\n  };\n\n  IgrCategoryYAxis.prototype.scrollRangeIntoView = function (minimum, maximum) {\n    this.i.le(minimum, maximum);\n  };\n  /**\n   * Scrolls the specified item into view.\n  \r\n  * @param item  * Data item to scroll into view\n  */\n\n\n  IgrCategoryYAxis.prototype.scrollIntoView = function (item) {\n    this.i.ld(item);\n  };\n\n  return IgrCategoryYAxis;\n}(IgrCategoryAxisBase);\n\nexport { IgrCategoryYAxis };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-category-y-axis.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { CategoryYAxis } from \"./CategoryYAxis\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent category Y axis.\n*/\nvar IgrCategoryYAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrCategoryYAxis, _super);\n    function IgrCategoryYAxis(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCategoryYAxis.prototype.createImplementation = function () {\n        return new CategoryYAxis();\n    };\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"isVertical\", {\n        /**\n         * Gets if the current axis is a vertical axis.\n        */\n        get: function () {\n            return this.i.cf;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"interval\", {\n        /**\n         * Gets or sets the frequency of displayed labels.\n         * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.\n        */\n        get: function () {\n            return this.i.k3;\n        },\n        set: function (v) {\n            this.i.k3 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"actualInterval\", {\n        /**\n         * Gets the effective value for the current Interval.\n        */\n        get: function () {\n            return this.i.kz;\n        },\n        set: function (v) {\n            this.i.kz = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"minorInterval\", {\n        /**\n         * Gets or sets the frequency of displayed minor lines.\n         * The set value is a factor that determines how the minor lines will be displayed.\n        */\n        get: function () {\n            return this.i.k4;\n        },\n        set: function (v) {\n            this.i.k4 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryYAxis.prototype, \"actualMinorInterval\", {\n        /**\n         * Gets the effective value for the current MinorInterval.\n        */\n        get: function () {\n            return this.i.k1;\n        },\n        set: function (v) {\n            this.i.k1 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrCategoryYAxis.prototype.getCategoryBoundingBox = function (point, useInterpolation, singularWidth) {\n        var iv = this.i.ku(toPoint(point), useInterpolation, singularWidth);\n        return fromRect(iv);\n    };\n    IgrCategoryYAxis.prototype.scrollRangeIntoView = function (minimum, maximum) {\n        this.i.le(minimum, maximum);\n    };\n    /**\n     * Scrolls the specified item into view.\n    \r\n    * @param item  * Data item to scroll into view\n    */\n    IgrCategoryYAxis.prototype.scrollIntoView = function (item) {\n        this.i.ld(item);\n    };\n    return IgrCategoryYAxis;\n}(IgrCategoryAxisBase));\nexport { IgrCategoryYAxis };\n//# sourceMappingURL=igr-category-y-axis.js.map\n"]},"metadata":{},"sourceType":"module"}