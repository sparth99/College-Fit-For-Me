{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { IgrFragmentBase } from \"./igr-fragment-base\";\nimport { ColumnFragment } from \"./ColumnFragment\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents one part of a StackedColumnSeries.\n*/\n\nvar IgrColumnFragment =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrColumnFragment, _super);\n\n  function IgrColumnFragment(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrColumnFragment.prototype.createImplementation = function () {\n    return new ColumnFragment();\n  };\n\n  Object.defineProperty(IgrColumnFragment.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.qt;\n    },\n    set: function (v) {\n      this.i.qt = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.qu;\n    },\n    set: function (v) {\n      this.i.qu = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"fragmentXAxis\", {\n    /**\n     * Gets or sets the effective x-axis for this series.\n    */\n    get: function () {\n      if (this.i.fragmentXAxis == null) {\n        return null;\n      }\n\n      if (!this.i.fragmentXAxis.externalObject) {\n        var e = IgrCategoryAxisBase._createFromInternal(this.i.fragmentXAxis);\n\n        if (e) {\n          e._implementation = this.i.fragmentXAxis;\n        }\n\n        this.i.fragmentXAxis.externalObject = e;\n      }\n\n      return this.i.fragmentXAxis.externalObject;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"fragmentYAxis\", {\n    /**\n     * Gets or sets the effective y-axis for this series.\n    */\n    get: function () {\n      if (this.i.fragmentYAxis == null) {\n        return null;\n      }\n\n      if (!this.i.fragmentYAxis.externalObject) {\n        var e = IgrNumericAxisBase._createFromInternal(this.i.fragmentYAxis);\n\n        if (e) {\n          e._implementation = this.i.fragmentYAxis;\n        }\n\n        this.i.fragmentYAxis.externalObject = e;\n      }\n\n      return this.i.fragmentYAxis.externalObject;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrColumnFragment.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.fragmentXAxis && this.fragmentXAxis._styling) {\n      this.fragmentXAxis._styling(container, component, this);\n    }\n\n    if (this.fragmentYAxis && this.fragmentYAxis._styling) {\n      this.fragmentYAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  */\n\n\n  IgrColumnFragment.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.lu(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrColumnFragment.prototype.getItem = function (world) {\n    var iv = this.i.fp(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the index of the item that resides at the provided world coordinates.\n  \r\n  * @param world  * The world coordinates of the requested item.\n  */\n\n\n  IgrColumnFragment.prototype.getItemIndex = function (world) {\n    var iv = this.i.e8(toPoint(world));\n    return iv;\n  };\n\n  return IgrColumnFragment;\n}(IgrFragmentBase);\n\nexport { IgrColumnFragment };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-column-fragment.ts"],"names":[],"mappings":";AAKA,SAAS,mBAAT,QAAoC,0BAApC;AACA,SAAS,kBAAT,QAAmC,yBAAnC;AACA,SAAS,eAAT,QAAuD,qBAAvD;AAMA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,OAAT,EAAkB,QAAlB,QAAkC,qBAAlC;AAEA;;;;AAGA,IAAA,iBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoG,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAanG,WAAA,iBAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAdQ,EAAA,iBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,cAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,iBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAW5B,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFU;SAGX,UAAY,CAAZ,EAAqB;AACpB,WAAK,CAAL,CAAO,EAAP,GAAY,CAAC,CAAb;AACA,KALU;oBAAA;;AAAA,GAAX;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFU;SAGX,UAAY,CAAZ,EAAqB;AACpB,WAAK,CAAL,CAAO,EAAP,GAAY,CAAC,CAAb;AACA,KALU;oBAAA;;AAAA,GAAX;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;AAHjB;;;SAGA,YAAA;AACwC,UAAI,KAAK,CAAL,CAAO,aAAP,IAAwB,IAA5B,EAAkC;AAC9B,eAAO,IAAP;AACH;;AAED,UAAI,CAAE,KAAK,CAAL,CAAO,aAAP,CAA6B,cAAnC,EAAmD;AAC/C,YAAI,CAAC,GAAG,mBAAmB,CAAC,mBAApB,CAAwC,KAAK,CAAL,CAAO,aAA/C,CAAR;;AACA,YAAI,CAAJ,EAAO;AACF,UAAA,CAAS,CAAC,eAAV,GAA4B,KAAK,CAAL,CAAO,aAAnC;AACJ;;AACA,aAAK,CAAL,CAAO,aAAP,CAA6B,cAA7B,GAA8C,CAA9C;AACJ;;AACxC,aAAQ,KAAK,CAAL,CAAO,aAAP,CAA6B,cAArC;AACA,KAbgB;oBAAA;;AAAA,GAAjB;AAiBA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;AAHjB;;;SAGA,YAAA;AACwC,UAAI,KAAK,CAAL,CAAO,aAAP,IAAwB,IAA5B,EAAkC;AAC9B,eAAO,IAAP;AACH;;AAED,UAAI,CAAE,KAAK,CAAL,CAAO,aAAP,CAA6B,cAAnC,EAAmD;AAC/C,YAAI,CAAC,GAAG,kBAAkB,CAAC,mBAAnB,CAAuC,KAAK,CAAL,CAAO,aAA9C,CAAR;;AACA,YAAI,CAAJ,EAAO;AACF,UAAA,CAAS,CAAC,eAAV,GAA4B,KAAK,CAAL,CAAO,aAAnC;AACJ;;AACA,aAAK,CAAL,CAAO,aAAP,CAA6B,cAA7B,GAA8C,CAA9C;AACJ;;AACxC,aAAQ,KAAK,CAAL,CAAO,aAAP,CAA6B,cAArC;AACA,KAbgB;oBAAA;;AAAA,GAAjB;;AAekB,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,SAAnB,EAAmC,SAAnC,EAAmD,MAAnD,EAA+D;AAC3D,IAAA,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,SAAf,EAA0B,SAA1B,EAAqC,MAArC;;AAEA,SAAK,UAAL,GAAkB,IAAlB;;AACA,QAAI,KAAK,aAAL,IAAuB,KAAK,aAAL,CAA2B,QAAtD,EAAgE;AACvE,WAAK,aAAL,CAA2B,QAA3B,CAAoC,SAApC,EAA+C,SAA/C,EAA0D,IAA1D;AACJ;;AACD,QAAI,KAAK,aAAL,IAAuB,KAAK,aAAL,CAA2B,QAAtD,EAAgE;AAC3D,WAAK,aAAL,CAA2B,QAA3B,CAAoC,SAApC,EAA+C,SAA/C,EAA0D,IAA1D;AACJ;;AAEW,SAAK,UAAL,GAAkB,KAAlB;AACH,GAZS;AAalB;;;;;;;AAKO,EAAA,iBAAA,CAAA,SAAA,CAAA,yBAAA,GAAP,UAAiC,KAAjC,EAA+C;AAC9C,QAAI,EAAE,GAAG,KAAK,CAAL,CAAO,EAAP,CAAU,OAAO,CAAC,KAAD,CAAjB,CAAT;AACA,WAAO,QAAQ,CAAC,EAAD,CAAf;AACA,GAHM;AAIP;;;;;;;AAKO,EAAA,iBAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,KAAf,EAA6B;AAC5B,QAAI,EAAE,GAAG,KAAK,CAAL,CAAO,EAAP,CAAU,OAAO,CAAC,KAAD,CAAjB,CAAT;AACA,WAAQ,EAAR;AACA,GAHM;AAIP;;;;;;;AAKO,EAAA,iBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,KAApB,EAAkC;AACjC,QAAI,EAAE,GAAG,KAAK,CAAL,CAAO,EAAP,CAAU,OAAO,CAAC,KAAD,CAAjB,CAAT;AACA,WAAQ,EAAR;AACA,GAHM;;AAIR,SAAA,iBAAA;AAAC,CA/GD,CAAoG,eAApG,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { IgrFragmentBase } from \"./igr-fragment-base\";\nimport { ColumnFragment } from \"./ColumnFragment\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents one part of a StackedColumnSeries.\n*/\nvar IgrColumnFragment = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrColumnFragment, _super);\n    function IgrColumnFragment(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrColumnFragment.prototype.createImplementation = function () {\n        return new ColumnFragment();\n    };\n    Object.defineProperty(IgrColumnFragment.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.qt;\n        },\n        set: function (v) {\n            this.i.qt = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.qu;\n        },\n        set: function (v) {\n            this.i.qu = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"fragmentXAxis\", {\n        /**\n         * Gets or sets the effective x-axis for this series.\n        */\n        get: function () {\n            if (this.i.fragmentXAxis == null) {\n                return null;\n            }\n            if (!this.i.fragmentXAxis.externalObject) {\n                var e = IgrCategoryAxisBase._createFromInternal(this.i.fragmentXAxis);\n                if (e) {\n                    e._implementation = this.i.fragmentXAxis;\n                }\n                this.i.fragmentXAxis.externalObject = e;\n            }\n            return this.i.fragmentXAxis.externalObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"fragmentYAxis\", {\n        /**\n         * Gets or sets the effective y-axis for this series.\n        */\n        get: function () {\n            if (this.i.fragmentYAxis == null) {\n                return null;\n            }\n            if (!this.i.fragmentYAxis.externalObject) {\n                var e = IgrNumericAxisBase._createFromInternal(this.i.fragmentYAxis);\n                if (e) {\n                    e._implementation = this.i.fragmentYAxis;\n                }\n                this.i.fragmentYAxis.externalObject = e;\n            }\n            return this.i.fragmentYAxis.externalObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrColumnFragment.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.fragmentXAxis && this.fragmentXAxis._styling) {\n            this.fragmentXAxis._styling(container, component, this);\n        }\n        if (this.fragmentYAxis && this.fragmentYAxis._styling) {\n            this.fragmentYAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    */\n    IgrColumnFragment.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.lu(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrColumnFragment.prototype.getItem = function (world) {\n        var iv = this.i.fp(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the index of the item that resides at the provided world coordinates.\n    \r\n    * @param world  * The world coordinates of the requested item.\n    */\n    IgrColumnFragment.prototype.getItemIndex = function (world) {\n        var iv = this.i.e8(toPoint(world));\n        return (iv);\n    };\n    return IgrColumnFragment;\n}(IgrFragmentBase));\nexport { IgrColumnFragment };\n//# sourceMappingURL=igr-column-fragment.js.map\n"]},"metadata":{},"sourceType":"module"}