{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\n\nvar IgrScatterContourSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrScatterContourSeries, _super);\n\n  function IgrScatterContourSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrScatterContourSeries.prototype.createImplementation = function () {\n    return new ScatterContourSeries();\n  };\n\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n    */\n    get: function () {\n      return this.i.np;\n    },\n    set: function (v) {\n      this.i.np = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n    /**\n     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n    */\n    get: function () {\n      if (this.i.nk == null) {\n        return null;\n      }\n\n      if (!this.i.nk.externalObject) {\n        var e = IgrValueBrushScale._createFromInternal(this.i.nk);\n\n        if (e) {\n          e._implementation = this.i.nk;\n        }\n\n        this.i.nk.externalObject = e;\n      }\n\n      return this.i.nk.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.nk = null : this.i.nk = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n    /**\n     * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n    */\n    get: function () {\n      if (this.i.ni == null) {\n        return null;\n      }\n\n      if (!this.i.ni.externalObject) {\n        var e = IgrContourValueResolver._createFromInternal(this.i.ni);\n\n        if (e) {\n          e._implementation = this.i.ni;\n        }\n\n        this.i.ni.externalObject = e;\n      }\n\n      return this.i.ni.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.ni = null : this.i.ni = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.fillScale && this.fillScale._styling) {\n      this.fillScale._styling(container, component, this);\n    }\n\n    if (this.valueResolver && this.valueResolver._styling) {\n      this.valueResolver._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.fs(item, memberPathName);\n    return iv;\n  };\n\n  return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries);\n\nexport { IgrScatterContourSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-scatter-contour-series.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\nvar IgrScatterContourSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrScatterContourSeries, _super);\n    function IgrScatterContourSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrScatterContourSeries.prototype.createImplementation = function () {\n        return new ScatterContourSeries();\n    };\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n        */\n        get: function () {\n            return this.i.np;\n        },\n        set: function (v) {\n            this.i.np = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n        /**\n         * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n        */\n        get: function () {\n            if (this.i.nk == null) {\n                return null;\n            }\n            if (!this.i.nk.externalObject) {\n                var e = IgrValueBrushScale._createFromInternal(this.i.nk);\n                if (e) {\n                    e._implementation = this.i.nk;\n                }\n                this.i.nk.externalObject = e;\n            }\n            return this.i.nk.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.nk = null : this.i.nk = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n        /**\n         * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n        */\n        get: function () {\n            if (this.i.ni == null) {\n                return null;\n            }\n            if (!this.i.ni.externalObject) {\n                var e = IgrContourValueResolver._createFromInternal(this.i.ni);\n                if (e) {\n                    e._implementation = this.i.ni;\n                }\n                this.i.ni.externalObject = e;\n            }\n            return this.i.ni.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.ni = null : this.i.ni = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.fillScale && this.fillScale._styling) {\n            this.fillScale._styling(container, component, this);\n        }\n        if (this.valueResolver && this.valueResolver._styling) {\n            this.valueResolver._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.fs(item, memberPathName);\n        return (iv);\n    };\n    return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries));\nexport { IgrScatterContourSeries };\n//# sourceMappingURL=igr-scatter-contour-series.js.map\n"]},"metadata":{},"sourceType":"module"}