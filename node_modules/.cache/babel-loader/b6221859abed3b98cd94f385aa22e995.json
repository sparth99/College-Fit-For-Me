{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Cities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport CityFilters from '../Components/CityFilters';\nimport { api } from '../instance';\nexport default class Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: null,\n      page: 1,\n      apiLink: \"https://api.collegefitfor.me/cities\",\n      loading: true,\n      filtered: false\n    };\n\n    this.setter = apiLink => {\n      let baseApi = String(apiLink).substring(0, String(apiLink).lastIndexOf('&'));\n      this.setState({\n        apiLink: baseApi\n      });\n      axios.get(apiLink).then(res => {\n        const cities = res.data;\n        this.setState({\n          cities,\n          page: 1\n        });\n\n        if (apiLink === 'https://api.collegefitfor.me/cities' || String(apiLink).substring(0, 50) === 'https://api.collegefitfor.me/cities/filter/?order=') {\n          this.setState({\n            filtered: false\n          });\n        } else {\n          this.setState({\n            filtered: true\n          });\n        }\n      });\n    };\n\n    this.fetchCities = () => {\n      axios.get(this.state.apiLink, {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(cities => {\n        this.setState({\n          cities,\n          loading: false\n        });\n      }).catch(() => {\n        // attempting to go forward to a page that doesn't exist\n        this.setState({\n          page: this.state.page - 1,\n          loading: false\n        });\n      });\n    };\n\n    this.formatNumber = value => {\n      return value === 0 ? 'N/A' : value.toLocaleString();\n    };\n\n    this.displayCities = () => {\n      const {\n        cities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 4; c++) {\n          if (cities.length <= c + 4 * r) {\n            break;\n          }\n\n          var city = cities[c + 4 * r];\n          children.push(\n          /*#__PURE__*/\n          React.createElement(Card, {\n            className: \"cities-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 11\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Nav.Link, {\n            className: \"city-instance\",\n            href: '/cities/' + String(city.city_state_name),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Img, {\n            src: city.image_url,\n            variant: \"top\",\n            height: \"200\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(Card.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }, city.city_name, \", \", city.state_name),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }\n          }, \"Population: \", this.formatNumber(city.population))))));\n        }\n\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }));\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, children));\n        if (cities.length < 4 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page,\n        loading: true\n      }, () => this.fetchCities());\n    };\n\n    this.displayButtons = filtered => {\n      let buttons = [];\n\n      if (filtered) {\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(this.state.page > 1 ? this.state.page - 1 : 1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }, \"<<\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }\n        }, this.state.page));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(this.state.page + 1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }\n        }, \">>\"));\n      } else {\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }\n        }, \"<<\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(1);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }\n        }, \"1\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(2);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        }, \"2\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(3);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        }, \"3\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(4);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }\n        }, \"4\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(5);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }\n        }, \"5\"));\n        buttons.push(\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"outline-primary mr-1\",\n          onClick: e => {\n            this.changePage(5);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }\n        }, \">>\"));\n      }\n\n      return buttons;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n  /* works but is gacky. Use cleaner approach to access API like fetchCities method */\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Jumbotron, {\n        className: \"cities-jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, \"Cities\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"cities-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, \"City matters a lot when deciding a University to attend.\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, \"Whether you're a West Coast or East Coast person, prefer a big or small city, or looking for a city that has great access to nature, there's a city for you!\"), this.state.loading ?\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        className: \"Spinner-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(CityFilters, {\n        setter: this.setter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(CardDeck, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, this.displayCities()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }), this.displayButtons(this.state.filtered)),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Cities.js"],"names":["React","Component","Nav","CardDeck","Spinner","Navigation","Footer","Jumbotron","Card","Button","axios","CityFilters","api","Cities","state","cities","page","apiLink","loading","filtered","setter","baseApi","String","substring","lastIndexOf","setState","get","then","res","data","fetchCities","params","catch","formatNumber","value","toLocaleString","displayCities","rows","r","children","c","length","city","push","city_state_name","image_url","city_name","state_name","population","changePage","displayButtons","buttons","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,eAAe,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5Ca,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE,qCAHH;AAINC,MAAAA,OAAO,EAAE,IAJH;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KADoC;;AAAA,SAc5CC,MAd4C,GAclCH,OAAD,IAAa;AACpB,UAAII,OAAO,GAAGC,MAAM,CAACL,OAAD,CAAN,CAAgBM,SAAhB,CAA0B,CAA1B,EAA6BD,MAAM,CAACL,OAAD,CAAN,CAAgBO,WAAhB,CAA4B,GAA5B,CAA7B,CAAd;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAGI;AAAZ,OAAd;AACAX,MAAAA,KAAK,CAACgB,GAAN,CAAUT,OAAV,EACIU,IADJ,CACSC,GAAG,IAAI;AACT,cAAMb,MAAM,GAAGa,GAAG,CAACC,IAAnB;AACA,aAAKJ,QAAL,CAAc;AAAEV,UAAAA,MAAF;AAAUC,UAAAA,IAAI,EAAG;AAAjB,SAAd;;AACA,YAAIC,OAAO,KAAK,qCAAZ,IAAqDK,MAAM,CAACL,OAAD,CAAN,CAAgBM,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,MAAqC,oDAA9F,EAAoJ;AAClJ,eAAKE,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD,SAFD,MAEO;AACL,eAAKM,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD;AACJ,OATJ;AAUD,KA3B2C;;AAAA,SA8B5CW,WA9B4C,GA8B9B,MAAM;AAClBpB,MAAAA,KAAK,CAACgB,GAAN,CAAU,KAAKZ,KAAL,CAAWG,OAArB,EAA8B;AAC1Bc,QAAAA,MAAM,EAAE;AACNf,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADX;AADkB,OAA9B,EAKGW,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IALrB,EAMGF,IANH,CAMSZ,MAAD,IAAY;AAChB,aAAKU,QAAL,CAAc;AAAEV,UAAAA,MAAF;AAAUG,UAAAA,OAAO,EAAE;AAAnB,SAAd;AACD,OARH,EASGc,KATH,CASS,MAAM;AACX;AACA,aAAKP,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,GAAkB,CAA1B;AAA6BE,UAAAA,OAAO,EAAG;AAAvC,SAAd;AACD,OAZH;AAaD,KA5C2C;;AAAA,SA8C5Ce,YA9C4C,GA8C5BC,KAAD,IAAW;AACxB,aAAOA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,CAACC,cAAN,EAA7B;AACD,KAhD2C;;AAAA,SAkD5CC,aAlD4C,GAkD5B,MAAM;AACpB,YAAM;AAAErB,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,UAAIuB,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAIzB,MAAM,CAAC0B,MAAP,IAAiBD,CAAC,GAAG,IAAIF,CAA7B,EAAgC;AAC9B;AACD;;AACD,cAAII,IAAI,GAAG3B,MAAM,CAACyB,CAAC,GAAG,IAAIF,CAAT,CAAjB;AACAC,UAAAA,QAAQ,CAACI,IAAT;AAAA;AACE,8BAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,GAAD,CAAK,IAAL;AAAU,YAAA,SAAS,EAAC,eAApB;AAAoC,YAAA,IAAI,EAAE,aAAarB,MAAM,CAACoB,IAAI,CAACE,eAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAEF,IAAI,CAACG,SAApB;AAA+B,YAAA,OAAO,EAAC,KAAvC;AAA6C,YAAA,MAAM,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAEE,8BAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,8BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGH,IAAI,CAACI,SADR,QACqBJ,IAAI,CAACK,UAD1B,CADF;AAAA;AAIE,8BAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACe,KAAKd,YAAL,CAAkBS,IAAI,CAACM,UAAvB,CADf,CAJF,CAFF,CADF,CADF;AAeD;;AACDX,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACAN,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAU;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBJ,QAAtB,CAAV;AACA,YAAIxB,MAAM,CAAC0B,MAAP,GAAgB,IAAIH,CAAxB,EAA2B;AAC5B;;AACD,aAAOD,IAAP;AACD,KAjF2C;;AAAA,SAmF5CY,UAnF4C,GAmF9BjC,IAAD,IAAU;AACrB,WAAKS,QAAL,CACE;AACET,QAAAA,IAAI,EAAEA,IADR;AAEEE,QAAAA,OAAO,EAAE;AAFX,OADF,EAKE,MAAM,KAAKY,WAAL,EALR;AAOD,KA3F2C;;AAAA,SA6F5CoB,cA7F4C,GA6F1B/B,QAAD,IAAc;AAC7B,UAAIgC,OAAO,GAAG,EAAd;;AACA,UAAIhC,QAAJ,EAAc;AACZgC,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,KAAKnC,KAAL,CAAWE,IAAX,GAAkB,CAAlB,GAAsB,KAAKF,KAAL,CAAWE,IAAX,GAAkB,CAAxC,GAA4C,CAA5D;AAA+D,WAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKAmC,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK7B,KAAL,CAAWE,IADd,CADF;AAKAmC,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,KAAKnC,KAAL,CAAWE,IAAX,GAAkB,CAAlC;AAAqC,WAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAhBD,MAgBO;AACLmC,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKAE,QAAAA,OAAO,CAACR,IAAR;AAAA;AACE,4BAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,sBAAhB;AAAuC,UAAA,OAAO,EAAGS,CAAD,IAAO;AAAC,iBAAKH,UAAL,CAAgB,CAAhB;AAAmB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AACD,aAAOE,OAAP;AACD,KArJ2C;AAAA;;AAS5CE,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,WAAL;AACD;AAED;;;AA0IAwB,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAEE,0BAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAAA;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAIE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAJF;AAAA;AAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAPF,EAYG,KAAKxC,KAAL,CAAWI,OAAX;AAAA;AACC,0BAAC,OAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAAA;AAOC;AAAA;AACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAAA;AAKE,0BAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,KAAKgB,aAAL,EAAX,CALF;AAAA;AAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOG,KAAKc,cAAL,CAAoB,KAAKpC,KAAL,CAAWK,QAA/B,CAPH,CAnBJ;AAAA;AA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF;AAAA;AA8BE,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF;AADF;AAkCD;;AA1L2C","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport CityFilters from '../Components/CityFilters';\nimport { api } from '../instance';\n\nexport default class Cities extends Component {\n  state = {\n    cities: null,\n    page: 1,\n    apiLink: \"https://api.collegefitfor.me/cities\",\n    loading: true,\n    filtered: false,\n  };\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  /* works but is gacky. Use cleaner approach to access API like fetchCities method */\n  setter = (apiLink) => {\n    let baseApi = String(apiLink).substring(0, String(apiLink).lastIndexOf('&'))\n    this.setState({ apiLink : baseApi })\n    axios.get(apiLink)\n       .then(res => {\n           const cities = res.data;\n           this.setState({ cities, page : 1 });\n           if (apiLink === 'https://api.collegefitfor.me/cities' || String(apiLink).substring(0, 50) === 'https://api.collegefitfor.me/cities/filter/?order=') {\n             this.setState({ filtered: false })\n           } else {\n             this.setState({ filtered: true })\n           }\n       })\n  }\n  \n\n  fetchCities = () => {\n    axios.get(this.state.apiLink, {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((cities) => {\n        this.setState({ cities, loading: false });\n      })\n      .catch(() => {\n        // attempting to go forward to a page that doesn't exist\n        this.setState({ page: this.state.page - 1, loading : false})\n      });\n  };\n\n  formatNumber = (value) => {\n    return value === 0 ? 'N/A' : value.toLocaleString();\n  }\n\n  displayCities = () => {\n    const { cities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 4; c++) {\n        if (cities.length <= c + 4 * r) {\n          break;\n        }\n        var city = cities[c + 4 * r];\n        children.push(\n          <Card className=\"cities-card\">\n            <Nav.Link className=\"city-instance\" href={'/cities/' + String(city.city_state_name)}>\n              <Card.Img src={city.image_url} variant=\"top\" height=\"200\" />\n              <Card.Body>\n                <Card.Title>\n                  {city.city_name}, {city.state_name}\n                </Card.Title>\n                <Card.Text>\n                  Population: {this.formatNumber(city.population)}\n                </Card.Text>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (cities.length < 4 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n        loading: true,\n      },\n      () => this.fetchCities()\n    );\n  };\n\n  displayButtons = (filtered) => {\n    let buttons = []\n    if (filtered) {\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(this.state.page > 1 ? this.state.page - 1 : 1)}}>\n            &lt;&lt;\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\">\n          {this.state.page}\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(this.state.page + 1)}}>\n            &gt;&gt;\n        </Button>\n      )\n    } else {\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(1)}}>\n            &lt;&lt;\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(1)}}>\n          1\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(2)}}>\n          2\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(3)}}>\n          3\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(4)}}>\n          4\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(5)}}>\n          5\n        </Button>\n      )\n      buttons.push(\n        <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(5)}}>\n            &gt;&gt;\n        </Button>\n      )\n    }\n    return buttons\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Jumbotron className=\"cities-jumbotron\"></Jumbotron>\n        <h1>Cities</h1>\n        <p className=\"cities-header\">\n          City matters a lot when deciding a University to attend.\n        </p>\n        <p>\n          Whether you're a West Coast or East Coast person, prefer a big or\n          small city, or looking for a city that has great access to nature,\n          there's a city for you!\n        </p>\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <>\n            <div className='row d-flex justify-content-center'>\n              <CityFilters setter={this.setter} />\n            </div>\n\n            <CardDeck>{this.displayCities()}</CardDeck>\n            <p />\n            {this.displayButtons(this.state.filtered)}\n          </>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}