{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ChaikinOscillatorIndicator } from \"./ChaikinOscillatorIndicator\";\n/**\n * Represents the IgxDataChartComponent Chaikin Oscillator indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* `IgrChaikinOscillatorIndicator` class specify the series as Chaikin Oscillator Indicator series.\n*\n* ```ts\n* <IgrDataChart\n* \tref={this.onChartRef}\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*    <IgrChaikinOscillatorIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"\n* \tlongPeriod={30}/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series1 = new IgrAbsoluteVolumeOscillatorIndicator({ name: \"\"});\n* series1.xAxis = this.categoryXAxis;\n* series1.yAxis = this.numericYAxis;\n* series1.xAxisName = \"XAxis\";\n* series1.yAxisName = \"YAxis\";\n* series1.valueMemberPath = \"Volume\";\n* series1.openMemberPath = \"open\";\n* series1.highMemberPath = \"high\";\n* series1.lowMemberPath = \"low\";\n* series1.closeMemberPath = \"close\";\n* ```\n*/\n\nvar IgrChaikinOscillatorIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrChaikinOscillatorIndicator, _super);\n\n  function IgrChaikinOscillatorIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrChaikinOscillatorIndicator.prototype.createImplementation = function () {\n    return new ChaikinOscillatorIndicator();\n  };\n\n  Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"shortPeriod\", {\n    /**\n     * Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.\n     * The typical, and initial, value for short CHO periods is 3.\n    *\n    * Set the `shortPeriod` property if you wish to change the short moving average period for the indicator.\n    *\n    * ```ts\n    * this.series.shortPeriod = 30;\n    * ```\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *    <IgrChaikinOscillatorIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tShortPeriod ={5}/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.shortPeriod;\n    },\n    set: function (v) {\n      this.i.shortPeriod = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"longPeriod\", {\n    /**\n     * Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.\n     * The typical, and initial, value for long CHO periods is 10.\n    *\n    * Set the `longPeriod` property if you wish to change the long moving average period for the indicator.\n    *\n    * ```ts\n    * this.series.longPeriod = 30;\n    * ```\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *    <IgrChaikinOscillatorIndicator\n    *     name=\"series3\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Line\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tlongPeriod={30}/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.longPeriod;\n    },\n    set: function (v) {\n      this.i.longPeriod = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrChaikinOscillatorIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrChaikinOscillatorIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-chaikin-oscillator-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAalD,WAAA,6BAAA,CAAY,KAAZ,EAAsD;WACrD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,6BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,0BAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,6BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAwC5B,EAAA,MAAA,CAAA,cAAA,CAAI,6BAAA,CAAA,SAAJ,EAAI,aAAJ,EAAe;AAlCf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAkCA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,WAAf;AACA,KAFc;SAGf,UAAgB,CAAhB,EAAyB;AACxB,WAAK,CAAL,CAAO,WAAP,GAAqB,CAAC,CAAtB;AACA,KALc;oBAAA;;AAAA,GAAf;AAwCA,EAAA,MAAA,CAAA,cAAA,CAAI,6BAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AAlCd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAkCA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,UAAf;AACA,KAFa;SAGd,UAAe,CAAf,EAAwB;AACvB,WAAK,CAAL,CAAO,UAAP,GAAoB,CAAC,CAArB;AACA,KALa;oBAAA;;AAAA,GAAd;AAMD,SAAA,6BAAA;AAAC,CAhGD,CAAmD,yBAAnD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ChaikinOscillatorIndicator } from \"./ChaikinOscillatorIndicator\";\n/**\n * Represents the IgxDataChartComponent Chaikin Oscillator indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* `IgrChaikinOscillatorIndicator` class specify the series as Chaikin Oscillator Indicator series.\n*\n* ```ts\n* <IgrDataChart\n* \tref={this.onChartRef}\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*    <IgrChaikinOscillatorIndicator\n*     name=\"series3\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"\n* \tlongPeriod={30}/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series1 = new IgrAbsoluteVolumeOscillatorIndicator({ name: \"\"});\n* series1.xAxis = this.categoryXAxis;\n* series1.yAxis = this.numericYAxis;\n* series1.xAxisName = \"XAxis\";\n* series1.yAxisName = \"YAxis\";\n* series1.valueMemberPath = \"Volume\";\n* series1.openMemberPath = \"open\";\n* series1.highMemberPath = \"high\";\n* series1.lowMemberPath = \"low\";\n* series1.closeMemberPath = \"close\";\n* ```\n*/\nvar IgrChaikinOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrChaikinOscillatorIndicator, _super);\n    function IgrChaikinOscillatorIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrChaikinOscillatorIndicator.prototype.createImplementation = function () {\n        return new ChaikinOscillatorIndicator();\n    };\n    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"shortPeriod\", {\n        /**\n         * Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.\n         * The typical, and initial, value for short CHO periods is 3.\n        *\n        * Set the `shortPeriod` property if you wish to change the short moving average period for the indicator.\n        *\n        * ```ts\n        * this.series.shortPeriod = 30;\n        * ```\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *    <IgrChaikinOscillatorIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tShortPeriod ={5}/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.shortPeriod;\n        },\n        set: function (v) {\n            this.i.shortPeriod = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, \"longPeriod\", {\n        /**\n         * Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.\n         * The typical, and initial, value for long CHO periods is 10.\n        *\n        * Set the `longPeriod` property if you wish to change the long moving average period for the indicator.\n        *\n        * ```ts\n        * this.series.longPeriod = 30;\n        * ```\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *    <IgrChaikinOscillatorIndicator\n        *     name=\"series3\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Line\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tlongPeriod={30}/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.longPeriod;\n        },\n        set: function (v) {\n            this.i.longPeriod = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrChaikinOscillatorIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrChaikinOscillatorIndicator };\n//# sourceMappingURL=igr-chaikin-oscillator-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}