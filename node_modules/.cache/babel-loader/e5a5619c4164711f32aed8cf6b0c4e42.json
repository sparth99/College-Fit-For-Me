{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { MarkerManagerBucket } from \"./MarkerManagerBucket\";\nimport { ArrayExtension } from \"igniteui-react-core\";\nimport { truncate, isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar MarkerManagerBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(MarkerManagerBase, _super);\n\n  function MarkerManagerBase(a, b, c, d, e) {\n    var _this = _super.call(this) || this;\n\n    _this.f = null;\n    _this.h = null;\n    _this.a = null;\n    _this.g = null;\n    _this.e = null;\n    _this.h = a;\n    _this.g = b;\n    _this.a = c;\n    _this.f = d;\n    _this.e = e;\n    return _this;\n  }\n\n  MarkerManagerBase.prototype.d = function (a, b) {\n    var e_1, _a;\n\n    var c = new List$1(Number_$type, 0);\n    var d = new List$1(Number_$type, 0);\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var e = _c.value;\n\n        if (a.item(e).e.count > 0) {\n          c.add(e);\n        } else {\n          d.add(e);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var f = new List$1(Number_$type, 0);\n    f.o(c);\n    f.o(d);\n    return f;\n  };\n\n  MarkerManagerBase.prototype.k = function (a, b, c, d) {\n    var e_2, _a;\n\n    while (a > 0) {\n      if (a < c.count) {\n        if (!MarkerManagerBase.b) {\n          var e = c;\n          ArrayExtension.shuffle$1(Number_$type, e);\n        }\n\n        c = this.d(b, c);\n        var f = a;\n\n        var _loop_1 = function (g) {\n          var h = g;\n          var i = b.item(c._inner[h]);\n          var j;\n\n          var k = function () {\n            var l = i.f(j);\n            j = l.p0;\n            return l.ret;\n          }();\n\n          d.add(k);\n          a--;\n\n          if (i.a) {\n            b.removeItem(c._inner[h]);\n          }\n        };\n\n        for (var g = 0; g < f; g++) {\n          _loop_1(g);\n        }\n      } else {\n        var _loop_2 = function (l) {\n          var m = b.item(l);\n          var n;\n\n          var o = function () {\n            var p = m.f(n);\n            n = p.p0;\n            return p.ret;\n          }();\n\n          d.add(o);\n          a--;\n\n          if (m.a) {\n            b.removeItem(l);\n          }\n        };\n\n        try {\n          for (var _b = (e_2 = void 0, tslib_1.__values(fromEnum(c))), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var l = _c.value;\n\n            _loop_2(l);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n\n        c = new List$1(Number_$type, 1, b.keys);\n      }\n    }\n  };\n\n  MarkerManagerBase.prototype.i = function (a, b, c, d) {\n    var e = b.left;\n    var f = b.right;\n    var g = b.top;\n    var h = b.bottom;\n\n    if (!a.isEmpty && !b.isEmpty) {\n      for (var i = 0; i < c.count; ++i) {\n        var j = c.item(i).x;\n\n        if (isNaN_(j)) {\n          continue;\n        }\n\n        var k = c.item(i).y;\n\n        if (isNaN_(k)) {\n          continue;\n        }\n\n        if (j < e || j > f) {\n          continue;\n        }\n\n        if (k < g || k > h) {\n          continue;\n        }\n\n        d.add(i);\n      }\n    }\n  };\n\n  MarkerManagerBase.prototype.c = function (a, b, c, d) {\n    var e_3, _a, e_4, _b;\n\n    var e = new Array(d.count);\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(this.e())), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var f = _d.value;\n\n        if (f != -1) {\n          e[f] = true;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    var g = truncate(Math.floor(a.width / c));\n    var h = new Dictionary$2(Number_$type, MarkerManagerBucket.$, 0);\n\n    var _loop_3 = function (i) {\n      var j = d.item(i).x;\n      var k = d.item(i).y;\n      var l = truncate(Math.floor(k / c));\n      var m = truncate(Math.floor(j / c));\n      var n = l * g + m;\n      var o;\n\n      if (!function () {\n        var p = h.tryGetValue(n, o);\n        o = p.p1;\n        return p.ret;\n      }()) {\n        o = new MarkerManagerBucket();\n        h.addItem(n, o);\n      }\n\n      if (e[i]) {\n        o.e.add(i);\n      } else {\n        o.d.add(i);\n      }\n    };\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(b)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var i = _f.value;\n\n        _loop_3(i);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return h;\n  };\n\n  MarkerManagerBase.$t = markType(MarkerManagerBase, 'MarkerManagerBase');\n  MarkerManagerBase.b = false;\n  return MarkerManagerBase;\n}(Base);\n\nexport { MarkerManagerBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/MarkerManagerBase.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { MarkerManagerBucket } from \"./MarkerManagerBucket\";\nimport { ArrayExtension } from \"igniteui-react-core\";\nimport { truncate, isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar MarkerManagerBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MarkerManagerBase, _super);\n    function MarkerManagerBase(a, b, c, d, e) {\n        var _this = _super.call(this) || this;\n        _this.f = null;\n        _this.h = null;\n        _this.a = null;\n        _this.g = null;\n        _this.e = null;\n        _this.h = a;\n        _this.g = b;\n        _this.a = c;\n        _this.f = d;\n        _this.e = e;\n        return _this;\n    }\n    MarkerManagerBase.prototype.d = function (a, b) {\n        var e_1, _a;\n        var c = new List$1(Number_$type, 0);\n        var d = new List$1(Number_$type, 0);\n        try {\n            for (var _b = tslib_1.__values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var e = _c.value;\n                if (a.item(e).e.count > 0) {\n                    c.add(e);\n                }\n                else {\n                    d.add(e);\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        var f = new List$1(Number_$type, 0);\n        f.o(c);\n        f.o(d);\n        return f;\n    };\n    MarkerManagerBase.prototype.k = function (a, b, c, d) {\n        var e_2, _a;\n        while (a > 0) {\n            if (a < c.count) {\n                if (!MarkerManagerBase.b) {\n                    var e = c;\n                    ArrayExtension.shuffle$1(Number_$type, e);\n                }\n                c = this.d(b, c);\n                var f = a;\n                var _loop_1 = function (g) {\n                    var h = g;\n                    var i = b.item(c._inner[h]);\n                    var j;\n                    var k = ((function () { var l = i.f(j); j = l.p0; return l.ret; })());\n                    d.add(k);\n                    a--;\n                    if (i.a) {\n                        b.removeItem(c._inner[h]);\n                    }\n                };\n                for (var g = 0; g < f; g++) {\n                    _loop_1(g);\n                }\n            }\n            else {\n                var _loop_2 = function (l) {\n                    var m = b.item(l);\n                    var n;\n                    var o = ((function () { var p = m.f(n); n = p.p0; return p.ret; })());\n                    d.add(o);\n                    a--;\n                    if (m.a) {\n                        b.removeItem(l);\n                    }\n                };\n                try {\n                    for (var _b = (e_2 = void 0, tslib_1.__values(fromEnum(c))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var l = _c.value;\n                        _loop_2(l);\n                    }\n                }\n                catch (e_2_1) {\n                    e_2 = { error: e_2_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_2)\n                            throw e_2.error;\n                    }\n                }\n                c = new List$1(Number_$type, 1, b.keys);\n            }\n        }\n    };\n    MarkerManagerBase.prototype.i = function (a, b, c, d) {\n        var e = b.left;\n        var f = b.right;\n        var g = b.top;\n        var h = b.bottom;\n        if (!a.isEmpty && !b.isEmpty) {\n            for (var i = 0; i < c.count; ++i) {\n                var j = c.item(i).x;\n                if (isNaN_(j)) {\n                    continue;\n                }\n                var k = c.item(i).y;\n                if (isNaN_(k)) {\n                    continue;\n                }\n                if (j < e || j > f) {\n                    continue;\n                }\n                if (k < g || k > h) {\n                    continue;\n                }\n                d.add(i);\n            }\n        }\n    };\n    MarkerManagerBase.prototype.c = function (a, b, c, d) {\n        var e_3, _a, e_4, _b;\n        var e = new Array(d.count);\n        try {\n            for (var _c = tslib_1.__values(fromEnum(this.e())), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var f = _d.value;\n                if (f != -1) {\n                    e[f] = true;\n                }\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n        var g = truncate(Math.floor(a.width / c));\n        var h = new Dictionary$2(Number_$type, MarkerManagerBucket.$, 0);\n        var _loop_3 = function (i) {\n            var j = d.item(i).x;\n            var k = d.item(i).y;\n            var l = truncate(Math.floor(k / c));\n            var m = truncate(Math.floor(j / c));\n            var n = (l * g) + m;\n            var o;\n            if (!((function () { var p = h.tryGetValue(n, o); o = p.p1; return p.ret; })())) {\n                o = new MarkerManagerBucket();\n                h.addItem(n, o);\n            }\n            if (e[i]) {\n                o.e.add(i);\n            }\n            else {\n                o.d.add(i);\n            }\n        };\n        try {\n            for (var _e = tslib_1.__values(fromEnum(b)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var i = _f.value;\n                _loop_3(i);\n            }\n        }\n        catch (e_4_1) {\n            e_4 = { error: e_4_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_4)\n                    throw e_4.error;\n            }\n        }\n        return h;\n    };\n    MarkerManagerBase.$t = markType(MarkerManagerBase, 'MarkerManagerBase');\n    MarkerManagerBase.b = false;\n    return MarkerManagerBase;\n}(Base));\nexport { MarkerManagerBase };\n//# sourceMappingURL=MarkerManagerBase.js.map\n"]},"metadata":{},"sourceType":"module"}