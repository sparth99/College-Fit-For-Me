{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar TRIXIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TRIXIndicatorStrategy, _super);\n\n  function TRIXIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TRIXIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.add(\"CloseColumn\");\n    c.o(b.a.c);\n    return c;\n  };\n\n  TRIXIndicatorStrategy.prototype.a = function (a, b) {\n    var c = b.a.b(a.closeColumn, a.period);\n    var d = b.a.b(c, a.period);\n    var e = getEnumerator(b.a.b(d, a.period));\n    var f = a.indicatorColumn;\n\n    if (f.count > 0) {\n      f.item(0, 0);\n    }\n\n    var g = 1;\n    e.moveNext();\n    var h = e.current;\n\n    while (e.moveNext()) {\n      f.item(g, b.i((e.current - h) / h));\n      h = e.current;\n      g++;\n    }\n\n    return true;\n  };\n\n  TRIXIndicatorStrategy.$t = markType(TRIXIndicatorStrategy, 'TRIXIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return TRIXIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { TRIXIndicatorStrategy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/TRIXIndicatorStrategy.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAAmL,YAAnL,EAAuM,QAAvM,EAAiN,aAAjN,QAAsO,qBAAtO;AAGA,SAAS,MAAT,QAAuB,qBAAvB;AAIA;;;;AAGA,IAAA,qBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;;AAA3C,WAAA,qBAAA,GAAA;;AA0BC;;AAxBA,EAAA,qBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,aAAN;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAF,CAAI,CAAR;AACA,WAAO,CAAP;AACA,GALD;;AAMA,EAAA,qBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAA0B,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAC,CAAC,WAAR,EAAqB,CAAC,CAAC,MAAvB,CAA/B;AACA,QAAI,CAAC,GAA0B,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAN,EAAS,CAAC,CAAC,MAAX,CAA/B;AACA,QAAI,CAAC,GAA0B,aAAa,CAAC,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAN,EAAS,CAAC,CAAC,MAAX,CAAD,CAA5C;AACA,QAAI,CAAC,GAAoB,CAAC,CAAC,eAA3B;;AACA,QAAI,CAAC,CAAC,KAAF,GAAU,CAAd,EAAiB;AAChB,MAAA,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV;AACA;;AACD,QAAI,CAAC,GAAW,CAAhB;AACA,IAAA,CAAC,CAAC,QAAF;AACA,QAAI,CAAC,GAAW,CAAC,CAAC,OAAlB;;AACA,WAAO,CAAC,CAAC,QAAF,EAAP,EAAqB;AACpB,MAAA,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAC,OAAF,GAAY,CAAb,IAAkB,CAAtB,CAAV;AACA,MAAA,CAAC,GAAG,CAAC,CAAC,OAAN;AACA,MAAA,CAAC;AACD;;AACD,WAAO,IAAP;AACA,GAjBD;;AAPO,EAAA,qBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,qBAAD,EAAwB,uBAAxB,EAAuD,4BAA6B,CAAC,CAArF,CAAnB;AAyBR,SAAA,qBAAA;AAAC,CA1BD,CAA2C,4BAA3C,CAAA;;SAAa,qB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar TRIXIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TRIXIndicatorStrategy, _super);\n    function TRIXIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TRIXIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.add(\"CloseColumn\");\n        c.o(b.a.c);\n        return c;\n    };\n    TRIXIndicatorStrategy.prototype.a = function (a, b) {\n        var c = b.a.b(a.closeColumn, a.period);\n        var d = b.a.b(c, a.period);\n        var e = getEnumerator(b.a.b(d, a.period));\n        var f = a.indicatorColumn;\n        if (f.count > 0) {\n            f.item(0, 0);\n        }\n        var g = 1;\n        e.moveNext();\n        var h = e.current;\n        while (e.moveNext()) {\n            f.item(g, b.i((e.current - h) / h));\n            h = e.current;\n            g++;\n        }\n        return true;\n    };\n    TRIXIndicatorStrategy.$t = markType(TRIXIndicatorStrategy, 'TRIXIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return TRIXIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { TRIXIndicatorStrategy };\n//# sourceMappingURL=TRIXIndicatorStrategy.js.map\n"]},"metadata":{},"sourceType":"module"}