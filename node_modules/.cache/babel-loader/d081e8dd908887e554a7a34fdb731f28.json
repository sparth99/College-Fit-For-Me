{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ScatterTriangulationSeries } from \"./ScatterTriangulationSeries\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { typeCast, Number_$type, Point_$type, fromEnum, runOn, delegateRemove, delegateCombine, markType, markDep } from \"igniteui-react-core\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { FastItemIntColumn } from \"igniteui-react-core\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\nimport { SeriesView } from \"./SeriesView\";\nimport { IFastItemsSource_$type } from \"igniteui-react-core\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { ContourBuilder } from \"./ContourBuilder\";\nimport { Clipper } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { RectUtil } from \"igniteui-react-core\";\nimport { DataContext } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { boxArray$1 } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\nimport { Pool$1 } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { PointCollectionUtil } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\nimport { Tuple$2 } from \"igniteui-react-core\";\nimport { GeometryUtil } from \"igniteui-react-core\";\nimport { stringIsNullOrEmpty } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ScatterContourSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ScatterContourSeries, _super);\n\n  function ScatterContourSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.nl = null;\n    _this.nh = null;\n    FastItemIntColumn.m();\n    _this.ab = ScatterContourSeries.$;\n    _this.ni = new LinearContourValueResolver();\n    return _this;\n  }\n\n  ScatterContourSeries.prototype.fs = function (a, b) {\n    var c = this.gu(b);\n\n    if (c == ScatterContourSeries.$$p[1]) {\n      return this.ft(a, b, this.np);\n    }\n\n    return _super.prototype.fs.call(this, a, b);\n  };\n\n  ScatterContourSeries.prototype.bf = function () {\n    this.nj = new ScatterContourSeriesView(this);\n    return this.nj;\n  };\n\n  Object.defineProperty(ScatterContourSeries.prototype, \"nm\", {\n    get: function () {\n      return this.nl;\n    },\n    set: function (a) {\n      var b = this.nm != a;\n\n      if (b) {\n        var c = this.nm;\n        this.nl = a;\n        this.raisePropertyChanged(\"ValueColumn\", c, this.nm);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScatterContourSeries.prototype.iz = function (a, b, c, d) {\n    _super.prototype.iz.call(this, a, b, c, d);\n\n    switch (b) {\n      case \"FastItemsSource\":\n        var e = typeCast(IFastItemsSource_$type, c);\n\n        if (e != null) {\n          e.deregisterColumn(this.nm);\n          this.nm = null;\n        }\n\n        var f = typeCast(IFastItemsSource_$type, d);\n\n        if (f != null) {\n          this.nm = this.bw(this.np);\n        }\n\n        this.jd(false);\n        break;\n\n      case ScatterContourSeries.$$p[1]:\n        if (this.bz != null) {\n          this.bz.deregisterColumn(this.nm);\n          this.nm = this.bw(this.np);\n        }\n\n        this.jd(false);\n        this.ik();\n        break;\n\n      case \"ValueResolver\":\n        this.jd(false);\n        this.ik();\n        break;\n\n      case ScatterContourSeries.$$p[0]:\n        var g = c;\n        var h = d;\n\n        if (g != null) {\n          g.unregisterSeries(this);\n        }\n\n        if (h != null) {\n          h.registerSeries(this);\n        }\n\n        this.jd(false);\n        this.ik();\n        break;\n\n      case \"ActualBrush\":\n        this.jd(false);\n        this.ik();\n        break;\n    }\n  };\n\n  ScatterContourSeries.prototype.hv = function (a, b) {\n    _super.prototype.hv.call(this, a, b);\n\n    if (a) {\n      b.b0(a);\n    }\n  };\n\n  ScatterContourSeries.prototype.je = function (a) {\n    _super.prototype.je.call(this, a);\n\n    this.ns(this.bi);\n  };\n\n  ScatterContourSeries.prototype.jc = function (a, b, c, d, e) {\n    _super.prototype.jc.call(this, a, b, c, d, e);\n\n    var f = this.a0.a$h.item(d);\n    f.ay(c);\n\n    if (this.cc(f)) {\n      return;\n    }\n\n    this.ns(f);\n  };\n\n  ScatterContourSeries.prototype.ns = function (a) {\n    var e_1, _a;\n\n    if (this.cc(a)) {\n      return;\n    }\n\n    var b;\n    var c;\n    var d = a;\n    var e = a.getViewInfo(c, b);\n    c = e.p0;\n    b = e.p1;\n    var f = new ScalerParams(1, b, c, this.l0.b8);\n    f.c = this.getEffectiveViewport1(a);\n    var g = new ScalerParams(1, b, c, this.l1.b8);\n    g.c = this.getEffectiveViewport1(a);\n    var h = this.l0;\n    var i = this.l1;\n    var j = this.ma.count;\n    var k;\n    var xArr_ = this.md.asArray();\n    k = xArr_.slice(0);\n    var l;\n    var yArr_ = this.me.asArray();\n    l = yArr_.slice(0);\n    var m = this.nm.asArray();\n    var n = this.ma.asArray();\n    var o = this.mb.asArray();\n    var p = this.mc.asArray();\n    var q = this.ni.j(this.nm);\n    var r = new List$1(Number_$type, 1, q).toArray();\n    h.gn(boxArray$1(k), 0, k.length, f);\n    i.gn(boxArray$1(l), 0, l.length, g);\n    var s = r.length;\n    var t = new Array(s);\n\n    for (var u = 0; u < s; ++u) {\n      t[u] = new ContourBuilder();\n    }\n\n    var v = c.top;\n    var w = c.left;\n    var x = c.right;\n    var y = c.bottom;\n    var z;\n    var aa;\n    var ab;\n    var ac;\n    var ad = k.length;\n\n    for (var ae = 0; ae < j; ae++) {\n      var af = n[ae];\n      var ag = o[ae];\n      var ah = p[ae];\n\n      if (af >= ad || ag >= ad || ah >= ad || af < 0 || ag < 0 || ah < 0) {\n        continue;\n      }\n\n      var ai = k[af];\n      var aj = l[af];\n      var ak = {\n        $type: Point_$type,\n        x: ai,\n        y: aj\n      };\n      var al = k[ag];\n      var am = l[ag];\n      var an = {\n        $type: Point_$type,\n        x: al,\n        y: am\n      };\n      var ao = k[ah];\n      var ap = l[ah];\n      var aq = {\n        $type: Point_$type,\n        x: ao,\n        y: ap\n      };\n      z = an.y < aq.y ? an.y : aq.y;\n      z = ak.y < z ? ak.y : z;\n      aa = an.y > aq.y ? an.y : aq.y;\n      aa = ak.y > aa ? ak.y : aa;\n      ab = an.x < aq.x ? an.x : aq.x;\n      ab = ak.x < ab ? ak.x : ab;\n      ac = an.x > aq.x ? an.x : aq.x;\n      ac = ak.x > ac ? ak.x : ac;\n\n      if (z < y && aa > v && ab < x && ac > w) {\n        var ar = m[af];\n        var as = m[ag];\n        var at = m[ah];\n\n        if (isNaN_(ar) || isNaN_(as) || isNaN_(at)) {\n          continue;\n        }\n\n        for (var au = 0; au < s; au++) {\n          var av = r[au];\n          var aw = t[au];\n\n          switch ((ar < av ? 1 : 0) | (as < av ? 2 : 0) | (at < av ? 4 : 0)) {\n            case 0:\n              break;\n\n            case 1:\n              aw.d(aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av), aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av));\n              break;\n\n            case 2:\n              aw.d(aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av), aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av));\n              break;\n\n            case 3:\n              aw.d(aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av), aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av));\n              break;\n\n            case 4:\n              aw.d(aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av), aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av));\n              break;\n\n            case 5:\n              aw.d(aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av), aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av));\n              break;\n\n            case 6:\n              aw.d(aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av), aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av));\n              break;\n\n            case 7:\n              break;\n          }\n        }\n      }\n    }\n\n    var ax = new Clipper(0, RectUtil.r(c, 2), false);\n    var ay = new List$1(List$1.$.specialize(List$1.$.specialize(Point_$type)), 0);\n\n    for (var az = 0; az < s; ++az) {\n      var a0 = t[az];\n      var a1 = new List$1(List$1.$.specialize(Point_$type), 0);\n      var a2 = a0.c();\n\n      for (var a3 = 0; a3 < a2.count; a3++) {\n        var a4 = a2._inner[a3];\n        var a5 = new List$1(Point_$type, 0);\n        ax.i = a5;\n\n        try {\n          for (var _b = (e_1 = void 0, tslib_1.__values(fromEnum(a4))), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var a6 = _c.value;\n            ax.j({\n              $type: Point_$type,\n              x: a0.g.item(a6),\n              y: a0.h.item(a6)\n            });\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n\n        ax.i = null;\n        a1.add(a5);\n      }\n\n      ay.add(a1);\n    }\n\n    d.bz(ay, r);\n  };\n\n  Object.defineProperty(ScatterContourSeries.prototype, \"ni\", {\n    get: function () {\n      return this.nh;\n    },\n    set: function (a) {\n      var b = a != this.ni;\n\n      if (b) {\n        if (this.nh != null) {\n          var c = this.nh;\n          c.updated = delegateRemove(c.updated, runOn(this, this.nt));\n        }\n\n        var d = this.nh;\n        this.nh = a;\n\n        if (this.nh != null) {\n          var e = this.nh;\n          e.updated = delegateCombine(e.updated, runOn(this, this.nt));\n        }\n\n        this.raisePropertyChanged(\"ValueResolver\", d, a);\n        this.jd(false);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScatterContourSeries.prototype.nt = function (a, b) {\n    this.jd(false);\n  };\n\n  ScatterContourSeries.prototype.dw = function (a, b, c) {\n    return _super.prototype.dw.call(this, a, b, c) && this.ni != null && this.md != null && this.me != null && this.ma != null && this.mb != null && this.mc != null && this.md.count > 0 && this.me.count > 0 && this.ma.count > 0 && this.mb.count > 0 && this.mc.count > 0;\n  };\n\n  ScatterContourSeries.prototype.ar = function (a, b) {\n    var c = this.nj.b4(a, b);\n\n    if (c != null) {\n      return c.dataContext;\n    }\n\n    return null;\n  };\n\n  ScatterContourSeries.$t = markType(ScatterContourSeries, 'ScatterContourSeries', ScatterTriangulationSeries.$);\n  ScatterContourSeries.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterContourSeries, 'raisePropertyChanged', ['FillScale:nk:nu', [ValueBrushScale.$, null], 'ValueMemberPath:np:nv', [2, null]]);\n  return ScatterContourSeries;\n}(ScatterTriangulationSeries);\n\nexport { ScatterContourSeries };\n/**\n * @hidden\n */\n\nvar ScatterContourSeriesView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ScatterContourSeriesView, _super);\n\n  function ScatterContourSeriesView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.bw = null;\n    _this.bv = null;\n    _this.by = null;\n    _this.bx = new List$1(Brush.$, 0);\n    _this.bu = null;\n    _this.by = new List$1(Path.$, 0);\n    _this.bv = a;\n\n    _this.bw = function () {\n      var $ret = new Pool$1(Path.$);\n      $ret.create = runOn(_this, _this.b5);\n      $ret.destroy = runOn(_this, _this.b3);\n      $ret.activate = runOn(_this, _this.b1);\n      $ret.disactivate = runOn(_this, _this.b2);\n      return $ret;\n    }();\n\n    return _this;\n  }\n\n  ScatterContourSeriesView.prototype.b5 = function () {\n    var _this = this;\n\n    var a = new Path();\n\n    a.dataContext = function () {\n      var $ret = new DataContext();\n      $ret.series = _this.e;\n      return $ret;\n    }();\n\n    this.by.add(a);\n    return a;\n  };\n\n  ScatterContourSeriesView.prototype.b1 = function (a) {\n    a._visibility = 0;\n  };\n\n  ScatterContourSeriesView.prototype.b2 = function (a) {\n    a._visibility = 1;\n  };\n\n  ScatterContourSeriesView.prototype.b3 = function (a) {\n    this.by.remove(a);\n  };\n\n  ScatterContourSeriesView.prototype.bz = function (a, b) {\n    var c = 0;\n    this.bu = b;\n    this.bx.clear();\n    var d = this.bv.nk;\n\n    if (d == null) {\n      d = new ValueBrushScale();\n      d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n      d.brushes.add(this.e.k3);\n    } else if (d.brushes == null) {\n      d.brushes = new BrushCollection();\n      d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n      d.brushes.add(this.e.k3);\n    } else if (d.brushes.count == 0) {\n      d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n      d.brushes.add(this.e.k3);\n    }\n\n    for (var e = 0; e < b.length; e++) {\n      var f = b[e];\n      var g = a._inner[c];\n      var h = new PathGeometry();\n\n      var _loop_1 = function (i) {\n        var j = g._inner[i];\n\n        if (j.count == 0) {\n          return \"continue\";\n        }\n\n        var k = PointCollectionUtil.f(j);\n\n        var l = function () {\n          var $ret = new PathFigure();\n          $ret.isClosed = false;\n          $ret.isFilled = false;\n          $ret.startPoint = k._inner[0];\n          return $ret;\n        }();\n\n        l._segments.add(function () {\n          var $ret = new PolyLineSegment();\n          $ret.points = k;\n          return $ret;\n        }());\n\n        h.c.add(l);\n      };\n\n      for (var i = 0; i < g.count; i++) {\n        _loop_1(i);\n      }\n\n      this.bw.item(c).ak = h;\n\n      if (this.bw.item(c).dataContext != null) {\n        this.bw.item(c).dataContext.item = f;\n      }\n\n      if (d != null) {\n        var m = d.getBrushByValue(f, this.bv.nm);\n\n        if (m == null) {\n          m = this.e.k3;\n        }\n\n        this.bx.add(m);\n      } else {\n        this.bx.add(this.e.k3);\n      }\n\n      c++;\n    }\n\n    this.bw.count = c;\n    this.an();\n  };\n\n  ScatterContourSeriesView.prototype.bb = function (a, b) {\n    _super.prototype.bb.call(this, a, b);\n\n    var c = a;\n    c._stroke = this.bx._inner[b];\n    c.ac = this.e.ey;\n\n    if (c.y != null) {\n      this.h.i(c, c.y);\n    }\n  };\n\n  ScatterContourSeriesView.prototype.bc = function (a, b) {\n    _super.prototype.bc.call(this, a, b);\n\n    var c = a;\n    var d = this.bm(b);\n    c._stroke = d;\n    c.ac = this.e.ey + 3;\n  };\n\n  ScatterContourSeriesView.prototype.a3 = function (a, b) {\n    _super.prototype.a3.call(this, a, b);\n\n    for (var c = 0; c < this.by.count; c++) {\n      var d = this.by._inner[c];\n\n      if (d._visibility != 1) {\n        this.ba(d, c, b);\n        a.s(d);\n      }\n    }\n  };\n\n  ScatterContourSeriesView.prototype.b0 = function (a) {\n    this.bw.count = 0;\n    this.an();\n  };\n\n  ScatterContourSeriesView.prototype.ai = function (a) {\n    _super.prototype.ai.call(this, a);\n\n    var b = new List$1(Tuple$2.$.specialize(Number_$type, Path.$), 0);\n\n    if (this.bu != null) {\n      for (var c = 0; c < this.bw.count; c++) {\n        b.add(new Tuple$2(Number_$type, Path.$, this.bu[c], this.bw.item(c)));\n      }\n    }\n\n    b.aa(function (d, e) {\n      if (d.c < e.c) {\n        return -1;\n      } else if (d.c > e.c) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    for (var d = 0; d < b.count; d++) {\n      var e = typeCast(Path.$, b._inner[d].d);\n\n      if (e._visibility != 1) {\n        this.e.a2.exportPathData(a, e, \"contour\" + d, [\"Main \"]);\n      }\n    }\n  };\n\n  ScatterContourSeriesView.prototype.getDefaultTooltipTemplate = function () {\n    var a = \"<div class='ui-chart-default-tooltip-content'><span\";\n    var b = this.e.a0.a$q(this.e);\n\n    if (!stringIsNullOrEmpty(b)) {\n      a += \" style='color:\" + b + \"'\";\n    }\n\n    a += \">\" + this.bv.fx + \"</span><br/>\";\n\n    if (!stringIsNullOrEmpty(this.bv.np)) {\n      a += \"<span>Value: ${item}</span>\";\n    }\n\n    a += \"</div>\";\n    return a;\n  };\n\n  ScatterContourSeriesView.prototype.b4 = function (a, b) {\n    for (var c = 0; c < this.by.count; c++) {\n      var d = this.by._inner[c];\n      var e = typeCast(PathGeometry.$, d.ak);\n\n      if (e != null) {\n        for (var f = 0; f < e.c.count; f++) {\n          var g = e.c._inner[f];\n          var h = e.c._inner[f]._startPoint;\n\n          for (var i = 0; i < g._segments.count; i++) {\n            var j = typeCast(PolyLineSegment.$, g._segments._inner[i]);\n\n            if (j != null) {\n              var k = this.bv.ey / 2 + this.bv.ee(b);\n\n              if (j._points.count > 0 && GeometryUtil.b(a, h, j._points, k)) {\n                return d;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  ScatterContourSeriesView.$t = markType(ScatterContourSeriesView, 'ScatterContourSeriesView', SeriesView.$);\n  return ScatterContourSeriesView;\n}(SeriesView);\n\nexport { ScatterContourSeriesView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ScatterContourSeries_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ScatterTriangulationSeries } from \"./ScatterTriangulationSeries\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { typeCast, Number_$type, Point_$type, fromEnum, runOn, delegateRemove, delegateCombine, markType, markDep } from \"igniteui-react-core\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { FastItemIntColumn } from \"igniteui-react-core\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\nimport { SeriesView } from \"./SeriesView\";\nimport { IFastItemsSource_$type } from \"igniteui-react-core\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { ContourBuilder } from \"./ContourBuilder\";\nimport { Clipper } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { RectUtil } from \"igniteui-react-core\";\nimport { DataContext } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { boxArray$1 } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\nimport { Pool$1 } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { PointCollectionUtil } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\nimport { Tuple$2 } from \"igniteui-react-core\";\nimport { GeometryUtil } from \"igniteui-react-core\";\nimport { stringIsNullOrEmpty } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ScatterContourSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScatterContourSeries, _super);\n    function ScatterContourSeries() {\n        var _this = _super.call(this) || this;\n        _this.nl = null;\n        _this.nh = null;\n        FastItemIntColumn.m();\n        _this.ab = ScatterContourSeries.$;\n        _this.ni = new LinearContourValueResolver();\n        return _this;\n    }\n    ScatterContourSeries.prototype.fs = function (a, b) {\n        var c = this.gu(b);\n        if (c == ScatterContourSeries.$$p[1]) {\n            return this.ft(a, b, this.np);\n        }\n        return _super.prototype.fs.call(this, a, b);\n    };\n    ScatterContourSeries.prototype.bf = function () {\n        this.nj = new ScatterContourSeriesView(this);\n        return this.nj;\n    };\n    Object.defineProperty(ScatterContourSeries.prototype, \"nm\", {\n        get: function () {\n            return this.nl;\n        },\n        set: function (a) {\n            var b = this.nm != a;\n            if (b) {\n                var c = this.nm;\n                this.nl = a;\n                this.raisePropertyChanged(\"ValueColumn\", c, this.nm);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScatterContourSeries.prototype.iz = function (a, b, c, d) {\n        _super.prototype.iz.call(this, a, b, c, d);\n        switch (b) {\n            case \"FastItemsSource\":\n                var e = typeCast(IFastItemsSource_$type, c);\n                if (e != null) {\n                    e.deregisterColumn(this.nm);\n                    this.nm = null;\n                }\n                var f = typeCast(IFastItemsSource_$type, d);\n                if (f != null) {\n                    this.nm = this.bw(this.np);\n                }\n                this.jd(false);\n                break;\n            case ScatterContourSeries.$$p[1]:\n                if (this.bz != null) {\n                    this.bz.deregisterColumn(this.nm);\n                    this.nm = this.bw(this.np);\n                }\n                this.jd(false);\n                this.ik();\n                break;\n            case \"ValueResolver\":\n                this.jd(false);\n                this.ik();\n                break;\n            case ScatterContourSeries.$$p[0]:\n                var g = c;\n                var h = d;\n                if (g != null) {\n                    g.unregisterSeries(this);\n                }\n                if (h != null) {\n                    h.registerSeries(this);\n                }\n                this.jd(false);\n                this.ik();\n                break;\n            case \"ActualBrush\":\n                this.jd(false);\n                this.ik();\n                break;\n        }\n    };\n    ScatterContourSeries.prototype.hv = function (a, b) {\n        _super.prototype.hv.call(this, a, b);\n        if (a) {\n            b.b0(a);\n        }\n    };\n    ScatterContourSeries.prototype.je = function (a) {\n        _super.prototype.je.call(this, a);\n        this.ns(this.bi);\n    };\n    ScatterContourSeries.prototype.jc = function (a, b, c, d, e) {\n        _super.prototype.jc.call(this, a, b, c, d, e);\n        var f = this.a0.a$h.item(d);\n        f.ay(c);\n        if (this.cc(f)) {\n            return;\n        }\n        this.ns(f);\n    };\n    ScatterContourSeries.prototype.ns = function (a) {\n        var e_1, _a;\n        if (this.cc(a)) {\n            return;\n        }\n        var b;\n        var c;\n        var d = a;\n        var e = a.getViewInfo(c, b);\n        c = e.p0;\n        b = e.p1;\n        var f = new ScalerParams(1, b, c, this.l0.b8);\n        f.c = this.getEffectiveViewport1(a);\n        var g = new ScalerParams(1, b, c, this.l1.b8);\n        g.c = this.getEffectiveViewport1(a);\n        var h = this.l0;\n        var i = this.l1;\n        var j = this.ma.count;\n        var k;\n        var xArr_ = this.md.asArray();\n        k = (xArr_.slice(0));\n        var l;\n        var yArr_ = this.me.asArray();\n        l = (yArr_.slice(0));\n        var m = this.nm.asArray();\n        var n = this.ma.asArray();\n        var o = this.mb.asArray();\n        var p = this.mc.asArray();\n        var q = this.ni.j(this.nm);\n        var r = new List$1(Number_$type, 1, q).toArray();\n        h.gn(boxArray$1(k), 0, k.length, f);\n        i.gn(boxArray$1(l), 0, l.length, g);\n        var s = r.length;\n        var t = new Array(s);\n        for (var u = 0; u < s; ++u) {\n            t[u] = new ContourBuilder();\n        }\n        var v = c.top;\n        var w = c.left;\n        var x = c.right;\n        var y = c.bottom;\n        var z;\n        var aa;\n        var ab;\n        var ac;\n        var ad = k.length;\n        for (var ae = 0; ae < j; ae++) {\n            var af = n[ae];\n            var ag = o[ae];\n            var ah = p[ae];\n            if ((af >= ad) || (ag >= ad) || (ah >= ad) || (af < 0) || (ag < 0) || (ah < 0)) {\n                continue;\n            }\n            var ai = k[af];\n            var aj = l[af];\n            var ak = { $type: Point_$type, x: ai, y: aj };\n            var al = k[ag];\n            var am = l[ag];\n            var an = { $type: Point_$type, x: al, y: am };\n            var ao = k[ah];\n            var ap = l[ah];\n            var aq = { $type: Point_$type, x: ao, y: ap };\n            z = an.y < aq.y ? an.y : aq.y;\n            z = ak.y < z ? ak.y : z;\n            aa = an.y > aq.y ? an.y : aq.y;\n            aa = ak.y > aa ? ak.y : aa;\n            ab = an.x < aq.x ? an.x : aq.x;\n            ab = ak.x < ab ? ak.x : ab;\n            ac = an.x > aq.x ? an.x : aq.x;\n            ac = ak.x > ac ? ak.x : ac;\n            if (z < y && aa > v && ab < x && ac > w) {\n                var ar = m[af];\n                var as = m[ag];\n                var at = m[ah];\n                if (isNaN_(ar) || isNaN_(as) || isNaN_(at)) {\n                    continue;\n                }\n                for (var au = 0; au < s; au++) {\n                    var av = r[au];\n                    var aw = t[au];\n                    switch ((ar < av ? 1 : 0) | (as < av ? 2 : 0) | (at < av ? 4 : 0)) {\n                        case 0: break;\n                        case 1:\n                            aw.d(aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av), aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av));\n                            break;\n                        case 2:\n                            aw.d(aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av), aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av));\n                            break;\n                        case 3:\n                            aw.d(aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av), aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av));\n                            break;\n                        case 4:\n                            aw.d(aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av), aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av));\n                            break;\n                        case 5:\n                            aw.d(aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av), aw.k(ag, an.x, an.y, as, ah, aq.x, aq.y, at, av));\n                            break;\n                        case 6:\n                            aw.d(aw.k(ah, aq.x, aq.y, at, af, ak.x, ak.y, ar, av), aw.k(af, ak.x, ak.y, ar, ag, an.x, an.y, as, av));\n                            break;\n                        case 7: break;\n                    }\n                }\n            }\n        }\n        var ax = new Clipper(0, RectUtil.r(c, 2), false);\n        var ay = new List$1(List$1.$.specialize(List$1.$.specialize(Point_$type)), 0);\n        for (var az = 0; az < s; ++az) {\n            var a0 = t[az];\n            var a1 = new List$1(List$1.$.specialize(Point_$type), 0);\n            var a2 = a0.c();\n            for (var a3 = 0; a3 < a2.count; a3++) {\n                var a4 = a2._inner[a3];\n                var a5 = new List$1(Point_$type, 0);\n                ax.i = a5;\n                try {\n                    for (var _b = (e_1 = void 0, tslib_1.__values(fromEnum(a4))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var a6 = _c.value;\n                        ax.j({ $type: Point_$type, x: a0.g.item(a6), y: a0.h.item(a6) });\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n                ax.i = null;\n                a1.add(a5);\n            }\n            ay.add(a1);\n        }\n        d.bz(ay, r);\n    };\n    Object.defineProperty(ScatterContourSeries.prototype, \"ni\", {\n        get: function () {\n            return this.nh;\n        },\n        set: function (a) {\n            var b = a != this.ni;\n            if (b) {\n                if (this.nh != null) {\n                    var c = this.nh;\n                    c.updated = delegateRemove(c.updated, runOn(this, this.nt));\n                }\n                var d = this.nh;\n                this.nh = a;\n                if (this.nh != null) {\n                    var e = this.nh;\n                    e.updated = delegateCombine(e.updated, runOn(this, this.nt));\n                }\n                this.raisePropertyChanged(\"ValueResolver\", d, a);\n                this.jd(false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScatterContourSeries.prototype.nt = function (a, b) {\n        this.jd(false);\n    };\n    ScatterContourSeries.prototype.dw = function (a, b, c) {\n        return _super.prototype.dw.call(this, a, b, c) && this.ni != null && this.md != null && this.me != null && this.ma != null && this.mb != null && this.mc != null && this.md.count > 0 && this.me.count > 0 && this.ma.count > 0 && this.mb.count > 0 && this.mc.count > 0;\n    };\n    ScatterContourSeries.prototype.ar = function (a, b) {\n        var c = this.nj.b4(a, b);\n        if (c != null) {\n            return c.dataContext;\n        }\n        return null;\n    };\n    ScatterContourSeries.$t = markType(ScatterContourSeries, 'ScatterContourSeries', ScatterTriangulationSeries.$);\n    ScatterContourSeries.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterContourSeries, 'raisePropertyChanged', ['FillScale:nk:nu', [ValueBrushScale.$, null], 'ValueMemberPath:np:nv', [2, null]]);\n    return ScatterContourSeries;\n}(ScatterTriangulationSeries));\nexport { ScatterContourSeries };\n/**\n * @hidden\n */\nvar ScatterContourSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScatterContourSeriesView, _super);\n    function ScatterContourSeriesView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.bw = null;\n        _this.bv = null;\n        _this.by = null;\n        _this.bx = new List$1(Brush.$, 0);\n        _this.bu = null;\n        _this.by = new List$1(Path.$, 0);\n        _this.bv = a;\n        _this.bw = ((function () {\n            var $ret = new Pool$1(Path.$);\n            $ret.create = runOn(_this, _this.b5);\n            $ret.destroy = runOn(_this, _this.b3);\n            $ret.activate = runOn(_this, _this.b1);\n            $ret.disactivate = runOn(_this, _this.b2);\n            return $ret;\n        })());\n        return _this;\n    }\n    ScatterContourSeriesView.prototype.b5 = function () {\n        var _this = this;\n        var a = new Path();\n        a.dataContext = ((function () {\n            var $ret = new DataContext();\n            $ret.series = _this.e;\n            return $ret;\n        })());\n        this.by.add(a);\n        return a;\n    };\n    ScatterContourSeriesView.prototype.b1 = function (a) {\n        a._visibility = 0;\n    };\n    ScatterContourSeriesView.prototype.b2 = function (a) {\n        a._visibility = 1;\n    };\n    ScatterContourSeriesView.prototype.b3 = function (a) {\n        this.by.remove(a);\n    };\n    ScatterContourSeriesView.prototype.bz = function (a, b) {\n        var c = 0;\n        this.bu = b;\n        this.bx.clear();\n        var d = this.bv.nk;\n        if (d == null) {\n            d = new ValueBrushScale();\n            d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n            d.brushes.add(this.e.k3);\n        }\n        else if (d.brushes == null) {\n            d.brushes = new BrushCollection();\n            d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n            d.brushes.add(this.e.k3);\n        }\n        else if (d.brushes.count == 0) {\n            d.brushes.add(BrushUtil.h(this.e.k3, -0.5));\n            d.brushes.add(this.e.k3);\n        }\n        for (var e = 0; e < b.length; e++) {\n            var f = b[e];\n            var g = a._inner[c];\n            var h = new PathGeometry();\n            var _loop_1 = function (i) {\n                var j = g._inner[i];\n                if (j.count == 0) {\n                    return \"continue\";\n                }\n                var k = PointCollectionUtil.f(j);\n                var l = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.isClosed = false;\n                    $ret.isFilled = false;\n                    $ret.startPoint = k._inner[0];\n                    return $ret;\n                })());\n                l._segments.add(((function () {\n                    var $ret = new PolyLineSegment();\n                    $ret.points = k;\n                    return $ret;\n                })()));\n                h.c.add(l);\n            };\n            for (var i = 0; i < g.count; i++) {\n                _loop_1(i);\n            }\n            this.bw.item(c).ak = h;\n            if (this.bw.item(c).dataContext != null) {\n                this.bw.item(c).dataContext.item = f;\n            }\n            if (d != null) {\n                var m = d.getBrushByValue(f, this.bv.nm);\n                if (m == null) {\n                    m = this.e.k3;\n                }\n                this.bx.add(m);\n            }\n            else {\n                this.bx.add(this.e.k3);\n            }\n            c++;\n        }\n        this.bw.count = c;\n        this.an();\n    };\n    ScatterContourSeriesView.prototype.bb = function (a, b) {\n        _super.prototype.bb.call(this, a, b);\n        var c = a;\n        c._stroke = this.bx._inner[b];\n        c.ac = this.e.ey;\n        if (c.y != null) {\n            this.h.i(c, c.y);\n        }\n    };\n    ScatterContourSeriesView.prototype.bc = function (a, b) {\n        _super.prototype.bc.call(this, a, b);\n        var c = a;\n        var d = this.bm(b);\n        c._stroke = d;\n        c.ac = this.e.ey + 3;\n    };\n    ScatterContourSeriesView.prototype.a3 = function (a, b) {\n        _super.prototype.a3.call(this, a, b);\n        for (var c = 0; c < this.by.count; c++) {\n            var d = this.by._inner[c];\n            if (d._visibility != 1) {\n                this.ba(d, c, b);\n                a.s(d);\n            }\n        }\n    };\n    ScatterContourSeriesView.prototype.b0 = function (a) {\n        this.bw.count = 0;\n        this.an();\n    };\n    ScatterContourSeriesView.prototype.ai = function (a) {\n        _super.prototype.ai.call(this, a);\n        var b = new List$1(Tuple$2.$.specialize(Number_$type, Path.$), 0);\n        if (this.bu != null) {\n            for (var c = 0; c < this.bw.count; c++) {\n                b.add(new Tuple$2(Number_$type, Path.$, this.bu[c], this.bw.item(c)));\n            }\n        }\n        b.aa(function (d, e) {\n            if (d.c < e.c) {\n                return -1;\n            }\n            else if (d.c > e.c) {\n                return 1;\n            }\n            return 0;\n        });\n        for (var d = 0; d < b.count; d++) {\n            var e = typeCast(Path.$, b._inner[d].d);\n            if (e._visibility != 1) {\n                this.e.a2.exportPathData(a, e, \"contour\" + d, [\"Main \"]);\n            }\n        }\n    };\n    ScatterContourSeriesView.prototype.getDefaultTooltipTemplate = function () {\n        var a = \"<div class='ui-chart-default-tooltip-content'><span\";\n        var b = this.e.a0.a$q(this.e);\n        if (!stringIsNullOrEmpty(b)) {\n            a += \" style='color:\" + b + \"'\";\n        }\n        a += \">\" + this.bv.fx + \"</span><br/>\";\n        if (!stringIsNullOrEmpty(this.bv.np)) {\n            a += \"<span>Value: ${item}</span>\";\n        }\n        a += \"</div>\";\n        return a;\n    };\n    ScatterContourSeriesView.prototype.b4 = function (a, b) {\n        for (var c = 0; c < this.by.count; c++) {\n            var d = this.by._inner[c];\n            var e = typeCast(PathGeometry.$, d.ak);\n            if (e != null) {\n                for (var f = 0; f < e.c.count; f++) {\n                    var g = e.c._inner[f];\n                    var h = e.c._inner[f]._startPoint;\n                    for (var i = 0; i < g._segments.count; i++) {\n                        var j = typeCast(PolyLineSegment.$, g._segments._inner[i]);\n                        if (j != null) {\n                            var k = this.bv.ey / 2 + this.bv.ee(b);\n                            if (j._points.count > 0 && GeometryUtil.b(a, h, j._points, k)) {\n                                return d;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    ScatterContourSeriesView.$t = markType(ScatterContourSeriesView, 'ScatterContourSeriesView', SeriesView.$);\n    return ScatterContourSeriesView;\n}(SeriesView));\nexport { ScatterContourSeriesView };\n//# sourceMappingURL=ScatterContourSeries_combined.js.map\n"]},"metadata":{},"sourceType":"module"}