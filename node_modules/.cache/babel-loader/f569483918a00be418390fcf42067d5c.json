{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { NumericScaler } from \"./NumericScaler\";\nimport { markType } from \"igniteui-react-core\";\nimport { AutoRangeCalculator } from \"./AutoRangeCalculator\";\n/**\n * @hidden\n */\n\nvar LogarithmicScaler =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(LogarithmicScaler, _super);\n\n  function LogarithmicScaler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ae = 0;\n    _this.ad = 0;\n    return _this;\n  }\n\n  LogarithmicScaler.prototype.w = function (a, b, c) {\n    _super.prototype.w.call(this, a, b, c);\n\n    switch (a) {\n      case NumericScaler.$$p[1]:\n        this.ae = Math.log(this.l);\n        break;\n\n      case NumericScaler.$$p[0]:\n        this.ad = Math.log(this.k);\n        break;\n    }\n  };\n\n  LogarithmicScaler.prototype.t = function (a, b, c, d, e) {\n    var f;\n    var g;\n    var h = AutoRangeCalculator.a(a, b, c, true, a.kg, f, g);\n    f = h.p5;\n    g = h.p6;\n    d = f;\n    e = g;\n    return {\n      p3: d,\n      p4: e\n    };\n  };\n\n  LogarithmicScaler.$t = markType(LogarithmicScaler, 'LogarithmicScaler', NumericScaler.$);\n  return LogarithmicScaler;\n}(NumericScaler);\n\nexport { LogarithmicScaler };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/LogarithmicScaler.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAqB,QAArB,QAAqC,qBAArC;AAEA,SAAS,mBAAT,QAAoC,uBAApC;AAEA;;;;AAGA,IAAA,iBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAAhD,WAAA,iBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEC,IAAA,KAAA,CAAA,EAAA,GAAa,CAAb;AACA,IAAA,KAAA,CAAA,EAAA,GAAa,CAAb;;AA6BA;;AA5BU,EAAA,iBAAA,CAAA,SAAA,CAAA,CAAA,GAAV,UAAY,CAAZ,EAAuB,CAAvB,EAA+B,CAA/B,EAAqC;AACpC,IAAA,MAAA,CAAA,SAAA,CAAM,CAAN,CAAO,IAAP,CAAO,IAAP,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd;;AACA,YAAQ,CAAR;AACC,WAAK,aAAa,CAAC,GAAd,CAAkB,CAAlB,CAAL;AACA,aAAK,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,KAAK,CAAd,CAAV;AACA;;AAEA,WAAK,aAAa,CAAC,GAAd,CAAkB,CAAlB,CAAL;AACA,aAAK,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,KAAK,CAAd,CAAV;AACA;AAPD;AAWA,GAbS;;AAcV,EAAA,iBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAsB,CAAtB,EAAiC,CAAjC,EAA4C,CAA5C,EAAuD,CAAvD,EAAgE;AAC/D,QAAI,CAAJ;AACA,QAAI,CAAJ;AACA,QAAI,CAAC,GAAG,mBAAmB,CAAC,CAApB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,IAA/B,EAAqC,CAAC,CAAC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,CAAR;AACA,IAAA,CAAC,GAAG,CAAC,CAAC,EAAN;AACA,IAAA,CAAC,GAAG,CAAC,CAAC,EAAN;AACA,IAAA,CAAC,GAAG,CAAJ;AACA,IAAA,CAAC,GAAG,CAAJ;AACA,WAAO;AACN,MAAA,EAAE,EAAE,CADE;AAEN,MAAA,EAAE,EAAE;AAFE,KAAP;AAKA,GAbD;;AAjBO,EAAA,iBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iBAAD,EAAoB,mBAApB,EAA+C,aAAc,CAAC,CAA9D,CAAnB;AA+BR,SAAA,iBAAA;AAAC,CAhCD,CAAgD,aAAhD,CAAA;;SAAsB,iB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { NumericScaler } from \"./NumericScaler\";\nimport { markType } from \"igniteui-react-core\";\nimport { AutoRangeCalculator } from \"./AutoRangeCalculator\";\n/**\n * @hidden\n */\nvar LogarithmicScaler = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(LogarithmicScaler, _super);\n    function LogarithmicScaler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.ae = 0;\n        _this.ad = 0;\n        return _this;\n    }\n    LogarithmicScaler.prototype.w = function (a, b, c) {\n        _super.prototype.w.call(this, a, b, c);\n        switch (a) {\n            case NumericScaler.$$p[1]:\n                this.ae = Math.log(this.l);\n                break;\n            case NumericScaler.$$p[0]:\n                this.ad = Math.log(this.k);\n                break;\n        }\n    };\n    LogarithmicScaler.prototype.t = function (a, b, c, d, e) {\n        var f;\n        var g;\n        var h = AutoRangeCalculator.a(a, b, c, true, a.kg, f, g);\n        f = h.p5;\n        g = h.p6;\n        d = f;\n        e = g;\n        return {\n            p3: d,\n            p4: e\n        };\n    };\n    LogarithmicScaler.$t = markType(LogarithmicScaler, 'LogarithmicScaler', NumericScaler.$);\n    return LogarithmicScaler;\n}(NumericScaler));\nexport { LogarithmicScaler };\n//# sourceMappingURL=LogarithmicScaler.js.map\n"]},"metadata":{},"sourceType":"module"}