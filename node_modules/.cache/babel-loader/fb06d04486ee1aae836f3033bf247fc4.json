{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\n/**\n * Financial indicator base class for doing calculating an itemwize indicator.\n * An itemwise indicator's individual values don't depend on any other values in the\n * collection so can always be independently recalculated. Also, because of this, the\n * base class handles all the looping logic and inheritors only need to provide the\n * actual calculation.\n*/\n\nvar IgrItemwiseStrategyBasedIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrItemwiseStrategyBasedIndicator, _super);\n\n  function IgrItemwiseStrategyBasedIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrItemwiseStrategyBasedIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrItemwiseStrategyBasedIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrItemwiseStrategyBasedIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-itemwise-strategy-based-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAMA;;;;;;;;AAOA,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6J,EAAA,OAAA,CAAA,SAAA,CAAA,iCAAA,EAAA,MAAA;;AAU5J,WAAA,iCAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAP2B,EAAA,MAAA,CAAA,cAAA,CAAW,iCAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAQ7B,SAAA,iCAAA;AAAC,CAfD,CAA6J,yBAA7J,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\n/**\n * Financial indicator base class for doing calculating an itemwize indicator.\n * An itemwise indicator's individual values don't depend on any other values in the\n * collection so can always be independently recalculated. Also, because of this, the\n * base class handles all the looping logic and inheritors only need to provide the\n * actual calculation.\n*/\nvar IgrItemwiseStrategyBasedIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrItemwiseStrategyBasedIndicator, _super);\n    function IgrItemwiseStrategyBasedIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrItemwiseStrategyBasedIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrItemwiseStrategyBasedIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrItemwiseStrategyBasedIndicator };\n//# sourceMappingURL=igr-itemwise-strategy-based-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}