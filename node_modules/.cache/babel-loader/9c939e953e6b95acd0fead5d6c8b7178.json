{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { DependencyObject } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, PropertyChangedEventArgs, runOn, delegateCombine, fromEnum, delegateRemove, markType } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { Series } from \"./Series\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { BrushCollectionUtil } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar BrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(BrushScale, _super);\n\n  function BrushScale() {\n    var _this = _super.call(this) || this;\n\n    _this.j = null;\n    _this.o = null;\n    _this.propertyChanged = null;\n    _this.propertyUpdated = null;\n    _this.o = new List$1(Series.$, 0);\n    _this.brushes = new BrushCollection();\n    var a = _this.brushes;\n    a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.p));\n    _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (b, c) {\n      return _this.q(b, c.propertyName, c.oldValue, c.newValue);\n    });\n    return _this;\n  }\n\n  BrushScale.prototype.p = function (a, b) {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        c.jd(false);\n        c.id();\n        c.ik();\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"brushes\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      var e_2, _a;\n\n      var b = this.j;\n\n      if (this.j != null) {\n        var c = this.j;\n        c.collectionChanged = delegateRemove(c.collectionChanged, runOn(this, this.p));\n      }\n\n      this.j = a;\n\n      if (this.j != null) {\n        var d = this.j;\n        d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.p));\n      }\n\n      try {\n        for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var e = _c.value;\n          e.jd(false);\n          e.id();\n          e.ik();\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrushScale.prototype.registerSeries = function (a) {\n    var b = this.o.contains(a);\n\n    if (!b) {\n      this.o.add(a);\n    }\n  };\n\n  BrushScale.prototype.unregisterSeries = function (a) {\n    var b = this.o.contains(a);\n\n    if (b) {\n      this.o.remove(a);\n    }\n  };\n\n  BrushScale.prototype.getBrush = function (a) {\n    if (this.brushes == null || a < 0 || a >= this.brushes.count) {\n      return null;\n    }\n\n    return this.brushes.item(a);\n  };\n\n  BrushScale.prototype.get_isReady = function () {\n    return true;\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"isReady\", {\n    get: function () {\n      return this.get_isReady();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BrushScale.prototype.v = function (a) {\n    if (this.brushes == null || this.brushes.count == 0 || a < 0) {\n      return null;\n    }\n\n    return BrushCollectionUtil.b(this.brushes, a);\n  };\n\n  BrushScale.prototype.r = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    if (this.propertyUpdated != null) {\n      this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n    }\n  };\n\n  BrushScale.prototype.q = function (a, b, c, d) {\n    var e_3, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var e = _c.value;\n        e.jd(false);\n        e.id();\n        e.ik();\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  BrushScale.prototype.get_isBrushScale = function () {\n    return true;\n  };\n\n  Object.defineProperty(BrushScale.prototype, \"isBrushScale\", {\n    get: function () {\n      return this.get_isBrushScale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  BrushScale.$t = markType(BrushScale, 'BrushScale', DependencyObject.$, [INotifyPropertyChanged_$type]);\n  return BrushScale;\n}(DependencyObject);\n\nexport { BrushScale };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/BrushScale.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,gBAAT,QAAiC,qBAAjC;AACA,SAAiC,4BAAjC,EAAyK,wBAAzK,EAAmM,KAAnM,EAA0M,eAA1M,EAA2N,QAA3N,EAAqO,cAArO,EAA2P,QAA3P,QAA2Q,qBAA3Q;AACA,SAAS,eAAT,QAAgC,qBAAhC;AACA,SAAS,MAAT,QAAuB,UAAvB;AAIA,SAAS,MAAT,QAAuB,qBAAvB;AACA,SAAS,wBAAT,QAAyC,qBAAzC;AACA,SAAS,mBAAT,QAAoC,qBAApC;AAEA;;;;AAGA,IAAA,UAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAE/B,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAmCQ,IAAA,KAAA,CAAA,CAAA,GAAqB,IAArB;AACR,IAAA,KAAA,CAAA,CAAA,GAAoB,IAApB;AA+BA,IAAA,KAAA,CAAA,eAAA,GAAsE,IAAtE;AACA,IAAA,KAAA,CAAA,eAAA,GAAsE,IAAtE;AAlEC,IAAA,KAAI,CAAC,CAAL,GAAS,IAAI,MAAJ,CAAyB,MAAO,CAAC,CAAjC,EAAoC,CAApC,CAAT;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,IAAI,eAAJ,EAAf;AACA,QAAI,CAAC,GAAG,KAAI,CAAC,OAAb;AACA,IAAA,CAAC,CAAC,iBAAF,GAAsB,eAAe,CAAC,CAAC,CAAC,iBAAH,EAAsB,KAAK,CAAC,KAAD,EAAO,KAAI,CAAC,CAAZ,CAA3B,CAArC;AACA,IAAA,KAAI,CAAC,eAAL,GAAuB,eAAe,CAAC,KAAI,CAAC,eAAN,EAAuB,UAAC,CAAD,EAAS,CAAT,EAAoC;AAAK,aAAA,KAAI,CAAC,CAAL,CAAO,CAAP,EAAU,CAAC,CAAC,YAAZ,EAA0B,CAAC,CAAC,QAA5B,EAAsC,CAAC,CAAvC,QAAA,CAAA;AAAiD,KAAjH,CAAtC;;AACA;;AACS,EAAA,UAAA,CAAA,SAAA,CAAA,CAAA,GAAV,UAAY,CAAZ,EAAoB,CAApB,EAAuD;;;;AACtD,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAS,KAAK,CAAd,CAAR,CAAA,EAAwB,EAAA,GAAA,EAAA,CAAA,IAAA,EAAtC,EAAsC,CAAA,EAAA,CAAA,IAAtC,EAAsC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAtC,EAAwC;AAAnC,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,QAAA,CAAC,CAAC,EAAF,CAAK,KAAL;AACA,QAAA,CAAC,CAAC,EAAF;AACA,QAAA,CAAC,CAAC,EAAF;AACA;;;;;;;;AACD,O,SACD;AAAA,YAAA,GAAA,EACQ,MAAO,GAAA,CAAA,KAAP;AACP;AACD;GAVU;;SAWT,c,CAAc,UAAC,CAAA,S,EAAA,S,EAAA;OACf,EAAA,YAAU;AACT,aAAA,KAAQ,CAAR;AACA,KAHc;SAId,UAAA,CAAA,EAAA;AACD,UAAI,GAAJ,EAAS,EAAT;;AACA,UAAI,CAAA,GAAI,KAAE,CAAV;;UACC,KAAK,CAAL,IAAQ,I,EAAO;AACf,YAAE,CAAA,GAAA,KAAA,CAAF;AACA,QAAA,CAAA,CAAA,iBAAA,GAAA,cAAA,CAAA,CAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;;AACD,WAAA,CAAA,GAAc,CAAd;;UAAK,KAAA,CAAA,IAAK,I,EAAA;YACT,CAAC,GAAG,KAAC,C;UACL,iB,GAAO,eAAA,CAAA,CAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,C;AACP;;UACA;;;;;;;;AACD,QAAA,GAAA,GAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;;AAjBA,YAAA;AAoBD,cAAA,EAAA,IAAA,CAAA,EAAA,CAAA,IAAA,KAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,EACyB,EAAA,CAAA,IAAA,CAAS,EAAT;AAChB,SAtBR,SAuBa;AACZ,cAAA,GAAA,EACD,MAAA,GAAA,CAAA,KAAA;AACD;AACM;AACL,KA1Be;AA2Bd,IAAA,UAAM,EAAC,IA3BO;AA4Bd,IAAA,YAAA,EAAA;AA5Bc,G;;AA8BhB,EAAA,UAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAkB,CAAlB,EAAkB;AACjB,QAAI,CAAA,GAAI,KAAC,CAAD,CAAC,QAAD,CAAgB,CAAhB,CAAR;;QACC,CAAA,C,EAAA;AACA,WAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACD;AACA,GALD;;AAMU,EAAA,UAAA,CAAA,SAAA,CAAV,gBAAU,GAAV,UAAA,CAAA,EAAA;AACC,QAAA,CAAA,GAAO,KAAK,CAAL,CAAK,QAAL,CAAK,CAAL,CAAP;;AACA,QAAA,CAAA,EAAA;AACD,WAAA,CAAA,CAAA,MAAA,CAAI,CAAJ;AAAA;AACC,GAJS;;AAKV,EAAA,UAAC,CAAA,SAAD,CAAC,QAAD,GAAC,UAAA,CAAA,EAAA;;;AAAA;;AACD,WAAA,KAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACC,GAFD;;AAGE,EAAA,UAAA,CAAA,SAAA,CAAY,WAAZ,GAAY,YAAA;AACZ,WAAA,IAAA;AACD,GAFC;;AAGF,EAAA,MAAC,CAAA,cAAD,CAAC,UAAA,CAAA,SAAD,EAAC,SAAD,EAAC;AAGS,IAAA,GAAA,EAAA,YAAV;AACK,aAAK,KAAA,WAAA,EAAL;AACH,KALD;AAMC,IAAA,UAAA,EAAA,IAND;AAOA,IAAA,YAAS,EAAA;AAPT,GAAD;;AASE,EAAA,UAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AACD,QAAA,KAAA,OAAA,IAAA,IAAA,IAAA,KAAA,OAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACS,aAAV,IAAU;;;;AACT,GAHC;;aAGI,S,CAAK,C,GAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA;QACT,KAAC,eAAD,IAAY,I,EAAA;AACZ,WAAC,eAAD,CAAO,IAAP,EAAO,IAAA,wBAAA,CAAA,CAAA,CAAP;AACA;;QACA,KAAA,eAAA,IAAA,I,EAAA;;;;;;;;;;;AACD,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA;AACS,QAAA,CAAA,CAAV,EAAU;AACF,QAAA,CAAA,CAAA,EAAA;AACP;AACD,K,CAAA,OAAA,KAAA,EAAA;AACC,MAAA,GAAA,GAAA;AAAO,QAAA,KAAK,EAAA;AAAZ,OAAA;AACA,K;;AAAA,YAAA,EAAA,IAAA,CAAA,EAAA,CAAA,IAAA,KAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,EA1FiB,EAAA,CAAA,IAAA,CAAQ,EAAR;AA2FnB,O,SA5FgD;AAAnC,YAAU,GAAV,E;;;;;;;;;;;;;;;;;;CAAb,C,gBAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { DependencyObject } from \"igniteui-react-core\";\nimport { INotifyPropertyChanged_$type, PropertyChangedEventArgs, runOn, delegateCombine, fromEnum, delegateRemove, markType } from \"igniteui-react-core\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { Series } from \"./Series\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { BrushCollectionUtil } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar BrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BrushScale, _super);\n    function BrushScale() {\n        var _this = _super.call(this) || this;\n        _this.j = null;\n        _this.o = null;\n        _this.propertyChanged = null;\n        _this.propertyUpdated = null;\n        _this.o = new List$1(Series.$, 0);\n        _this.brushes = new BrushCollection();\n        var a = _this.brushes;\n        a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.p));\n        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (b, c) { return _this.q(b, c.propertyName, c.oldValue, c.newValue); });\n        return _this;\n    }\n    BrushScale.prototype.p = function (a, b) {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                c.jd(false);\n                c.id();\n                c.ik();\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    Object.defineProperty(BrushScale.prototype, \"brushes\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            var e_2, _a;\n            var b = this.j;\n            if (this.j != null) {\n                var c = this.j;\n                c.collectionChanged = delegateRemove(c.collectionChanged, runOn(this, this.p));\n            }\n            this.j = a;\n            if (this.j != null) {\n                var d = this.j;\n                d.collectionChanged = delegateCombine(d.collectionChanged, runOn(this, this.p));\n            }\n            try {\n                for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    e.jd(false);\n                    e.id();\n                    e.ik();\n                }\n            }\n            catch (e_2_1) {\n                e_2 = { error: e_2_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrushScale.prototype.registerSeries = function (a) {\n        var b = this.o.contains(a);\n        if (!b) {\n            this.o.add(a);\n        }\n    };\n    BrushScale.prototype.unregisterSeries = function (a) {\n        var b = this.o.contains(a);\n        if (b) {\n            this.o.remove(a);\n        }\n    };\n    BrushScale.prototype.getBrush = function (a) {\n        if (this.brushes == null || a < 0 || a >= this.brushes.count) {\n            return null;\n        }\n        return this.brushes.item(a);\n    };\n    BrushScale.prototype.get_isReady = function () {\n        return true;\n    };\n    Object.defineProperty(BrushScale.prototype, \"isReady\", {\n        get: function () {\n            return this.get_isReady();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrushScale.prototype.v = function (a) {\n        if (this.brushes == null || this.brushes.count == 0 || a < 0) {\n            return null;\n        }\n        return BrushCollectionUtil.b(this.brushes, a);\n    };\n    BrushScale.prototype.r = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        if (this.propertyUpdated != null) {\n            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n        }\n    };\n    BrushScale.prototype.q = function (a, b, c, d) {\n        var e_3, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.o)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var e = _c.value;\n                e.jd(false);\n                e.id();\n                e.ik();\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n    };\n    BrushScale.prototype.get_isBrushScale = function () {\n        return true;\n    };\n    Object.defineProperty(BrushScale.prototype, \"isBrushScale\", {\n        get: function () {\n            return this.get_isBrushScale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrushScale.$t = markType(BrushScale, 'BrushScale', DependencyObject.$, [INotifyPropertyChanged_$type]);\n    return BrushScale;\n}(DependencyObject));\nexport { BrushScale };\n//# sourceMappingURL=BrushScale.js.map\n"]},"metadata":{},"sourceType":"module"}