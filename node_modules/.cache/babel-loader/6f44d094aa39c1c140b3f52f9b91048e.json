{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { XamSparkline } from './XamSparkline';\nimport { brushToString, stringToBrush, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, isValidProp, getModifiedProps, toSpinal } from \"igniteui-react-core\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { SparklineStylingDefaults } from './SparklineStylingDefaults';\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { SparklineDisplayType_$type } from './SparklineDisplayType';\nimport { UnknownValuePlotting_$type } from \"igniteui-react-core\";\n\nvar IgrSparkline =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrSparkline, _super);\n\n  function IgrSparkline(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._dataSource = null;\n    _this._initialized = false;\n    _this._tooltipTemplate = null;\n    _this._tooltipContent = null;\n    _this._defaultTooltips = null;\n    _this._uniqueTooltipId = 0;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._getMainRef = _this._getMainRef.bind(_this);\n    _this._tooltipRef = _this._tooltipRef.bind(_this);\n    _this._activeTooltipElements = new Map();\n    _this._activeTooltips = new Map();\n    _this._currentTooltips = [];\n    var container = null;\n\n    if (document) {\n      container = document.createElement(\"div\");\n      container.style.display = \"block\";\n      container.style.width = \"100%\";\n      container.style.height = \"100%\";\n    }\n\n    var root;\n    root = container;\n    _this._renderer = new ReactRenderer(root, document, true, SparklineStylingDefaults);\n    _this._implementation = _this.createImplementation();\n    _this._container = _this._renderer.getWrapper(container); //this._renderer.rootWrapper.append(this._container);\n    //this._container.setStyleProperty(\"display\", \"block\");\n    //this._container.setStyleProperty(\"width\", \"100%\");\n    //this._container.setStyleProperty(\"height\", \"100%\");\n\n    _this._wrapper = _this._renderer; //var root: any;\n    //root = this._container;\n    //if (this._container.nativeElement != null) {\n    //    root = this._container.nativeElement;\n    //}\n\n    var sparkline = _this.i;\n    _this._sparkline = sparkline;\n    sparkline.provideContainer(_this._renderer);\n\n    _this._renderer.addSizeWatcher(function () {\n      _this._sparkline.notifyResized();\n    });\n\n    _this._initialized = true;\n    return _this;\n  }\n\n  Object.defineProperty(IgrSparkline.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    set: function (value) {\n      this._height = value;\n\n      if (this._elRef) {\n        this._elRef.style.height = value;\n        this.notifyResized();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    set: function (value) {\n      this._width = value;\n\n      if (this._elRef) {\n        this._elRef.style.width = value;\n        this.notifyResized();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrSparkline.prototype.render = function () {\n    // if (!this._childrenDiffer(this.props.children)) {\n    // \tlet div = React.createElement(\"div\", {\n    // \t\tref: (ref) => {\n    // \t\t\tthis._elRef = ref;\n    // \t\t},\n    // \t\tchildren: this.props.children\n    // \t});\n    // \treturn div;\n    // } else {\n    var children = [];\n    React.Children.forEach(this.props.children, function (ch) {\n      children.push(ch);\n    });\n\n    if (this._currentTooltips && this._currentTooltips.length > 0) {\n      for (var i = 0; i < this._currentTooltips.length; i++) {\n        var t = this._currentTooltips[i];\n\n        if (this._activeTooltipElements.has(t)) {\n          children.push(this._activeTooltipElements.get(t));\n        } else {\n          if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n            continue;\n          }\n\n          var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n          var tEle = React.createElement(Tooltip, {\n            ref: this._tooltipRef,\n            key: this._currentTooltips[i].key,\n            owner: this._currentTooltips[i]\n          });\n          var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n\n          this._activeTooltipElements.set(t, portal);\n\n          children.push(portal);\n        }\n      }\n    }\n\n    var div = React.createElement(\"div\", {\n      className: \"ig-sparkline igr-sparkline\",\n      ref: this._getMainRef,\n      children: children\n    });\n    return div; //}\n  };\n\n  IgrSparkline.prototype._tooltipRef = function (t) {\n    //console.log(t);\n    if (t === null) {\n      return;\n    }\n\n    if (t.currentOwner && t.currentOwner.tooltipTemplate) {\n      t.template = t.currentOwner.tooltipTemplate;\n    }\n\n    this._activeTooltips.set(t.currentOwner, t);\n  };\n\n  IgrSparkline.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          {\n            this[p] = this.props[p];\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this._elRef.style.width = this._width ? this._width : \"\";\n    this._elRef.style.height = this._height ? this._height : \"\";\n\n    this._elRef.appendChild(this._container.getNativeElement());\n\n    this.notifyResized();\n    this.initializeContent();\n  };\n\n  IgrSparkline.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  Object.defineProperty(IgrSparkline.prototype, \"dataSource\", {\n    get: function () {\n      if (this._dataSource != null) {\n        return this._dataSource;\n      }\n\n      return this.i.itemsSource;\n    },\n    set: function (value) {\n      this._dataSource = value;\n      this.i.itemsSource = this._dataSource; //console.log(\"setting axis data source: \" + value)\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrSparkline.prototype._getMainRef = function (div) {\n    this._elRef = div;\n  };\n\n  IgrSparkline.prototype.destroy = function () {\n    this._sparkline.destroy();\n\n    this._wrapper.destroy();\n  };\n\n  IgrSparkline.prototype.createImplementation = function () {\n    return new XamSparkline();\n  };\n\n  IgrSparkline.prototype.initializeContent = function () {\n    this._styling(this._container.getNativeElement(), this);\n\n    this.i.notifyResized();\n  };\n\n  IgrSparkline.prototype.componentWillUnmount = function () {\n    //this._grid.destroy();\n    this.destroy();\n  };\n\n  IgrSparkline.prototype.initializeProperties = function () {\n    var e_3, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  Object.defineProperty(IgrSparkline.prototype, \"tooltipTemplate\", {\n    get: function () {\n      return this._tooltipTemplate;\n    },\n    set: function (value) {\n      this._tooltipTemplate = value;\n\n      if (value == null) {\n        if (this._tooltipContent !== null) {\n          this._tooltipContent.destroy();\n\n          this._tooltipContent = null;\n        }\n      }\n\n      if (this._tooltipContent != null) {\n        this._tooltipContent.instance.template = this._tooltipTemplate;\n      } else {\n        this._ensureTooltipCreated();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrSparkline.prototype.createWrapper = function (ele) {\n    var wrapper = new ReactWrapper(ele, this._renderer);\n    wrapper.updateToolTip = ele.updateToolTip;\n    wrapper.hideToolTip = ele.hideToolTip;\n    return wrapper;\n  };\n\n  IgrSparkline.prototype._ensureDefaultTooltip = function () {\n    if (this._defaultTooltips == null) {\n      return;\n    }\n\n    this._defaultTooltips[\"ensureDefaultTooltip\"](this);\n  };\n\n  IgrSparkline.prototype._onDefaultTooltipsReady = function (cr) {\n    this._ensureDefaultTooltip();\n  };\n\n  IgrSparkline.prototype._updateTooltipState = function () {\n    if (this._initialized) {\n      this.setState({\n        tooltips: this._currentTooltips\n      });\n    }\n  };\n\n  IgrSparkline.prototype.createTooltip = function () {\n    // if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n    // \treturn null;\n    // }\n    // let Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n    var wrapper = this._wrapper.createElement(\"div\");\n\n    var ele = wrapper.getNativeElement();\n    ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n    this._uniqueTooltipId++;\n    this._currentTooltips = this._currentTooltips.slice(0);\n\n    this._currentTooltips.push(ele); //let element = React.createElement(Tooltip,  );\n    //let portal = ReactDOM.createPortal(element, ele);\n\n\n    var self = this;\n\n    ele.updateToolTip = function (c, isSubContent) {\n      if (c.externalObject) {\n        c = c.externalObject;\n      } else {\n        var ext = new IgrDataContext();\n        ext._implementation = c;\n        c = ext;\n      }\n\n      if (!isSubContent) {\n        if (ele.parentElement != self._container.getNativeElement()) {\n          if (ele.parentElement != null) {\n            ele.parentElement.removeChild(ele);\n          }\n\n          self._container.getNativeElement().appendChild(ele);\n        }\n      } else {\n        c.isSubContent = true;\n      }\n\n      if (self._activeTooltips.has(ele)) {\n        var t = self._activeTooltips.get(ele);\n\n        if (t.template === null && self.tooltipTemplate !== null) {\n          t.template = self.tooltipTemplate;\n        }\n\n        t.dataContext = c;\n      }\n\n      ele.style.display = \"block\";\n      return true;\n    };\n\n    ele.hideToolTip = function () {\n      ele.style.display = \"none\";\n    };\n\n    ele.style.display = \"none\";\n\n    this._updateTooltipState();\n\n    return ele;\n  };\n\n  IgrSparkline.prototype._ensureTooltipCreated = function () {\n    if (this.i.toolTip == null) {\n      var tooltip = this.createTooltip();\n      var ele = tooltip;\n\n      if (tooltip == null) {\n        return;\n      }\n\n      this._tooltipContent = tooltip; //(<any>tooltip.instance).template = this._tooltipTemplate;\n\n      this.i.toolTip = this.createWrapper(tooltip);\n\n      if (this._activeTooltips.has(ele)) {\n        var tCont = this._activeTooltips.get(ele);\n\n        tCont.template = ele.tooltipTemplate;\n      }\n    }\n  };\n\n  Object.defineProperty(IgrSparkline.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    }\n    /**\n                               * @hidden\n                               */\n    ,\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrSparkline._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrSparkline.prototype, \"brush\", {\n    /**\n    * Gets or sets the sparkline brush.\n    */\n    get: function () {\n      return brushToString(this.i.eu);\n    },\n    set: function (v) {\n      this.i.eu = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"negativeBrush\", {\n    /**\n     * Gets or sets the negative brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e1);\n    },\n    set: function (v) {\n      this.i.e1 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"markerBrush\", {\n    /**\n     * Gets or sets the marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e0);\n    },\n    set: function (v) {\n      this.i.e0 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerBrush\", {\n    /**\n     * Gets or sets the negative marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e2);\n    },\n    set: function (v) {\n      this.i.e2 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"firstMarkerBrush\", {\n    /**\n     * Gets or sets the first marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.ev);\n    },\n    set: function (v) {\n      this.i.ev = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lastMarkerBrush\", {\n    /**\n     * Gets or sets the last marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.ey);\n    },\n    set: function (v) {\n      this.i.ey = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"highMarkerBrush\", {\n    /**\n     * Gets or sets the high marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.ew);\n    },\n    set: function (v) {\n      this.i.ew = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lowMarkerBrush\", {\n    /**\n     * Gets or sets the low marker brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.ez);\n    },\n    set: function (v) {\n      this.i.ez = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the trendline brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e4);\n    },\n    set: function (v) {\n      this.i.e4 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisBrush\", {\n    /**\n     * Gets or sets the horizontal axis line brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.ex);\n    },\n    set: function (v) {\n      this.i.ex = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"verticalAxisBrush\", {\n    /**\n     * Gets or sets the vertical axis line brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e5);\n    },\n    set: function (v) {\n      this.i.e5 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"normalRangeFill\", {\n    /**\n     * Gets or sets the normal range brush of the sparkline.\n    */\n    get: function () {\n      return brushToString(this.i.e3);\n    },\n    set: function (v) {\n      this.i.e3 = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisVisibility\", {\n    /**\n     * Gets or sets the display state of the horizontal axis.\n    */\n    get: function () {\n      return this.i.e8;\n    },\n    set: function (v) {\n      this.i.e8 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"verticalAxisVisibility\", {\n    /**\n     * Gets or sets the display state of the vertical axis.\n    */\n    get: function () {\n      return this.i.ff;\n    },\n    set: function (v) {\n      this.i.ff = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"markerVisibility\", {\n    /**\n     * Gets or sets the marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.fb;\n    },\n    set: function (v) {\n      this.i.fb = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerVisibility\", {\n    /**\n     * Gets or sets the negative marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.fc;\n    },\n    set: function (v) {\n      this.i.fc = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"firstMarkerVisibility\", {\n    /**\n     * Gets or sets the first marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.e6;\n    },\n    set: function (v) {\n      this.i.e6 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lastMarkerVisibility\", {\n    /**\n     * Gets or sets the last marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.e9;\n    },\n    set: function (v) {\n      this.i.e9 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lowMarkerVisibility\", {\n    /**\n     * Gets or sets the low marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.fa;\n    },\n    set: function (v) {\n      this.i.fa = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"highMarkerVisibility\", {\n    /**\n     * Gets or sets the high marker visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.e7;\n    },\n    set: function (v) {\n      this.i.e7 = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"normalRangeVisibility\", {\n    /**\n     * Gets or sets the normal range visibility of the sparkline.\n    */\n    get: function () {\n      return this.i.fd;\n    },\n    set: function (v) {\n      this.i.fd = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"displayNormalRangeInFront\", {\n    /**\n     * Gets or sets the position of the normal range on the sparkline.\n    */\n    get: function () {\n      return this.i.as;\n    },\n    set: function (v) {\n      this.i.as = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"markerSize\", {\n    /**\n     * Gets or sets the marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.a9;\n    },\n    set: function (v) {\n      this.i.a9 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"firstMarkerSize\", {\n    /**\n     * Gets or sets the first marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.a2;\n    },\n    set: function (v) {\n      this.i.a2 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lastMarkerSize\", {\n    /**\n     * Gets or sets the last marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.a4;\n    },\n    set: function (v) {\n      this.i.a4 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"highMarkerSize\", {\n    /**\n     * Gets or sets the high marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.a3;\n    },\n    set: function (v) {\n      this.i.a3 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lowMarkerSize\", {\n    /**\n     * Gets or sets the low marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.a8;\n    },\n    set: function (v) {\n      this.i.a8 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerSize\", {\n    /**\n     * Gets or sets the negative marker size of the sparkline.\n    */\n    get: function () {\n      return this.i.be;\n    },\n    set: function (v) {\n      this.i.be = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"lineThickness\", {\n    /**\n     * Gets or sets the line thickness of the sparkline.\n    */\n    get: function () {\n      return this.i.a5;\n    },\n    set: function (v) {\n      this.i.a5 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"minimum\", {\n    /**\n     * Gets or sets the minimum value of the y axis.\n    */\n    get: function () {\n      return this.i.bd;\n    },\n    set: function (v) {\n      this.i.bd = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"maximum\", {\n    /**\n     * Gets or sets the maximum value of the y axis.\n    */\n    get: function () {\n      return this.i.bc;\n    },\n    set: function (v) {\n      this.i.bc = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or sets the string path to the value column.\n    */\n    get: function () {\n      return this.i.c2;\n    },\n    set: function (v) {\n      this.i.c2 = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"labelMemberPath\", {\n    /**\n     * String identifier of a column or property name to get labels from on each item in the data source.  These labels will be retrieved from the first and last item, and displayed by the horizontal axis.\n    */\n    get: function () {\n      return this.i.b7;\n    },\n    set: function (v) {\n      this.i.b7 = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the type of trendline used by the sparkline.\n    */\n    get: function () {\n      return this.i.an;\n    },\n    set: function (v) {\n      this.i.an = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the trendline period used by the sparkline.\n    */\n    get: function () {\n      return this.i.bm;\n    },\n    set: function (v) {\n      this.i.bm = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the sparkline's trendline.\n    */\n    get: function () {\n      return this.i.bi;\n    },\n    set: function (v) {\n      this.i.bi = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"normalRangeMinimum\", {\n    /**\n     * Gets or sets the minimum value of the normal range.\n    */\n    get: function () {\n      return this.i.bg;\n    },\n    set: function (v) {\n      this.i.bg = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"normalRangeMaximum\", {\n    /**\n     * Gets or sets the maximum value of the normal range.\n    */\n    get: function () {\n      return this.i.bf;\n    },\n    set: function (v) {\n      this.i.bf = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"displayType\", {\n    /**\n     * Gets or sets the display type of the sparkline.\n    */\n    get: function () {\n      return this.i.am;\n    },\n    set: function (v) {\n      this.i.am = ensureEnum(SparklineDisplayType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"unknownValuePlotting\", {\n    /**\n     * Gets or sets the way null values are interpreted.\n    */\n    get: function () {\n      return this.i.ao;\n    },\n    set: function (v) {\n      this.i.ao = ensureEnum(UnknownValuePlotting_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"verticalAxisLabel\", {\n    /**\n     * The value or content to display on the vertical axis.\n     * This can be set to a formatted string, such as \"{0:n}\", or it can be set to a DataTemplate.\n    */\n    get: function () {\n      return this.i.bp;\n    },\n    set: function (v) {\n      this.i.bp = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisLabel\", {\n    /**\n     * The value or content to display on the horizontal axis.\n     * This can be set to a formatted string, such as \"{0}\", or it can be set to a DataTemplate.\n    */\n    get: function () {\n      return this.i.bn;\n    },\n    set: function (v) {\n      this.i.bn = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"formatLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n    */\n    get: function () {\n      return this.i.bl;\n    },\n    set: function (v) {\n      this.i.bl = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"pixelScalingRatio\", {\n    /**\n     * Gets or sets the scaling value used to affect the pixel density of the control.\n     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n     * to appear blurry.\n    */\n    get: function () {\n      return this.i.bh;\n    },\n    set: function (v) {\n      this.i.bh = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"actualPixelScalingRatio\", {\n    /**\n     * Gets the actual scaling value used by the component to affect the pixel density of the control.\n     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n     * to appear blurry.\n    */\n    get: function () {\n      return this.i.a1;\n    },\n    set: function (v) {\n      this.i.a1 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSparkline.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrSparkline.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrSparkline.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"Sparkline\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n  * Provides a container to the sparkline control.\n  * @param container  * The container.\n  */\n\n\n  IgrSparkline.prototype.provideContainer = function (container) {\n    this.i.provideContainer(container);\n  };\n  /**\n   * Notify that the control has resized.\n  \r\n  */\n\n\n  IgrSparkline.prototype.notifyResized = function () {\n    this.i.notifyResized();\n  };\n\n  IgrSparkline.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n    this.i.dd(source_, index, oldItem, newItem);\n  };\n  /**\n   * Used to manually notify the IgxSparklineComponent that the data source has reset or cleared its items.  Invoking this method is only necessary if that datasource is not observable.\n  \r\n  * @param source_  * The data source which was cleared or reset.\n  */\n\n\n  IgrSparkline.prototype.notifyClearItems = function (source_) {\n    this.i.c9(source_);\n  };\n\n  IgrSparkline.prototype.notifyInsertItem = function (source_, index, newItem) {\n    this.i.da(source_, index, newItem);\n  };\n\n  IgrSparkline.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n    this.i.db(source_, index, oldItem);\n  };\n  /**\n   * Returns the sparkline visuals expressed as a SparklineVisualData object.\n  \r\n  */\n\n\n  IgrSparkline.prototype.exportVisualData = function () {\n    var iv = this.i.aq();\n    return iv;\n  };\n  /**\n   * Returns visuals as a serialized string.\n  \r\n  */\n\n\n  IgrSparkline.prototype.exportSerializedVisualData = function () {\n    var iv = this.i.bu();\n    return iv;\n  };\n\n  return IgrSparkline;\n}(React.Component);\n\nexport { IgrSparkline };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-sparkline.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { XamSparkline } from './XamSparkline';\nimport { brushToString, stringToBrush, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, isValidProp, getModifiedProps, toSpinal } from \"igniteui-react-core\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { SparklineStylingDefaults } from './SparklineStylingDefaults';\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { SparklineDisplayType_$type } from './SparklineDisplayType';\nimport { UnknownValuePlotting_$type } from \"igniteui-react-core\";\nvar IgrSparkline = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrSparkline, _super);\n    function IgrSparkline(props) {\n        var _this = _super.call(this, props) || this;\n        _this._dataSource = null;\n        _this._initialized = false;\n        _this._tooltipTemplate = null;\n        _this._tooltipContent = null;\n        _this._defaultTooltips = null;\n        _this._uniqueTooltipId = 0;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._getMainRef = _this._getMainRef.bind(_this);\n        _this._tooltipRef = _this._tooltipRef.bind(_this);\n        _this._activeTooltipElements = new Map();\n        _this._activeTooltips = new Map();\n        _this._currentTooltips = [];\n        var container = null;\n        if (document) {\n            container = document.createElement(\"div\");\n            container.style.display = \"block\";\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n        }\n        var root;\n        root = container;\n        _this._renderer = new ReactRenderer(root, document, true, SparklineStylingDefaults);\n        _this._implementation = _this.createImplementation();\n        _this._container = _this._renderer.getWrapper(container);\n        //this._renderer.rootWrapper.append(this._container);\n        //this._container.setStyleProperty(\"display\", \"block\");\n        //this._container.setStyleProperty(\"width\", \"100%\");\n        //this._container.setStyleProperty(\"height\", \"100%\");\n        _this._wrapper = _this._renderer;\n        //var root: any;\n        //root = this._container;\n        //if (this._container.nativeElement != null) {\n        //    root = this._container.nativeElement;\n        //}\n        var sparkline = _this.i;\n        _this._sparkline = sparkline;\n        sparkline.provideContainer(_this._renderer);\n        _this._renderer.addSizeWatcher(function () {\n            _this._sparkline.notifyResized();\n        });\n        _this._initialized = true;\n        return _this;\n    }\n    Object.defineProperty(IgrSparkline.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            if (this._elRef) {\n                this._elRef.style.height = value;\n                this.notifyResized();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            if (this._elRef) {\n                this._elRef.style.width = value;\n                this.notifyResized();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrSparkline.prototype.render = function () {\n        // if (!this._childrenDiffer(this.props.children)) {\n        // \tlet div = React.createElement(\"div\", {\n        // \t\tref: (ref) => {\n        // \t\t\tthis._elRef = ref;\n        // \t\t},\n        // \t\tchildren: this.props.children\n        // \t});\n        // \treturn div;\n        // } else {\n        var children = [];\n        React.Children.forEach(this.props.children, function (ch) {\n            children.push(ch);\n        });\n        if (this._currentTooltips && this._currentTooltips.length > 0) {\n            for (var i = 0; i < this._currentTooltips.length; i++) {\n                var t = this._currentTooltips[i];\n                if (this._activeTooltipElements.has(t)) {\n                    children.push(this._activeTooltipElements.get(t));\n                }\n                else {\n                    if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n                        continue;\n                    }\n                    var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n                    var tEle = React.createElement(Tooltip, {\n                        ref: this._tooltipRef,\n                        key: this._currentTooltips[i].key,\n                        owner: this._currentTooltips[i]\n                    });\n                    var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n                    this._activeTooltipElements.set(t, portal);\n                    children.push(portal);\n                }\n            }\n        }\n        var div = React.createElement(\"div\", {\n            className: \"ig-sparkline igr-sparkline\",\n            ref: this._getMainRef,\n            children: children\n        });\n        return div;\n        //}\n    };\n    IgrSparkline.prototype._tooltipRef = function (t) {\n        //console.log(t);\n        if (t === null) {\n            return;\n        }\n        if (t.currentOwner &&\n            t.currentOwner.tooltipTemplate) {\n            t.template = t.currentOwner.tooltipTemplate;\n        }\n        this._activeTooltips.set(t.currentOwner, t);\n    };\n    IgrSparkline.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    {\n                        this[p] = this.props[p];\n                    }\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        this._elRef.style.width = this._width ? this._width : \"\";\n        this._elRef.style.height = this._height ? this._height : \"\";\n        this._elRef.appendChild(this._container.getNativeElement());\n        this.notifyResized();\n        this.initializeContent();\n    };\n    IgrSparkline.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    Object.defineProperty(IgrSparkline.prototype, \"dataSource\", {\n        get: function () {\n            if (this._dataSource != null) {\n                return this._dataSource;\n            }\n            return this.i.itemsSource;\n        },\n        set: function (value) {\n            this._dataSource = value;\n            this.i.itemsSource = this._dataSource;\n            //console.log(\"setting axis data source: \" + value)\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrSparkline.prototype._getMainRef = function (div) {\n        this._elRef = div;\n    };\n    IgrSparkline.prototype.destroy = function () {\n        this._sparkline.destroy();\n        this._wrapper.destroy();\n    };\n    IgrSparkline.prototype.createImplementation = function () {\n        return new XamSparkline();\n    };\n    IgrSparkline.prototype.initializeContent = function () {\n        this._styling(this._container.getNativeElement(), this);\n        this.i.notifyResized();\n    };\n    IgrSparkline.prototype.componentWillUnmount = function () {\n        //this._grid.destroy();\n        this.destroy();\n    };\n    IgrSparkline.prototype.initializeProperties = function () {\n        var e_3, _a;\n        try {\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n    };\n    Object.defineProperty(IgrSparkline.prototype, \"tooltipTemplate\", {\n        get: function () {\n            return this._tooltipTemplate;\n        },\n        set: function (value) {\n            this._tooltipTemplate = value;\n            if (value == null) {\n                if (this._tooltipContent !== null) {\n                    this._tooltipContent.destroy();\n                    this._tooltipContent = null;\n                }\n            }\n            if (this._tooltipContent != null) {\n                this._tooltipContent.instance.template = this._tooltipTemplate;\n            }\n            else {\n                this._ensureTooltipCreated();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrSparkline.prototype.createWrapper = function (ele) {\n        var wrapper = new ReactWrapper(ele, this._renderer);\n        wrapper.updateToolTip = ele.updateToolTip;\n        wrapper.hideToolTip = ele.hideToolTip;\n        return wrapper;\n    };\n    IgrSparkline.prototype._ensureDefaultTooltip = function () {\n        if (this._defaultTooltips == null) {\n            return;\n        }\n        this._defaultTooltips[\"ensureDefaultTooltip\"](this);\n    };\n    IgrSparkline.prototype._onDefaultTooltipsReady = function (cr) {\n        this._ensureDefaultTooltip();\n    };\n    IgrSparkline.prototype._updateTooltipState = function () {\n        if (this._initialized) {\n            this.setState({ tooltips: this._currentTooltips });\n        }\n    };\n    IgrSparkline.prototype.createTooltip = function () {\n        // if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n        // \treturn null;\n        // }\n        // let Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n        var wrapper = this._wrapper.createElement(\"div\");\n        var ele = wrapper.getNativeElement();\n        ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n        this._uniqueTooltipId++;\n        this._currentTooltips = this._currentTooltips.slice(0);\n        this._currentTooltips.push(ele);\n        //let element = React.createElement(Tooltip,  );\n        //let portal = ReactDOM.createPortal(element, ele);\n        var self = this;\n        ele.updateToolTip = function (c, isSubContent) {\n            if (c.externalObject) {\n                c = c.externalObject;\n            }\n            else {\n                var ext = new IgrDataContext();\n                ext._implementation = c;\n                c = ext;\n            }\n            if (!isSubContent) {\n                if (ele.parentElement != self._container.getNativeElement()) {\n                    if (ele.parentElement != null) {\n                        ele.parentElement.removeChild(ele);\n                    }\n                    self._container.getNativeElement().appendChild(ele);\n                }\n            }\n            else {\n                c.isSubContent = true;\n            }\n            if (self._activeTooltips.has(ele)) {\n                var t = self._activeTooltips.get(ele);\n                if (t.template === null &&\n                    self.tooltipTemplate !== null) {\n                    t.template = self.tooltipTemplate;\n                }\n                t.dataContext = c;\n            }\n            ele.style.display = \"block\";\n            return true;\n        };\n        ele.hideToolTip = function () {\n            ele.style.display = \"none\";\n        };\n        ele.style.display = \"none\";\n        this._updateTooltipState();\n        return ele;\n    };\n    IgrSparkline.prototype._ensureTooltipCreated = function () {\n        if (this.i.toolTip == null) {\n            var tooltip = this.createTooltip();\n            var ele = tooltip;\n            if (tooltip == null) {\n                return;\n            }\n            this._tooltipContent = tooltip;\n            //(<any>tooltip.instance).template = this._tooltipTemplate;\n            this.i.toolTip = this.createWrapper(tooltip);\n            if (this._activeTooltips.has(ele)) {\n                var tCont = this._activeTooltips.get(ele);\n                tCont.template = ele.tooltipTemplate;\n            }\n        }\n    };\n    Object.defineProperty(IgrSparkline.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        } /**\n                                     * @hidden\n                                     */,\n        enumerable: true,\n        configurable: true\n    });\n    IgrSparkline._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    Object.defineProperty(IgrSparkline.prototype, \"brush\", {\n        /**\n     * Gets or sets the sparkline brush.\n    */\n        get: function () {\n            return brushToString(this.i.eu);\n        },\n        set: function (v) {\n            this.i.eu = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"negativeBrush\", {\n        /**\n         * Gets or sets the negative brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e1);\n        },\n        set: function (v) {\n            this.i.e1 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"markerBrush\", {\n        /**\n         * Gets or sets the marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e0);\n        },\n        set: function (v) {\n            this.i.e0 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerBrush\", {\n        /**\n         * Gets or sets the negative marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e2);\n        },\n        set: function (v) {\n            this.i.e2 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"firstMarkerBrush\", {\n        /**\n         * Gets or sets the first marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.ev);\n        },\n        set: function (v) {\n            this.i.ev = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lastMarkerBrush\", {\n        /**\n         * Gets or sets the last marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.ey);\n        },\n        set: function (v) {\n            this.i.ey = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"highMarkerBrush\", {\n        /**\n         * Gets or sets the high marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.ew);\n        },\n        set: function (v) {\n            this.i.ew = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lowMarkerBrush\", {\n        /**\n         * Gets or sets the low marker brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.ez);\n        },\n        set: function (v) {\n            this.i.ez = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the trendline brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e4);\n        },\n        set: function (v) {\n            this.i.e4 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisBrush\", {\n        /**\n         * Gets or sets the horizontal axis line brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.ex);\n        },\n        set: function (v) {\n            this.i.ex = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"verticalAxisBrush\", {\n        /**\n         * Gets or sets the vertical axis line brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e5);\n        },\n        set: function (v) {\n            this.i.e5 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"normalRangeFill\", {\n        /**\n         * Gets or sets the normal range brush of the sparkline.\n        */\n        get: function () {\n            return brushToString(this.i.e3);\n        },\n        set: function (v) {\n            this.i.e3 = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisVisibility\", {\n        /**\n         * Gets or sets the display state of the horizontal axis.\n        */\n        get: function () {\n            return this.i.e8;\n        },\n        set: function (v) {\n            this.i.e8 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"verticalAxisVisibility\", {\n        /**\n         * Gets or sets the display state of the vertical axis.\n        */\n        get: function () {\n            return this.i.ff;\n        },\n        set: function (v) {\n            this.i.ff = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"markerVisibility\", {\n        /**\n         * Gets or sets the marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.fb;\n        },\n        set: function (v) {\n            this.i.fb = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerVisibility\", {\n        /**\n         * Gets or sets the negative marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.fc;\n        },\n        set: function (v) {\n            this.i.fc = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"firstMarkerVisibility\", {\n        /**\n         * Gets or sets the first marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.e6;\n        },\n        set: function (v) {\n            this.i.e6 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lastMarkerVisibility\", {\n        /**\n         * Gets or sets the last marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.e9;\n        },\n        set: function (v) {\n            this.i.e9 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lowMarkerVisibility\", {\n        /**\n         * Gets or sets the low marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.fa;\n        },\n        set: function (v) {\n            this.i.fa = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"highMarkerVisibility\", {\n        /**\n         * Gets or sets the high marker visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.e7;\n        },\n        set: function (v) {\n            this.i.e7 = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"normalRangeVisibility\", {\n        /**\n         * Gets or sets the normal range visibility of the sparkline.\n        */\n        get: function () {\n            return this.i.fd;\n        },\n        set: function (v) {\n            this.i.fd = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"displayNormalRangeInFront\", {\n        /**\n         * Gets or sets the position of the normal range on the sparkline.\n        */\n        get: function () {\n            return this.i.as;\n        },\n        set: function (v) {\n            this.i.as = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"markerSize\", {\n        /**\n         * Gets or sets the marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.a9;\n        },\n        set: function (v) {\n            this.i.a9 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"firstMarkerSize\", {\n        /**\n         * Gets or sets the first marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.a2;\n        },\n        set: function (v) {\n            this.i.a2 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lastMarkerSize\", {\n        /**\n         * Gets or sets the last marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"highMarkerSize\", {\n        /**\n         * Gets or sets the high marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.a3;\n        },\n        set: function (v) {\n            this.i.a3 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lowMarkerSize\", {\n        /**\n         * Gets or sets the low marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.a8;\n        },\n        set: function (v) {\n            this.i.a8 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"negativeMarkerSize\", {\n        /**\n         * Gets or sets the negative marker size of the sparkline.\n        */\n        get: function () {\n            return this.i.be;\n        },\n        set: function (v) {\n            this.i.be = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"lineThickness\", {\n        /**\n         * Gets or sets the line thickness of the sparkline.\n        */\n        get: function () {\n            return this.i.a5;\n        },\n        set: function (v) {\n            this.i.a5 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"minimum\", {\n        /**\n         * Gets or sets the minimum value of the y axis.\n        */\n        get: function () {\n            return this.i.bd;\n        },\n        set: function (v) {\n            this.i.bd = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"maximum\", {\n        /**\n         * Gets or sets the maximum value of the y axis.\n        */\n        get: function () {\n            return this.i.bc;\n        },\n        set: function (v) {\n            this.i.bc = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or sets the string path to the value column.\n        */\n        get: function () {\n            return this.i.c2;\n        },\n        set: function (v) {\n            this.i.c2 = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"labelMemberPath\", {\n        /**\n         * String identifier of a column or property name to get labels from on each item in the data source.  These labels will be retrieved from the first and last item, and displayed by the horizontal axis.\n        */\n        get: function () {\n            return this.i.b7;\n        },\n        set: function (v) {\n            this.i.b7 = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the type of trendline used by the sparkline.\n        */\n        get: function () {\n            return this.i.an;\n        },\n        set: function (v) {\n            this.i.an = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the trendline period used by the sparkline.\n        */\n        get: function () {\n            return this.i.bm;\n        },\n        set: function (v) {\n            this.i.bm = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the sparkline's trendline.\n        */\n        get: function () {\n            return this.i.bi;\n        },\n        set: function (v) {\n            this.i.bi = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"normalRangeMinimum\", {\n        /**\n         * Gets or sets the minimum value of the normal range.\n        */\n        get: function () {\n            return this.i.bg;\n        },\n        set: function (v) {\n            this.i.bg = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"normalRangeMaximum\", {\n        /**\n         * Gets or sets the maximum value of the normal range.\n        */\n        get: function () {\n            return this.i.bf;\n        },\n        set: function (v) {\n            this.i.bf = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"displayType\", {\n        /**\n         * Gets or sets the display type of the sparkline.\n        */\n        get: function () {\n            return this.i.am;\n        },\n        set: function (v) {\n            this.i.am = ensureEnum(SparklineDisplayType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"unknownValuePlotting\", {\n        /**\n         * Gets or sets the way null values are interpreted.\n        */\n        get: function () {\n            return this.i.ao;\n        },\n        set: function (v) {\n            this.i.ao = ensureEnum(UnknownValuePlotting_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"verticalAxisLabel\", {\n        /**\n         * The value or content to display on the vertical axis.\n         * This can be set to a formatted string, such as \"{0:n}\", or it can be set to a DataTemplate.\n        */\n        get: function () {\n            return this.i.bp;\n        },\n        set: function (v) {\n            this.i.bp = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"horizontalAxisLabel\", {\n        /**\n         * The value or content to display on the horizontal axis.\n         * This can be set to a formatted string, such as \"{0}\", or it can be set to a DataTemplate.\n        */\n        get: function () {\n            return this.i.bn;\n        },\n        set: function (v) {\n            this.i.bn = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"formatLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n        */\n        get: function () {\n            return this.i.bl;\n        },\n        set: function (v) {\n            this.i.bl = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"pixelScalingRatio\", {\n        /**\n         * Gets or sets the scaling value used to affect the pixel density of the control.\n         * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n         * to appear blurry.\n        */\n        get: function () {\n            return this.i.bh;\n        },\n        set: function (v) {\n            this.i.bh = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"actualPixelScalingRatio\", {\n        /**\n         * Gets the actual scaling value used by the component to affect the pixel density of the control.\n         * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n         * to appear blurry.\n        */\n        get: function () {\n            return this.i.a1;\n        },\n        set: function (v) {\n            this.i.a1 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSparkline.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrSparkline.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrSparkline.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"Sparkline\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n * Provides a container to the sparkline control.\n\r\n* @param container  * The container.\n*/\n    IgrSparkline.prototype.provideContainer = function (container) {\n        this.i.provideContainer(container);\n    };\n    /**\n     * Notify that the control has resized.\n    \r\n    */\n    IgrSparkline.prototype.notifyResized = function () {\n        this.i.notifyResized();\n    };\n    IgrSparkline.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n        this.i.dd(source_, index, oldItem, newItem);\n    };\n    /**\n     * Used to manually notify the IgxSparklineComponent that the data source has reset or cleared its items.  Invoking this method is only necessary if that datasource is not observable.\n    \r\n    * @param source_  * The data source which was cleared or reset.\n    */\n    IgrSparkline.prototype.notifyClearItems = function (source_) {\n        this.i.c9(source_);\n    };\n    IgrSparkline.prototype.notifyInsertItem = function (source_, index, newItem) {\n        this.i.da(source_, index, newItem);\n    };\n    IgrSparkline.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n        this.i.db(source_, index, oldItem);\n    };\n    /**\n     * Returns the sparkline visuals expressed as a SparklineVisualData object.\n    \r\n    */\n    IgrSparkline.prototype.exportVisualData = function () {\n        var iv = this.i.aq();\n        return (iv);\n    };\n    /**\n     * Returns visuals as a serialized string.\n    \r\n    */\n    IgrSparkline.prototype.exportSerializedVisualData = function () {\n        var iv = this.i.bu();\n        return (iv);\n    };\n    return IgrSparkline;\n}(React.Component));\nexport { IgrSparkline };\n//# sourceMappingURL=igr-sparkline.js.map\n"]},"metadata":{},"sourceType":"module"}