{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Components/ProfileCard.js\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nconst styles = {\n  cardWrapper: {\n    textAlign: 'left',\n    height: 'auto',\n    width: '22vh',\n    margin: '0vh 1vw'\n  }\n};\nexport default function ProfileCard(props) {\n  const {\n    member\n  } = props;\n  return React.createElement(Card, {\n    style: styles.cardWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: member.photoURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, member.name), React.createElement(Card.Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, member.role), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, member.bio)), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, member.commitCount, \" commits, \", member.issueCount, \" issues,\", ' ', member.testCount, \" unit tests\"));\n}\nProfileCard.propTypes = {\n  member: PropTypes.shape({\n    photoURL: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    commitCount: PropTypes.number.isRequired,\n    issueCount: PropTypes.number.isRequired,\n    testCount: PropTypes.number.isRequired\n  })\n};","map":{"version":3,"sources":["/Users/Parth/web-project/src/Components/ProfileCard.js"],"names":["React","Card","PropTypes","styles","cardWrapper","textAlign","height","width","margin","ProfileCard","props","member","photoURL","name","role","bio","commitCount","issueCount","testCount","propTypes","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,MADA;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,KAAK,EAAE,MAHI;AAIXC,IAAAA,MAAM,EAAE;AAJG;AADA,CAAf;AASA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,GAAG,EAAEO,MAAM,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,MAAM,CAACE,IAApB,CADF,EAEE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,MAAM,CAACG,IAAvB,CAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,MAAM,CAACI,GAAnB,CAJF,CAFF,EAQE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACK,WADV,gBACiCL,MAAM,CAACM,UADxC,cAC4D,GAD5D,EAEGN,MAAM,CAACO,SAFV,gBARF,CADF;AAeD;AAEDT,WAAW,CAACU,SAAZ,GAAwB;AACtBR,EAAAA,MAAM,EAAET,SAAS,CAACkB,KAAV,CAAgB;AACtBR,IAAAA,QAAQ,EAAEV,SAAS,CAACmB,MAAV,CAAiBC,UADL;AAEtBT,IAAAA,IAAI,EAAEX,SAAS,CAACmB,MAAV,CAAiBC,UAFD;AAGtBR,IAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBC,UAHD;AAItBP,IAAAA,GAAG,EAAEb,SAAS,CAACmB,MAAV,CAAiBC,UAJA;AAKtBN,IAAAA,WAAW,EAAEd,SAAS,CAACqB,MAAV,CAAiBD,UALR;AAMtBL,IAAAA,UAAU,EAAEf,SAAS,CAACqB,MAAV,CAAiBD,UANP;AAOtBJ,IAAAA,SAAS,EAAEhB,SAAS,CAACqB,MAAV,CAAiBD;AAPN,GAAhB;AADc,CAAxB","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  cardWrapper: {\n    textAlign: 'left',\n    height: 'auto',\n    width: '22vh',\n    margin: '0vh 1vw',\n  },\n};\n\nexport default function ProfileCard(props) {\n  const { member } = props;\n  return (\n    <Card style={styles.cardWrapper}>\n      <Card.Img variant=\"top\" src={member.photoURL} />\n      <Card.Body>\n        <Card.Title>{member.name}</Card.Title>\n        <Card.Subtitle>{member.role}</Card.Subtitle>\n        <Card.Text />\n        <Card.Text>{member.bio}</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        {member.commitCount} commits, {member.issueCount} issues,{' '}\n        {member.testCount} unit tests\n      </Card.Footer>\n    </Card>\n  );\n}\n\nProfileCard.propTypes = {\n  member: PropTypes.shape({\n    photoURL: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    commitCount: PropTypes.number.isRequired,\n    issueCount: PropTypes.number.isRequired,\n    testCount: PropTypes.number.isRequired,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}