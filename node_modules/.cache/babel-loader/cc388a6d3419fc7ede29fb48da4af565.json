{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEquatable$1_$type, typeCast, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar AxisRange =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(AxisRange, _super);\n\n  function AxisRange(a, b) {\n    var _this = _super.call(this) || this;\n\n    _this.c = 0;\n    _this.b = 0;\n    _this.c = a;\n    _this.b = b;\n    return _this;\n  }\n\n  AxisRange.prototype.equals = function (a) {\n    return a != null && this.c == a.c && this.b == a.b;\n  };\n\n  AxisRange.prototype.equals1 = function (a) {\n    return this.equals(typeCast(AxisRange.$, a));\n  };\n\n  AxisRange.prototype.getHashCode = function () {\n    return _super.prototype.getHashCode.call(this);\n  };\n\n  AxisRange.$t = markType(AxisRange, 'AxisRange', Base.$, [IEquatable$1_$type.specialize(-1)]).initSelfReferences();\n  return AxisRange;\n}(Base);\n\nexport { AxisRange };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/AxisRange.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAA6B,kBAA7B,EAAiD,QAAjD,EAAiE,QAAjE,QAAiF,qBAAjF;AAEA;;;;AAGA,IAAA,SAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,EAAA,MAAA;;AAE9B,WAAA,SAAA,CAAY,CAAZ,EAAuB,CAAvB,EAAgC;AAAhC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAKA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AACA,IAAA,KAAA,CAAA,CAAA,GAAY,CAAZ;AAJC,IAAA,KAAI,CAAC,CAAL,GAAS,CAAT;AACA,IAAA,KAAI,CAAC,CAAL,GAAS,CAAT;;AACA;;AAGD,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,CAAP,EAAmB;AAClB,WAAO,CAAC,IAAI,IAAL,IAAa,KAAK,CAAL,IAAU,CAAC,CAAC,CAAzB,IAA8B,KAAK,CAAL,IAAU,CAAC,CAAC,CAAjD;AACA,GAFD;;AAGA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,CAAR,EAAc;AACb,WAAO,KAAK,MAAL,CAAY,QAAQ,CAAkB,SAAU,CAAC,CAA7B,EAAgC,CAAhC,CAApB,CAAP;AACA,GAFD;;AAGA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACC,WAAO,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,CAAP;AACA,GAFD;;AAdO,EAAA,SAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,SAAD,EAAY,WAAZ,EAA+B,IAAK,CAAC,CAArC,EAAwC,CAAC,kBAAkB,CAAC,UAAnB,CAA8B,CAAC,CAA/B,CAAD,CAAxC,CAAR,CAAqF,kBAArF,EAAX;AAiBR,SAAA,SAAA;AAAC,CAlBD,CAA+B,IAA/B,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, IEquatable$1_$type, typeCast, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar AxisRange = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AxisRange, _super);\n    function AxisRange(a, b) {\n        var _this = _super.call(this) || this;\n        _this.c = 0;\n        _this.b = 0;\n        _this.c = a;\n        _this.b = b;\n        return _this;\n    }\n    AxisRange.prototype.equals = function (a) {\n        return a != null && this.c == a.c && this.b == a.b;\n    };\n    AxisRange.prototype.equals1 = function (a) {\n        return this.equals(typeCast(AxisRange.$, a));\n    };\n    AxisRange.prototype.getHashCode = function () {\n        return _super.prototype.getHashCode.call(this);\n    };\n    AxisRange.$t = markType(AxisRange, 'AxisRange', Base.$, [IEquatable$1_$type.specialize(-1)]).initSelfReferences();\n    return AxisRange;\n}(Base));\nexport { AxisRange };\n//# sourceMappingURL=AxisRange.js.map\n"]},"metadata":{},"sourceType":"module"}