{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { AxisLabelPanelBase } from \"./AxisLabelPanelBase\";\nimport { Boolean_$type, typeCast, markType, Point_$type, typeGetValue, fromEnum, runOn, Number_$type, markDep } from \"igniteui-react-core\";\nimport { AxisLabelPanelBaseView } from \"./AxisLabelPanelBaseView\";\nimport { Rect } from \"igniteui-react-core\";\nimport { Extensions } from \"igniteui-react-core\";\nimport { Axis } from \"./Axis\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { LabelPosition } from \"./LabelPosition\";\nimport { XamDataChart } from \"./XamDataChart\";\nimport { CategoryAxisBase } from \"./CategoryAxisBase\";\nimport { IAngleScaler_$type } from \"./IAngleScaler\";\nimport { CategoryAxisRenderer } from \"./CategoryAxisRenderer\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { PolarAxisRenderingManager } from \"./PolarAxisRenderingManager\";\nimport { AxisLabelManager } from \"./AxisLabelManager\";\nimport { ViewportUtils } from \"./ViewportUtils\";\nimport { RadialAxisRenderingParameters } from \"./RadialAxisRenderingParameters\";\nimport { CategoryTickmarkValues } from \"./CategoryTickmarkValues\";\nimport { MathUtil } from \"igniteui-react-core\";\nimport { SeriesViewer } from \"./SeriesViewer\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { AxisRangeChangedEventArgs } from \"./AxisRangeChangedEventArgs\";\nimport { LineGeometry } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { RangeInfo } from \"./RangeInfo\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\nimport { NumericAxisBase } from \"./NumericAxisBase\";\nimport { LogarithmicTickmarkValues } from \"./LogarithmicTickmarkValues\";\nimport { PolarAxisRenderingParameters } from \"./PolarAxisRenderingParameters\";\nimport { RadialAxisLabelPanel } from \"./RadialAxisLabelPanel\";\nimport { LinearTickmarkValues } from \"./LinearTickmarkValues\";\nimport { IPolarRadialRenderingParameters_$type } from \"./IPolarRadialRenderingParameters\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { ArcSegment } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { CategoryAxisBaseView } from \"./CategoryAxisBaseView\";\nimport { NumericAxisBaseView } from \"./NumericAxisBaseView\";\n/**\n * @hidden\n */\n\nvar AngleAxisLabelPanel =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(AngleAxisLabelPanel, _super);\n\n  function AngleAxisLabelPanel() {\n    var _this = _super.call(this) || this;\n\n    _this.ct = false;\n    _this.cz = null;\n    _this.cx = 0;\n    _this.cu = 0;\n    _this.cw = 0;\n    _this.cv = 0;\n    return _this;\n  }\n\n  AngleAxisLabelPanel.prototype.ad = function () {\n    return new AngleAxisLabelPanelView(this);\n  };\n\n  AngleAxisLabelPanel.prototype.b8 = function (a) {\n    _super.prototype.b8.call(this, a);\n\n    this.cs = a;\n  };\n\n  AngleAxisLabelPanel.prototype.ao = function (a, b) {\n    if (!Extensions.b(b)) {\n      return false;\n    }\n\n    if (this.ac == null || this.ac.i1.isEmpty) {\n      return _super.prototype.ao.call(this, a, b);\n    }\n\n    return true;\n  };\n\n  AngleAxisLabelPanel.prototype.ay = function () {\n    var a = new List$1(Rect.$, 0);\n    var b = new List$1(Boolean_$type, 0);\n\n    if (this.a3.count != this.a2.count) {\n      return a;\n    }\n\n    this.cs.ay(a, b);\n    var c = false;\n    this.am = this.al(a, b);\n\n    if (!this.ac.bz()) {\n      c = true;\n      this.a9 = this.cx / 2;\n      this.a9 = this.a9 + this.cy();\n    } else {\n      c = true;\n      this.cs.ac();\n    }\n\n    if (c) {\n      for (var d = 0; d < a.count; d++) {\n        var e = this.a3._inner[d];\n        var f = this.a2._inner[d];\n        var g = a._inner[d];\n        var h = this.cz(f.c);\n        var i = h.x - this.bc(e) / 2;\n        var j = h.y - this.bb(e) / 2;\n        g.x = i;\n        g.y = j;\n        a._inner[d] = g;\n      }\n    }\n\n    return a;\n  };\n\n  AngleAxisLabelPanel.prototype.cy = function () {\n    var a;\n    var b;\n    b = this.ac;\n    a = null;\n\n    if (b != null) {\n      a = typeCast(XamDataChart.$, b.bf);\n    }\n\n    if (a == null || b == null) {\n      return 0;\n    }\n\n    var c = new List$1(Axis.$, 0);\n\n    for (var d = 0; d < a.axes.count; d++) {\n      var e = a.axes._inner[d];\n\n      if ((typeCast(NumericAngleAxis.$, e) !== null || typeCast(CategoryAngleAxis.$, e) !== null) && typeCast(AngleAxisLabelPanel.$, e.at) !== null && e.at.a3.count > 0 && !e.bz() && !e.by() && (e.ag == null || this.ac.ag == null || e.ag.lj == b.ag.lj)) {\n        c.add(e);\n      }\n    }\n\n    var f = c.indexOf(b);\n\n    if (f == -1) {\n      return 0;\n    }\n\n    var g = 0;\n    var h = 5;\n\n    if (f == 0) {\n      g += h;\n    } else {\n      g += c._inner[f - 1].at.a9;\n      g += c._inner[f].at.a9 * 2 + h;\n    }\n\n    return g;\n  };\n\n  AngleAxisLabelPanel.prototype.ah = function () {\n    return 4;\n  };\n\n  AngleAxisLabelPanel.prototype.as = function (a) {\n    return a == 4 || a == 5;\n  };\n\n  AngleAxisLabelPanel.$t = markType(AngleAxisLabelPanel, 'AngleAxisLabelPanel', AxisLabelPanelBase.$);\n  return AngleAxisLabelPanel;\n}(AxisLabelPanelBase);\n\nexport { AngleAxisLabelPanel };\n/**\n * @hidden\n */\n\nvar CategoryAngleAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CategoryAngleAxis, _super);\n\n  function CategoryAngleAxis() {\n    var _this = _super.call(this) || this;\n\n    _this.k2 = null;\n    _this.kz = null;\n    _this.k3 = false;\n    _this.k7 = NaN;\n    _this.k0 = null;\n    _this.k8 = 0;\n    _this.k5 = 0;\n    _this.k6 = 0;\n    _this.lj = 1;\n    _this.ab = CategoryAngleAxis.$;\n    _this.kz = _this.ky();\n    _this.k2 = new PolarAxisRenderingManager();\n    return _this;\n  }\n\n  CategoryAngleAxis.prototype.a1 = function () {\n    return new CategoryAngleAxisView(this);\n  };\n\n  CategoryAngleAxis.prototype.gs = function (a) {\n    _super.prototype.gs.call(this, a);\n\n    this.kx = a;\n  };\n\n  CategoryAngleAxis.prototype.get_b0 = function () {\n    return true;\n  };\n\n  CategoryAngleAxis.prototype.as = function () {\n    var _this = this;\n\n    var a = new AngleAxisLabelPanel();\n\n    a.cz = function (b) {\n      var c = _this.bf != null ? _this.bf.mq : Rect.empty;\n      var d = !c.isEmpty ? _this.i1 : Rect.empty;\n      return _this.lw(b, {\n        $type: Point_$type,\n        x: 0.5,\n        y: 0.5\n      }, c, d, _this.at.a9);\n    };\n\n    return a;\n  };\n\n  CategoryAngleAxis.prototype.lh = function (a) {\n    return Math.round(a * Math.pow(10, 10)) / Math.pow(10, 10);\n  };\n\n  CategoryAngleAxis.prototype.ky = function () {\n    var _this = this;\n\n    var a = function () {\n      var $ret = new AxisLabelManager();\n      $ret.a = _this;\n      $ret.f = _this.cw;\n      $ret.e = _this.cv;\n      $ret.b = _this.at;\n      return $ret;\n    }();\n\n    if (this.aw != null) {\n      this.aw.registerAxis(this);\n    }\n\n    var b = new CategoryAxisRenderer(a);\n\n    b.u = function () {\n      var c = _this.a2.ay();\n\n      var d = _this.a2.a1();\n\n      var e = _this.a2.az();\n\n      var f = _this.a2.a0();\n\n      _this.he();\n\n      _this.gi(c);\n\n      _this.gi(d);\n\n      _this.gi(e);\n\n      _this.gi(f);\n    };\n\n    b.o = function (c, d) {\n      return !d.isEmpty && !c.isEmpty && _this.k1 != null;\n    };\n\n    b.d = function (c, d, e, f) {\n      return _this.kw(c, d, e, f);\n    };\n\n    b.v = function () {\n      if (!_this.k3) {\n        _this.k3 = true;\n\n        _this.k1.cl();\n\n        _this.k3 = false;\n      }\n    };\n\n    b.g = function (c) {\n      var d = typeGetValue(c);\n\n      if (d > _this.jf.count - 1) {\n        d -= _this.jf.count;\n      }\n\n      var e = _this.jf.item(d);\n\n      return _this.e6(e);\n    };\n\n    b.b.c = function (c) {\n      var e_1, _a;\n\n      if ((_this.aw == null || _this.aw.visibility == 0) && _this.k1 != null && _this.k7 != c) {\n        var d = typeCast(XamDataChart.$, _this.bf);\n\n        if (d == null) {\n          return;\n        }\n\n        _this.k7 = c;\n        _this.at.a8 = c;\n        d.ht();\n\n        try {\n          for (var _b = tslib_1.__values(fromEnum(d.axes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var e = _c.value;\n\n            if (e != _this && typeCast(AngleAxisLabelPanel.$, e.at) !== null) {\n              e.a2.ad();\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n    };\n\n    b.k = function (c, d, e) {\n      var f = typeCast(RadialAxisRenderingParameters.$, c);\n\n      _this.k2.m(d, e, c.z, c.aa, f.minLength, f.maxLength, f.center);\n    };\n\n    b.l = function (c, d, e, f) {\n      var g = typeCast(RadialAxisRenderingParameters.$, c);\n\n      _this.k2.n(d, e, f, g.z, c.aa, g.minLength, g.maxLength, g.center);\n    };\n\n    b.m = function (c, d) {\n      return _this.getScaledAngle(d);\n    };\n\n    b.q = function (c, d) {\n      if (_this.lh(d - _this.k8) < 0) {\n        return false;\n      }\n\n      if (_this.lh(d - _this.k8 - 2 * Math.PI) > 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    b.j = function (c) {\n      var d = typeCast(RadialAxisRenderingParameters.$, c);\n\n      if (d.e == d.k._inner[0]) {\n        _this.k2.i(c.t, c.n, c.z, c.aa, d.center, d.minAngle, d.maxAngle);\n      }\n    };\n\n    b.e = function (c) {\n      c.n = _this.lb();\n      c.r = c.n;\n    };\n\n    b.p = function (c, d, e) {\n      var f = typeCast(RadialAxisRenderingParameters.$, c);\n\n      if (e) {\n        return false;\n      }\n\n      var g = _this.lw(d, f.center, c.aa, c.z, 0);\n\n      if (g.x < c.z.right && g.x >= c.z.left && g.y < c.z.bottom && g.y >= c.z.top) {\n        return true;\n      }\n\n      return false;\n    };\n\n    b.a = function (c, d, e, f) {\n      var g = c.y;\n      var h = new ScalerParams(0, c.aa, c.z, _this.b8, g);\n      var i = d;\n\n      if (_this.categoryMode != 0) {\n        var j = e * f + 1;\n        j = Math.min(j, _this.jy);\n\n        var k = _this.dw(j, h);\n\n        i = (d + k) / 2;\n      }\n\n      return i;\n    };\n\n    b.f = runOn(this, this.getGroupCenter);\n    b.i = runOn(this, this.le);\n    return b;\n  };\n\n  CategoryAngleAxis.prototype.lw = function (a, b, c, d, e) {\n    var f = this.lb();\n    var g = ViewportUtils.b(e, c, d);\n\n    if (this.aw != null && (this.aw.c == 5 || this.aw.c == 1)) {\n      g *= -1;\n    }\n\n    var h = b.x + (f + g) * Math.cos(a);\n    var i = b.y + (f + g) * Math.sin(a);\n    h = ViewportUtils.c(h, c, d);\n    i = ViewportUtils.f(i, c, d);\n    return {\n      $type: Point_$type,\n      x: h,\n      y: i\n    };\n  };\n\n  CategoryAngleAxis.prototype.lb = function () {\n    if (this.k1 == null) {\n      return 0;\n    }\n\n    if (!this.by()) {\n      return this.k1.lo();\n    } else {\n      return this.k1.lp(this.e2);\n    }\n  };\n\n  CategoryAngleAxis.prototype.kw = function (a, b, c, d) {\n    if (this.jf == null) {\n      return null;\n    }\n\n    var e = new RadialAxisRenderingParameters();\n    var f = this.jf.count - 1;\n    var g = this.a2.ay();\n    var h = this.a2.a1();\n    var i = this.a2.az();\n    var j = this.a2.a0();\n    e.t = g;\n    e.w = h;\n    e.u = i;\n    e.v = j;\n    e.l = f;\n    e.m = 0;\n    e.h = false;\n    e.z = a;\n    e.y = c;\n    e.x = d;\n    e.aa = b;\n    e.g = this.k4();\n    e.p = this.lf;\n    e.o = this.d9();\n    e.q = this.lg;\n    e.s = this.e7;\n    var k = this.k2.f(b);\n    var l = this.k2.g(b);\n    var m = 0.5 * this.k1.lj;\n    var n = 0.5 * this.k1.li;\n    var o = k;\n    var p = l;\n    var q = this.k1.lo();\n\n    if (isNaN_(q) || isInfinity(q)) {\n      return null;\n    }\n\n    if (p >= m) {\n      p = q;\n    }\n\n    if (o < n) {\n      o = n;\n    }\n\n    var r = a.width;\n    this.k2.k(b, e, 0, this.jf.count, this.b8, runOn(this, this.getUnscaledAngle), r);\n    var s = {\n      $type: Point_$type,\n      x: 0.5,\n      y: 0.5\n    };\n    e.center = s;\n    e.maxLength = p;\n    e.minLength = o;\n    e.effectiveMaximum = q;\n    e.ae = this.jf.count;\n    e.ab = this.categoryMode;\n    e.ad = true;\n    e.ac = this.b8;\n    e.af = this.j1;\n    e.f = new CategoryTickmarkValues();\n    e.j = this.cj;\n    return e;\n  };\n\n  CategoryAngleAxis.prototype.getMinMaxAngle = function (a, b, c) {\n    var d = this.k2.l(a, b, c);\n    b = d.p1;\n    c = d.p2;\n    return {\n      p1: b,\n      p2: c\n    };\n  };\n\n  CategoryAngleAxis.prototype.ac = function () {\n    _super.prototype.ac.call(this);\n\n    this.g6(false);\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"k1\", {\n    get: function () {\n      if (this.k0 != null) {\n        return this.k0;\n      }\n\n      var a = typeCast(XamDataChart.$, this.bf);\n\n      if (a != null) {\n        for (var b = 0; b < a.axes.count; b++) {\n          if (typeCast(NumericRadiusAxis.$, a.axes._inner[b]) !== null) {\n            return a.axes._inner[b];\n          }\n        }\n      }\n\n      return this.k0;\n    },\n    set: function (a) {\n      this.k0 = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.ah = function () {\n    return this.k1;\n  };\n\n  CategoryAngleAxis.prototype.getCategorySize = function (a, b, c) {\n    return 2 * Math.PI / this.jy;\n  };\n\n  CategoryAngleAxis.prototype.jr = function (a, b, c) {\n    var d = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n    var e = 0;\n\n    if (!isNaN_(this.jv)) {\n      e = Math.min(this.jv, 1);\n    }\n\n    var f = 1 - 0.5 * d;\n    return this.getCategorySize(a, b, c) * f / (this.j1 - (this.j1 - 1) * e);\n  };\n\n  CategoryAngleAxis.prototype.getGroupCenter = function (a, b, c, d) {\n    var e = 0.5;\n\n    if (this.j1 > 1) {\n      var f = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n      var g = 0;\n\n      if (!isNaN_(this.jv)) {\n        g = Math.min(this.jv, 1);\n      }\n\n      var h = 1 - 0.5 * f;\n      var i = h / (this.j1 - (this.j1 - 1) * g);\n      var j = (h - i) / (this.j1 - 1);\n      e = 0.25 * f + 0.5 * i + a * j;\n    }\n\n    return this.getCategorySize(b, c, d) * e;\n  };\n\n  CategoryAngleAxis.prototype.le = function (a) {\n    var b = 0.5;\n\n    if (this.j1 > 1) {\n      var c = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n      var d = 0;\n\n      if (!isNaN_(this.jv)) {\n        d = Math.min(this.jv, 1);\n      }\n\n      var e = 1 - 0.5 * c;\n      var f = e / (this.j1 - (this.j1 - 1) * d);\n      var g = (e - f) / (this.j1 - 1);\n      b = 0.25 * c + 0.5 * f + a * g;\n    }\n\n    return b;\n  };\n\n  CategoryAngleAxis.prototype.g7 = function (a) {\n    _super.prototype.g7.call(this, a);\n\n    var b = this.bf != null ? this.bf.mq : Rect.empty;\n    var c = !b.isEmpty ? this.i1 : Rect.empty;\n    var d = this.iw();\n    var e = this.iv();\n    var f = this.kz.c(a, c, b, d, e);\n\n    if (f != null) {\n      this.k9 = f.f.m;\n      this.la = f.f.l;\n    }\n  };\n\n  CategoryAngleAxis.prototype.ld = function (a, b) {\n    var c;\n    var d;\n    var e = this.k2.l(b, c, d);\n    c = e.p1;\n    d = e.p2;\n\n    if (c == 0) {\n      if (this.b8) {\n        return this.jy;\n      } else {\n        return 0;\n      }\n    }\n\n    var f = this.getUnscaledAngle(c);\n\n    if (f < 0 || f > this.jy) {\n      f = this.getUnscaledAngle(c + Math.PI * 2);\n    }\n\n    return f;\n  };\n\n  CategoryAngleAxis.prototype.lc = function (a, b) {\n    var c;\n    var d;\n    var e = this.k2.l(b, c, d);\n    c = e.p1;\n    d = e.p2;\n\n    if (d > Math.PI * 2) {\n      d = d - Math.PI * 2;\n    }\n\n    if (d == Math.PI * 2) {\n      if (this.b8) {\n        return 0;\n      } else {\n        return this.jy;\n      }\n    }\n\n    var f = this.getUnscaledAngle(d);\n\n    if (f < 0 || f > this.jy) {\n      f = this.getUnscaledAngle(d + Math.PI * 2);\n    }\n\n    return f;\n  };\n\n  CategoryAngleAxis.prototype.getScaledAngle = function (a) {\n    var b = this.jy;\n    var c = b >= 2 ? a / b : b == 1 ? 0.5 : NaN;\n\n    if (this.b9) {\n      c = 1 - c;\n    }\n\n    return c * 2 * Math.PI + this.k8;\n  };\n\n  CategoryAngleAxis.prototype.getUnscaledAngle = function (a) {\n    if (a < this.k8) {\n      a += 2 * Math.PI;\n    }\n\n    var b = (a - this.k8) / (2 * Math.PI);\n\n    if (this.b8) {\n      b = 1 - b;\n    }\n\n    return b * this.jy;\n  };\n\n  CategoryAngleAxis.prototype.dw = function (a, b) {\n    return this.getScaledAngle(a);\n  };\n\n  CategoryAngleAxis.prototype.dz = function (a, b) {\n    return this.getUnscaledAngle(a);\n  };\n\n  CategoryAngleAxis.prototype.gu = function (a, b, c, d) {\n    var e_2, _a, e_3, _b, e_4, _c;\n\n    _super.prototype.gu.call(this, a, b, c, d);\n\n    var e = typeCast(XamDataChart.$, this.bf);\n\n    switch (b) {\n      case \"CrossingAxis\":\n        var f = typeCast(NumericRadiusAxis.$, d);\n        this.ls(f);\n\n        if (f != null) {\n          f.ly(this);\n        }\n\n        this.cg = true;\n        this.g6(false);\n        break;\n\n      case CategoryAngleAxis.$$p[0]:\n        this.k8 = this.li;\n\n        while (this.k8 < 0) {\n          this.k8 += 360;\n        }\n\n        while (this.k8 >= 360) {\n          this.k8 -= 360;\n        }\n\n        this.k8 = this.k8 * Math.PI / 180;\n        this.cg = true;\n        this.g6(false);\n\n        try {\n          for (var _d = tslib_1.__values(fromEnum(this.cx)), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var g = _e.value;\n            g.jd(false);\n            g.ik();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n\n        break;\n\n      case \"Label\":\n        if (e != null) {\n          try {\n            for (var _f = tslib_1.__values(fromEnum(e.axes)), _g = _f.next(); !_g.done; _g = _f.next()) {\n              var h = _g.value;\n              h.cg = true;\n              h.g5();\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n\n        break;\n\n      case \"CrossingValue\":\n        if (e != null) {\n          try {\n            for (var _h = tslib_1.__values(fromEnum(e.axes)), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var i = _j.value;\n\n              if (typeCast(NumericAngleAxis.$, i) !== null || typeCast(CategoryAngleAxis.$, i) !== null) {\n                i.cg = true;\n                i.g5();\n              }\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n\n        break;\n\n      case \"LabelSettings\":\n        this.kz = this.ky();\n        this.lq();\n        this.cg = true;\n        this.g6(false);\n        break;\n    }\n  };\n\n  CategoryAngleAxis.prototype.lq = function () {\n    this.k7 = NaN;\n  };\n\n  CategoryAngleAxis.prototype.ls = function (a) {\n    this.k1 = a;\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"lf\", {\n    get: function () {\n      return this.c(CategoryAngleAxis.lt);\n    },\n    set: function (a) {\n      this.h(CategoryAngleAxis.lt, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAngleAxis.prototype, \"k9\", {\n    get: function () {\n      return this.k5;\n    },\n    set: function (a) {\n      if (this.k9 != a) {\n        var b = this.k5;\n        this.k5 = a;\n        this.g0(\"ActualInterval\", b, this.k9);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.d7 = function () {\n    return this.k9;\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"lg\", {\n    get: function () {\n      return this.c(CategoryAngleAxis.lu);\n    },\n    set: function (a) {\n      this.h(CategoryAngleAxis.lu, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAngleAxis.prototype, \"la\", {\n    get: function () {\n      return this.k6;\n    },\n    set: function (a) {\n      if (this.la != a) {\n        var b = this.k6;\n        this.k6 = a;\n        this.g0(\"ActualMinorInterval\", b, this.la);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.k4 = function () {\n    return false;\n  };\n\n  CategoryAngleAxis.prototype.get_az = function () {\n    return 2;\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"az\", {\n    get: function () {\n      return this.get_az();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.cn = function () {\n    if (this.cg && this.co) {\n      this.a9 = this.a8();\n    }\n\n    if (this.jf == null) {\n      return false;\n    }\n\n    var a = this.jf.count;\n\n    if (a != this.lk) {\n      var b = new AxisRangeChangedEventArgs(0, 1, 1, this.lk, a);\n      this.lk = a;\n      this.g1(b);\n      return true;\n    }\n\n    return false;\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"lk\", {\n    get: function () {\n      return this.lj;\n    },\n    set: function (a) {\n      this.lj = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.it = function (a, b, c, d, e) {\n    if (d === void 0) {\n      d = null;\n    }\n\n    if (e === void 0) {\n      e = null;\n    }\n\n    var f = typeCast(RadialAxisRenderingParameters.$, this.kz.d(c, b, d, e));\n\n    if (f == null) {\n      return null;\n    }\n\n    var g = Math.cos(a);\n    var h = Math.sin(a);\n    var i = f.center.x + g * f.minLength;\n    var j = f.center.y + h * f.minLength;\n    var k = f.center.x + g * f.maxLength;\n    var l = f.center.y + h * f.maxLength;\n    i = ViewportUtils.c(i, b, c);\n    j = ViewportUtils.f(j, b, c);\n    k = ViewportUtils.c(k, b, c);\n    l = ViewportUtils.f(l, b, c);\n    var m = new LineGeometry();\n    m.d = {\n      $type: Point_$type,\n      x: i,\n      y: j\n    };\n    m.c = {\n      $type: Point_$type,\n      x: k,\n      y: l\n    };\n    return m;\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"isVertical\", {\n    get: function () {\n      return this.cf;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryAngleAxis.prototype.j$c = function (a, b) {\n    return this.dz.apply(this, arguments);\n  };\n\n  CategoryAngleAxis.prototype.j$b = function (a, b) {\n    return this.dw.apply(this, arguments);\n  };\n\n  CategoryAngleAxis.prototype.j$d = function (a, b, c, d, e) {\n    this.gm.apply(this, arguments);\n  };\n\n  CategoryAngleAxis.prototype.j$e = function (a, b, c, d) {\n    this.gn.apply(this, arguments);\n  };\n\n  CategoryAngleAxis.prototype.j$f = function (a, b, c, d) {\n    this.go.apply(this, arguments);\n  };\n\n  Object.defineProperty(CategoryAngleAxis.prototype, \"j$a\", {\n    get: function () {\n      return this.b8;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  CategoryAngleAxis.$t = markType(CategoryAngleAxis, 'CategoryAngleAxis', CategoryAxisBase.$, [IAngleScaler_$type]);\n  CategoryAngleAxis.lt = DependencyProperty.i(\"Interval\", Number_$type, CategoryAngleAxis.$, new PropertyMetadata(2, NaN, function (a, b) {\n    a.g0(\"Interval\", b.oldValue, b.newValue);\n    a.g6(false);\n  }));\n  CategoryAngleAxis.lu = DependencyProperty.i(\"MinorInterval\", Number_$type, CategoryAngleAxis.$, new PropertyMetadata(2, NaN, function (a, b) {\n    typeCast(CategoryAngleAxis.$, a).g0(\"MinorInterval\", b.oldValue, b.newValue);\n    typeCast(CategoryAngleAxis.$, a).g6(false);\n  }));\n  CategoryAngleAxis.$$p = markDep(DependencyProperty, PropertyMetadata, CategoryAngleAxis, 'g0', ['StartAngleOffset:li:lv', [1, 0]]);\n  return CategoryAngleAxis;\n}(CategoryAxisBase);\n\nexport { CategoryAngleAxis };\n/**\n * @hidden\n */\n\nvar NumericAngleAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumericAngleAxis, _super);\n\n  function NumericAngleAxis() {\n    var _this = _super.call(this) || this;\n\n    _this.lf = null;\n    _this.lg = false;\n    _this.lh = NaN;\n    _this.li = 0;\n    _this.ld = null;\n    _this.ab = NumericAngleAxis.$;\n    _this.lf = new PolarAxisRenderingManager();\n    _this.jf = _this.jd();\n    return _this;\n  }\n\n  NumericAngleAxis.prototype.a1 = function () {\n    return new NumericAngleAxisView(this);\n  };\n\n  NumericAngleAxis.prototype.gs = function (a) {\n    _super.prototype.gs.call(this, a);\n\n    this.lc = a;\n  };\n\n  NumericAngleAxis.prototype.get_b0 = function () {\n    return true;\n  };\n\n  NumericAngleAxis.prototype.as = function () {\n    var _this = this;\n\n    var a = new AngleAxisLabelPanel();\n\n    a.cz = function (b) {\n      var c = _this.bf != null ? _this.bf.mq : Rect.empty;\n      var d = !c.isEmpty ? _this.i1 : Rect.empty;\n      return _this.ls(b, {\n        $type: Point_$type,\n        x: 0.5,\n        y: 0.5\n      }, c, d, _this.at.a9);\n    };\n\n    return a;\n  };\n\n  NumericAngleAxis.prototype.lj = function () {\n    if (this.le == null) {\n      return 0;\n    }\n\n    if (!this.by()) {\n      return this.le.lo();\n    } else {\n      return this.le.lp(this.e2);\n    }\n  };\n\n  NumericAngleAxis.prototype.ll = function (a) {\n    return Math.round(a * Math.pow(10, 10)) / Math.pow(10, 10);\n  };\n\n  NumericAngleAxis.prototype.jd = function () {\n    var _this = this;\n\n    var a = _super.prototype.jd.call(this);\n\n    a.b.c = function (b) {\n      var e_5, _a;\n\n      if ((_this.aw == null || _this.aw.visibility == 0) && _this.le != null && _this.lh != b) {\n        var c = typeCast(XamDataChart.$, _this.bf);\n\n        if (c == null) {\n          return;\n        }\n\n        _this.lh = b;\n        _this.at.a8 = b;\n        c.ht();\n\n        try {\n          for (var _b = tslib_1.__values(fromEnum(c.axes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var d = _c.value;\n\n            if (d != _this && typeCast(AngleAxisLabelPanel.$, d.at) !== null) {\n              d.a2.ad();\n            }\n          }\n        } catch (e_5_1) {\n          e_5 = {\n            error: e_5_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_5) throw e_5.error;\n          }\n        }\n      }\n    };\n\n    a.e = function (b) {\n      b.n = _this.lj();\n      b.r = b.n;\n    };\n\n    a.j = function (b) {\n      var c = typeCast(PolarAxisRenderingParameters.$, b);\n\n      if (c.e == c.k._inner[0]) {\n        _this.lf.i(b.t, b.n, b.z, b.aa, c.center, c.minAngle, c.maxAngle);\n      }\n    };\n\n    a.k = function (b, c, d) {\n      var e = typeCast(PolarAxisRenderingParameters.$, b);\n\n      _this.lf.m(c, d, b.z, b.aa, e.minLength, e.maxLength, e.center);\n    };\n\n    a.l = function (b, c, d, e) {\n      var f = typeCast(PolarAxisRenderingParameters.$, b);\n\n      _this.lf.n(c, d, e, f.z, b.aa, f.minLength, f.maxLength, f.center);\n    };\n\n    a.d = function (b, c, d, e) {\n      var f = typeCast(PolarAxisRenderingParameters.$, _this.jg(b, c, d, e));\n      return f;\n    };\n\n    a.v = function () {\n      if (!_this.lg) {\n        _this.lg = true;\n\n        _this.le.cl();\n\n        _this.lg = false;\n      }\n    };\n\n    a.m = function (b, c) {\n      return _this.getScaledAngle(c);\n    };\n\n    a.o = function (b, c) {\n      return !c.isEmpty && !b.isEmpty && _this.le != null;\n    };\n\n    a.q = function (b, c) {\n      if (_this.ll(c - _this.li) < 0) {\n        return false;\n      }\n\n      if (_this.ll(c - _this.li - 2 * Math.PI) > 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    a.p = function (b, c, d) {\n      var e = typeCast(PolarAxisRenderingParameters.$, b);\n\n      var f = _this.ls(_this.getScaledAngle(e.l), e.center, b.aa, b.z, 0);\n\n      var g = _this.ls(c, e.center, b.aa, b.z, 0);\n\n      if (d && MathUtil.e(f.x - g.x, f.y - g.y) < 2) {\n        return false;\n      }\n\n      if (g.x < b.z.right && g.x >= b.z.left && g.y < b.z.bottom && g.y >= b.z.top) {\n        return true;\n      }\n\n      return false;\n    };\n\n    a.r = function (b, c, d, e) {\n      if (c < b.m && typeCast(LogarithmicTickmarkValues.$, b.f) !== null) {\n        return b.m;\n      } else if (c > b.l && (typeCast(LogarithmicTickmarkValues.$, b.f) !== null || b.h)) {\n        return b.l;\n      }\n\n      return c;\n    };\n\n    return a;\n  };\n\n  NumericAngleAxis.prototype.ls = function (a, b, c, d, e) {\n    var f = this.lj();\n    var g = ViewportUtils.b(e, c, d);\n\n    if (this.aw != null && (this.aw.c == 5 || this.aw.c == 1)) {\n      g *= -1;\n    }\n\n    var h = b.x + (f + g) * Math.cos(a);\n    var i = b.y + (f + g) * Math.sin(a);\n    h = ViewportUtils.c(h, c, d);\n    i = ViewportUtils.f(i, c, d);\n    return {\n      $type: Point_$type,\n      x: h,\n      y: i\n    };\n  };\n\n  NumericAngleAxis.prototype.dw = function (a, b) {\n    return this.getScaledAngle(a);\n  };\n\n  NumericAngleAxis.prototype.getScaledAngle1 = function (a, b, c) {\n    var d = 0;\n\n    if (b) {\n      d = (Math.log(a) - this.ka) / (this.j9 - this.ka);\n    } else {\n      d = (a - this.j4) / (this.j3 - this.j4);\n    }\n\n    if (c) {\n      d = 1 - d;\n    }\n\n    return d * 2 * Math.PI + this.li;\n  };\n\n  NumericAngleAxis.prototype.getScaledAngle = function (a) {\n    return this.getScaledAngle1(a, this.ju, this.b9);\n  };\n\n  NumericAngleAxis.prototype.dz = function (a, b) {\n    return this.getUnscaledAngle(a);\n  };\n\n  NumericAngleAxis.prototype.getUnscaledAngle = function (a) {\n    var b = (a - this.li) / (2 * Math.PI);\n\n    if (this.b8) {\n      b = 1 - b;\n    }\n\n    if (this.ju) {\n      return Math.exp(b * (this.j9 - this.ka) + this.ka);\n    } else {\n      return this.j4 + b * (this.j3 - this.j4);\n    }\n  };\n\n  NumericAngleAxis.prototype.gu = function (a, b, c, d) {\n    var e_6, _a, e_7, _b, e_8, _c;\n\n    _super.prototype.gu.call(this, a, b, c, d);\n\n    var e = typeCast(XamDataChart.$, this.bf);\n\n    switch (b) {\n      case \"CrossingAxis\":\n        var f = typeCast(NumericRadiusAxis.$, d);\n        this.lq(f);\n\n        if (f != null) {\n          f.ly(this);\n        }\n\n        this.g6(false);\n        break;\n\n      case NumericAngleAxis.$$p[0]:\n        this.li = this.lm;\n\n        while (this.li < 0) {\n          this.li += 360;\n        }\n\n        while (this.li >= 360) {\n          this.li -= 360;\n        }\n\n        this.li = this.lm * Math.PI / 180;\n        this.g6(false);\n\n        try {\n          for (var _d = tslib_1.__values(fromEnum(this.cu())), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var g = _e.value;\n            g.jd(false);\n            g.ik();\n          }\n        } catch (e_6_1) {\n          e_6 = {\n            error: e_6_1\n          };\n        } finally {\n          try {\n            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n          } finally {\n            if (e_6) throw e_6.error;\n          }\n        }\n\n        break;\n\n      case \"Label\":\n        if (e != null) {\n          try {\n            for (var _f = tslib_1.__values(fromEnum(e.axes)), _g = _f.next(); !_g.done; _g = _f.next()) {\n              var h = _g.value;\n              h.g5();\n            }\n          } catch (e_7_1) {\n            e_7 = {\n              error: e_7_1\n            };\n          } finally {\n            try {\n              if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            } finally {\n              if (e_7) throw e_7.error;\n            }\n          }\n        }\n\n        break;\n\n      case \"CrossingValue\":\n        if (e != null) {\n          try {\n            for (var _h = tslib_1.__values(fromEnum(e.axes)), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var i = _j.value;\n\n              if (typeCast(NumericAngleAxis.$, i) !== null || typeCast(CategoryAngleAxis.$, i) !== null) {\n                i.g5();\n              }\n            }\n          } catch (e_8_1) {\n            e_8 = {\n              error: e_8_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n            } finally {\n              if (e_8) throw e_8.error;\n            }\n          }\n        }\n\n        break;\n\n      case \"LabelSettings\":\n        this.jf = this.jd();\n        this.lo();\n        this.cg = true;\n        this.g6(false);\n        break;\n    }\n  };\n\n  NumericAngleAxis.prototype.lo = function () {\n    this.lh = NaN;\n  };\n\n  NumericAngleAxis.prototype.jh = function () {\n    return new PolarAxisRenderingParameters();\n  };\n\n  NumericAngleAxis.prototype.jg = function (a, b, c, d) {\n    var e = typeCast(PolarAxisRenderingParameters.$, _super.prototype.jg.call(this, a, b, c, d));\n    var f = this.lf.f(b);\n    var g = this.lf.g(b);\n    var h = 0.5 * this.le.lj;\n    var i = 0.5 * this.le.li;\n    var j = f;\n    var k = g;\n    var l = this.le.lo();\n\n    if (isNaN_(l) || isInfinity(l)) {\n      return null;\n    }\n\n    if (k >= h) {\n      k = l;\n    }\n\n    if (j < i) {\n      j = i;\n    }\n\n    var m = a.width;\n    this.lf.k(b, e, this.j4, this.j3, this.b8, runOn(this, this.getUnscaledAngle), m);\n    var n = {\n      $type: Point_$type,\n      x: 0.5,\n      y: 0.5\n    };\n    e.center = n;\n    e.maxLength = k;\n    e.minLength = j;\n    e.effectiveMaximum = l;\n    return e;\n  };\n\n  NumericAngleAxis.prototype.getMinMaxAngle = function (a, b, c) {\n    var d = this.lf.l(a, b, c);\n    b = d.p1;\n    c = d.p2;\n    return {\n      p1: b,\n      p2: c\n    };\n  };\n\n  NumericAngleAxis.prototype.g7 = function (a) {\n    _super.prototype.g7.call(this, a);\n\n    var b = this.bf != null ? this.bf.mq : Rect.empty;\n    var c = !b.isEmpty ? this.i1 : Rect.empty;\n    var d = this.iw();\n    var e = this.iv();\n    var f = this.jf.c(a, c, b, d, e);\n\n    if (f != null) {\n      this.j2 = f.f.m;\n      this.j5 = f.f.l;\n    }\n  };\n\n  Object.defineProperty(NumericAngleAxis.prototype, \"le\", {\n    get: function () {\n      if (this.ld != null) {\n        return this.ld;\n      }\n\n      var a = typeCast(XamDataChart.$, this.bf);\n\n      if (a != null) {\n        for (var b = 0; b < a.axes.count; b++) {\n          if (a.axes._inner[b].cc) {\n            return a.axes._inner[b];\n          }\n        }\n      }\n\n      return this.ld;\n    },\n    set: function (a) {\n      this.ld = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NumericAngleAxis.prototype.ah = function () {\n    return this.le;\n  };\n\n  NumericAngleAxis.prototype.lq = function (a) {\n    this.le = a;\n  };\n\n  NumericAngleAxis.prototype.hh = function (a, b) {\n    _super.prototype.hh.call(this, a, b);\n\n    if (b.height != a.height || b.width != a.width) {\n      this.cl();\n    }\n  };\n\n  NumericAngleAxis.prototype.get_az = function () {\n    return 2;\n  };\n\n  Object.defineProperty(NumericAngleAxis.prototype, \"az\", {\n    get: function () {\n      return this.get_az();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NumericAngleAxis.prototype.it = function (a, b, c, d, e) {\n    if (d === void 0) {\n      d = null;\n    }\n\n    if (e === void 0) {\n      e = null;\n    }\n\n    if (this.le == null) {\n      return null;\n    }\n\n    var f = typeCast(PolarAxisRenderingParameters.$, this.jg(c, b, d, e));\n\n    if (f == null) {\n      return null;\n    }\n\n    var g = Math.cos(a);\n    var h = Math.sin(a);\n    var i = f.center.x + g * f.minLength;\n    var j = f.center.y + h * f.minLength;\n    var k = f.center.x + g * f.maxLength;\n    var l = f.center.y + h * f.maxLength;\n    i = ViewportUtils.c(i, b, c);\n    j = ViewportUtils.f(j, b, c);\n    k = ViewportUtils.c(k, b, c);\n    l = ViewportUtils.f(l, b, c);\n    var m = new LineGeometry();\n    m.d = {\n      $type: Point_$type,\n      x: i,\n      y: j\n    };\n    m.c = {\n      $type: Point_$type,\n      x: k,\n      y: l\n    };\n    return m;\n  };\n\n  NumericAngleAxis.$t = markType(NumericAngleAxis, 'NumericAngleAxis', NumericAxisBase.$, [IAngleScaler_$type]);\n  NumericAngleAxis.$$p = markDep(DependencyProperty, PropertyMetadata, NumericAngleAxis, 'g0', ['StartAngleOffset:lm:lr', [1, 0]]);\n  return NumericAngleAxis;\n}(NumericAxisBase);\n\nexport { NumericAngleAxis };\n/**\n * @hidden\n */\n\nvar NumericRadiusAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumericRadiusAxis, _super);\n\n  function NumericRadiusAxis() {\n    var _this = _super.call(this) || this;\n\n    _this.lf = null;\n    _this.lg = false;\n    _this.lh = NaN;\n    _this.lj = 0;\n    _this.li = 0;\n    _this.ll = 0;\n    _this.lc = null;\n    _this.ab = NumericRadiusAxis.$;\n    _this.lj = _this.lt;\n    _this.li = _this.ls;\n    _this.lf = new PolarAxisRenderingManager();\n    _this.jf = _this.jd();\n    return _this;\n  }\n\n  NumericRadiusAxis.prototype.a1 = function () {\n    return new NumericRadiusAxisView(this);\n  };\n\n  NumericRadiusAxis.prototype.gs = function (a) {\n    _super.prototype.gs.call(this, a);\n\n    this.le = a;\n  };\n\n  NumericRadiusAxis.prototype.get_cc = function () {\n    return true;\n  };\n\n  NumericRadiusAxis.prototype.dv = function () {\n    var a = this.lj;\n    var b = this.li;\n    var c = Math.min(this.ln(), this.lm()) * (a - b) / 2;\n    c = Math.max(c, 14);\n    return c;\n  };\n\n  NumericRadiusAxis.prototype.ln = function () {\n    return this.i1.width;\n  };\n\n  NumericRadiusAxis.prototype.lm = function () {\n    return this.i1.height;\n  };\n\n  NumericRadiusAxis.prototype.as = function () {\n    return new RadialAxisLabelPanel();\n  };\n\n  NumericRadiusAxis.prototype.lk = function (a) {\n    if (a == null) {\n      return 0;\n    }\n\n    return a;\n  };\n\n  NumericRadiusAxis.prototype.jd = function () {\n    var _this = this;\n\n    var a = _super.prototype.jd.call(this);\n\n    a.b.c = function (b) {\n      if ((_this.aw == null || _this.aw.visibility == 0) && _this.ld != null) {\n        if ((_this.aw == null || _this.aw.c == 4 || _this.aw.c == 5) && _this.lh != b) {\n          _this.lh = b;\n          _this.at.a8 = b;\n\n          _this.bf.ht();\n        }\n      }\n    };\n\n    a.k = function (b, c, d) {\n      var e = typeCast(PolarAxisRenderingParameters.$, b);\n\n      _this.lf.i(c, d, e.z, e.aa, e.center, e.minAngle, e.maxAngle);\n    };\n\n    a.l = function (b, c, d, e) {\n      if (d == e) {\n        return;\n      }\n\n      var f = typeCast(PolarAxisRenderingParameters.$, b);\n\n      _this.lf.j(c, d, e, f.z, f.aa, f.center, f.minAngle, f.maxAngle);\n    };\n\n    a.m = function (b, c) {\n      return _this.lp(c);\n    };\n\n    a.q = function (b, c) {\n      var d = typeCast(PolarAxisRenderingParameters.$, b);\n      return c <= d.effectiveMaximum;\n    };\n\n    a.n = function (b, c) {\n      var d = typeCast(PolarAxisRenderingParameters.$, b);\n      return c <= d.effectiveMaximum;\n    };\n\n    a.j = function (b) {\n      var c = typeCast(PolarAxisRenderingParameters.$, b);\n\n      _this.lf.m(b.t, c.crossingAngleRadians, b.z, b.aa, c.minLength, c.maxLength, c.center);\n    };\n\n    a.e = function (b) {\n      b.n = _this.aw == null || _this.aw.c == 4 || _this.aw.c == 0 ? b.z.top : b.z.bottom;\n      b.r = b.n;\n      var c = typeCast(PolarAxisRenderingParameters.$, b);\n      c.crossingAngleRadians = _this.lk(_this.e2) * Math.PI / 180;\n\n      if (_this.aw == null || _this.aw.c == 4 || _this.aw.c == 5) {\n        c.n = ViewportUtils.f(0.5, c.aa, c.z) - b.z.top;\n        c.r = c.n;\n        var d = typeCast(RadialAxisLabelPanel.$, _this.at);\n\n        if (d != null) {\n          var e = 0;\n\n          if (_this.aw != null && _this.aw.c == 4) {\n            e = 1;\n          }\n\n          d.dh = {\n            $type: Point_$type,\n            x: ViewportUtils.c(0.5, c.aa, c.z),\n            y: e\n          };\n          d.de = c.crossingAngleRadians;\n        }\n      }\n    };\n\n    a.p = function (b, c, d) {\n      var e = typeCast(PolarAxisRenderingParameters.$, b);\n\n      if (_this.ld == null) {\n        return false;\n      }\n\n      if (c > e.effectiveMaximum) {\n        return false;\n      }\n\n      var f = false;\n      f = _this.aw == null || _this.aw.c == 4 || _this.aw.c == 5;\n      var g = 0;\n\n      if (f) {\n        g = _this.ll;\n      }\n\n      var h = e.center.x + c * Math.cos(g);\n      var i = e.center.y + c * Math.sin(g);\n      h = ViewportUtils.c(h, e.aa, e.z);\n      i = ViewportUtils.f(i, e.aa, e.z);\n\n      if (h <= b.z.right && h >= b.z.left && (i <= b.z.bottom && i >= b.z.top || !f)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    a.h = function (b, c) {\n      var d = typeCast(PolarAxisRenderingParameters.$, b);\n      return new LabelPosition(ViewportUtils.c(d.center.x + c, d.aa, d.z));\n    };\n\n    a.r = function (b, c, d, e) {\n      if (c < b.m) {\n        return b.m;\n      } else if (c > b.l) {\n        return b.l;\n      }\n\n      return c;\n    };\n\n    return a;\n  };\n\n  NumericRadiusAxis.prototype.dw = function (a, b) {\n    return this.lp(a);\n  };\n\n  NumericRadiusAxis.prototype.lq = function (a, b, c, d, e) {\n    var f = 0;\n\n    if (b) {\n      if (a <= 0) {\n        f = (Math.log(this.j4) - this.ka) / (this.j9 - this.ka);\n      } else {\n        f = (Math.log(a) - this.ka) / (this.j9 - this.ka);\n      }\n    } else {\n      f = (a - this.j4) / (this.j3 - this.j4);\n    }\n\n    if (c) {\n      f = 1 - f;\n    }\n\n    f = e + f * (d - e);\n    f /= 2;\n    return f;\n  };\n\n  NumericRadiusAxis.prototype.lp = function (a) {\n    return this.lq(a, this.ju, this.b9, this.lj, this.li);\n  };\n\n  NumericRadiusAxis.prototype.lr = function (a) {\n    var b = a * 2;\n    b = (b - this.li) / (this.lj - this.li);\n\n    if (this.b8) {\n      b = 1 - b;\n    }\n\n    if (this.ju) {\n      return Math.exp(b * (this.j9 - this.ka) + this.ka);\n    } else {\n      return this.j4 + b * (this.j3 - this.j4);\n    }\n  };\n\n  NumericRadiusAxis.prototype.dz = function (a, b) {\n    return this.lr(a);\n  };\n\n  NumericRadiusAxis.prototype.gu = function (a, b, c, d) {\n    var e_9, _a, e_10, _b;\n\n    switch (b) {\n      case \"CrossingValue\":\n        this.ll = this.lk(this.e2) * Math.PI / 180;\n        break;\n    }\n\n    _super.prototype.gu.call(this, a, b, c, d);\n\n    switch (b) {\n      case NumericRadiusAxis.$$p[1]:\n        this.lj = this.lt;\n\n        if (this.lj < 0) {\n          this.lj = 0.1;\n        }\n\n        if (this.lj > 1) {\n          this.lj = 1;\n        }\n\n        if (this.li >= this.lj) {\n          this.li = this.lj - 0.01;\n\n          if (this.li < 0) {\n            this.li = 0;\n            this.lj = 0.01;\n          }\n        }\n\n        this.cg = true;\n        this.g6(false);\n\n        if (this.ld != null) {\n          this.ld.g5();\n        }\n\n        try {\n          for (var _c = tslib_1.__values(fromEnum(this.cu())), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var e = _d.value;\n            e.jd(false);\n          }\n        } catch (e_9_1) {\n          e_9 = {\n            error: e_9_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_9) throw e_9.error;\n          }\n        }\n\n        break;\n\n      case NumericRadiusAxis.$$p[0]:\n        this.li = this.ls;\n\n        if (this.li < 0) {\n          this.li = 0.1;\n        }\n\n        if (this.li > 1) {\n          this.li = 1;\n        }\n\n        if (this.li >= this.lj) {\n          this.li = this.lj - 0.01;\n\n          if (this.li < 0) {\n            this.li = 0;\n            this.lj = 0.01;\n          }\n        }\n\n        this.cg = true;\n        this.g6(false);\n\n        if (this.ld != null) {\n          this.ld.g5();\n        }\n\n        try {\n          for (var _e = tslib_1.__values(fromEnum(this.cu())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var f = _f.value;\n            f.dl = true;\n            f.jd(false);\n          }\n        } catch (e_10_1) {\n          e_10 = {\n            error: e_10_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_10) throw e_10.error;\n          }\n        }\n\n        if (this.bf != null) {\n          this.bf.h1();\n        }\n\n        break;\n\n      case \"CrossingAxis\":\n        var g = typeCast(NumericAngleAxis.$, d);\n        var h = typeCast(CategoryAngleAxis.$, d);\n\n        if (g == null && h == null) {\n          this.ly(null);\n        }\n\n        if (g != null) {\n          this.ly(g);\n          g.lq(this);\n        }\n\n        if (h != null) {\n          this.ly(h);\n          h.ls(this);\n        }\n\n        this.cg = true;\n        this.g6(false);\n        break;\n\n      case \"IsInverted\":\n        if (this.ld != null) {\n          this.ld.cg = true;\n          this.ld.g6(false);\n        }\n\n        break;\n    }\n  };\n\n  NumericRadiusAxis.prototype.ly = function (a) {\n    this.ld = a;\n  };\n\n  Object.defineProperty(NumericRadiusAxis.prototype, \"ld\", {\n    get: function () {\n      if (this.lc != null) {\n        return this.lc;\n      }\n\n      var a = typeCast(XamDataChart.$, this.bf);\n\n      if (a != null) {\n        for (var b = 0; b < a.axes.count; b++) {\n          if (typeCast(NumericAngleAxis.$, a.axes._inner[b]) !== null || typeCast(CategoryAngleAxis.$, a.axes._inner[b]) !== null) {\n            return a.axes._inner[b];\n          }\n        }\n      }\n\n      return this.lc;\n    },\n    set: function (a) {\n      this.lc = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NumericRadiusAxis.prototype.ah = function () {\n    return this.ld;\n  };\n\n  NumericRadiusAxis.prototype.jh = function () {\n    return new PolarAxisRenderingParameters();\n  };\n\n  NumericRadiusAxis.prototype.jg = function (a, b, c, d) {\n    var e = typeCast(PolarAxisRenderingParameters.$, _super.prototype.jg.call(this, a, b, c, d));\n    var f = this.lf.f(b);\n    var g = this.lf.g(b);\n    var h = 0.5 * this.lj;\n    var i = 0.5 * this.li;\n    var j, k;\n\n    if (Rect.l_op_Equality(b, SeriesViewer.m0)) {\n      k = this.j3;\n      j = this.j4;\n    } else {\n      k = Math.min(g, h);\n      j = this.lr(f);\n      k = this.lr(k);\n      var l = this.lz(a, b, j, k);\n      j = l.p2;\n      k = l.p3;\n    }\n\n    var m = {\n      $type: Point_$type,\n      x: 0.5,\n      y: 0.5\n    };\n    var n = f;\n    var o = g;\n    var p = Math.min(a.width, a.height) * (this.lj - this.li) / 2;\n    e.center = m;\n    var q = Math.max(o, n);\n    var r = Math.min(n, o);\n    e.maxLength = q;\n    e.minLength = r;\n    var s = Math.min(j, k);\n    var t = Math.max(j, k);\n\n    if (s < this.j4) {\n      s = this.j4;\n    }\n\n    if (t > this.j3) {\n      t = this.j3;\n    }\n\n    this.j7 = s;\n    this.j6 = t;\n    e.k.add(function () {\n      var $ret = new RangeInfo();\n      $ret.d = s;\n      $ret.c = t;\n      $ret.b = p;\n      return $ret;\n    }());\n    var u = typeCast(IAngleScaler_$type, this.ld);\n\n    if (u != null) {\n      var v = void 0;\n      var w = void 0;\n      var x = u.getMinMaxAngle(b, v, w);\n      v = x.p1;\n      w = x.p2;\n      e.minAngle = Math.min(v, w);\n      e.maxAngle = Math.max(v, w);\n    }\n\n    var y = this.lo();\n\n    if (o >= h) {\n      o = y;\n    }\n\n    if (n < i) {\n      n = i;\n    }\n\n    e.minLength = n;\n    e.maxLength = o;\n    e.effectiveMaximum = y;\n    e.f = this.jk;\n    var z = typeCast(LinearTickmarkValues.$, e.f);\n\n    if (z != null) {\n      z.y = this.lu(m, e.minLength, e.maxLength, b, a);\n    }\n\n    return e;\n  };\n\n  NumericRadiusAxis.prototype.lz = function (a, b, c, d) {\n    var e = {\n      $type: Point_$type,\n      x: 0.5,\n      y: 0.5\n    };\n    var f = 0;\n\n    if (this.b8) {\n      f = this.lp(this.j4);\n    } else {\n      f = this.lp(this.j3);\n    }\n\n    var g = 0;\n\n    if (this.e2 != null) {\n      g = this.ll;\n    }\n\n    var h = e.x + f * Math.cos(g);\n    var i = e.y + f * Math.sin(g);\n    e.x = ViewportUtils.c(e.x, b, a);\n    e.y = ViewportUtils.f(e.y, b, a);\n    h = ViewportUtils.c(h, b, a);\n    i = ViewportUtils.f(i, b, a);\n\n    if (h >= a.left && h <= a.right && i >= a.top && i <= a.bottom) {\n      if (this.b8) {\n        d = this.j4;\n      } else {\n        d = this.j3;\n      }\n    }\n\n    if (e.x >= a.left && e.x <= a.right && e.y >= a.top && e.y <= a.bottom) {\n      if (this.b8) {\n        c = this.j3;\n      } else {\n        c = this.j4;\n      }\n    }\n\n    return {\n      p2: c,\n      p3: d\n    };\n  };\n\n  NumericRadiusAxis.prototype.lu = function (a, b, c, d, e) {\n    var f = ViewportUtils.d(c - b, d, e);\n    var g = f / Math.min(e.width, e.height);\n\n    if (g > 0.7) {\n      return 10;\n    }\n\n    return 5;\n  };\n\n  NumericRadiusAxis.prototype.lo = function () {\n    var a = 0;\n\n    if (!this.b8) {\n      a = this.lp(this.j3);\n    } else {\n      a = this.lp(this.j4);\n    }\n\n    return a;\n  };\n\n  NumericRadiusAxis.prototype.k2 = function (a) {\n    if (this.ld != null) {\n      this.ld.g5();\n    }\n  };\n\n  NumericRadiusAxis.prototype.g7 = function (a) {\n    _super.prototype.g7.call(this, a);\n\n    var b = this.bf != null ? this.bf.mq : Rect.empty;\n    var c = !b.isEmpty ? this.i1 : Rect.empty;\n    var d = this.iw();\n    var e = this.iv();\n    var f = this.jf.c(a, c, b, d, e);\n\n    if (f != null) {\n      this.j2 = f.f.m;\n      this.j5 = f.f.l;\n    }\n  };\n\n  NumericRadiusAxis.prototype.hh = function (a, b) {\n    _super.prototype.hh.call(this, a, b);\n\n    if (b.height != a.height || b.width != a.width) {\n      this.cl();\n    }\n  };\n\n  NumericRadiusAxis.prototype.lx = function (a, b, c, d, e) {\n    var f = typeCast(IPolarRadialRenderingParameters_$type, this.jg(b, c, d, e));\n\n    if (f == null) {\n      return;\n    }\n\n    this.lf.j(a.d, f.minLength, f.maxLength, b, c, f.center, f.minAngle, f.maxAngle);\n  };\n\n  NumericRadiusAxis.prototype.get_az = function () {\n    return 3;\n  };\n\n  Object.defineProperty(NumericRadiusAxis.prototype, \"az\", {\n    get: function () {\n      return this.get_az();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NumericRadiusAxis.prototype.it = function (a, b, c, d, e) {\n    if (d === void 0) {\n      d = null;\n    }\n\n    if (e === void 0) {\n      e = null;\n    }\n\n    var f = typeCast(PolarAxisRenderingParameters.$, this.jg(c, b, d, e));\n    var g = a;\n    var h = new PathGeometry();\n    var i = ViewportUtils.d(g, b, c);\n    var j = ViewportUtils.g(g, b, c);\n\n    if (i <= 0 || j <= 0) {\n      return null;\n    }\n\n    var k = ViewportUtils.c(f.center.x, b, c);\n    var l = ViewportUtils.f(f.center.y, b, c);\n\n    if (f.maxAngle - f.minAngle < Math.PI && f.maxAngle - f.minAngle > 0) {\n      var m = {\n        $type: Point_$type,\n        x: ViewportUtils.c(f.center.x + g * Math.cos(f.minAngle), b, c),\n        y: ViewportUtils.f(f.center.y + g * Math.sin(f.minAngle), b, c)\n      };\n      var n_1 = {\n        $type: Point_$type,\n        x: ViewportUtils.c(f.center.x + g * Math.cos(f.maxAngle), b, c),\n        y: ViewportUtils.f(f.center.y + g * Math.sin(f.maxAngle), b, c)\n      };\n      var o = new PathFigure();\n      o._startPoint = m;\n      o._isClosed = false;\n\n      o._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.b = false;\n        $ret.e = n_1;\n        $ret.f = new Size(1, i, j);\n        $ret.d = 1;\n        return $ret;\n      }());\n\n      h.c.add(o);\n    } else {\n      var p = new PathFigure();\n      p._startPoint = {\n        $type: Point_$type,\n        x: k,\n        y: l - j\n      };\n      p._isClosed = true;\n\n      p._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.b = false;\n        $ret.e = {\n          $type: Point_$type,\n          x: k,\n          y: l + j\n        };\n        $ret.f = new Size(1, i, j);\n        $ret.d = 1;\n        return $ret;\n      }());\n\n      p._segments.add(function () {\n        var $ret = new ArcSegment();\n        $ret.b = false;\n        $ret.e = {\n          $type: Point_$type,\n          x: k,\n          y: l - j\n        };\n        $ret.f = new Size(1, i, j);\n        $ret.d = 1;\n        return $ret;\n      }());\n\n      h.c.add(p);\n    }\n\n    return h;\n  };\n\n  NumericRadiusAxis.$t = markType(NumericRadiusAxis, 'NumericRadiusAxis', NumericAxisBase.$);\n  NumericRadiusAxis.$$p = markDep(DependencyProperty, PropertyMetadata, NumericRadiusAxis, 'g0', ['InnerRadiusExtentScale:ls:l0', [1, 0], 'RadiusExtentScale:lt:l1', [1, 0.75]]);\n  return NumericRadiusAxis;\n}(NumericAxisBase);\n\nexport { NumericRadiusAxis };\n/**\n * @hidden\n */\n\nvar AngleAxisLabelPanelView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(AngleAxisLabelPanelView, _super);\n\n  function AngleAxisLabelPanelView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.ax = null;\n    _this.ax = a;\n    return _this;\n  }\n\n  AngleAxisLabelPanelView.prototype.am = function () {\n    _super.prototype.am.call(this);\n\n    this.ax.ct = true;\n  };\n\n  AngleAxisLabelPanelView.prototype.ay = function (a, b) {\n    this.ax.cx = -1.7976931348623157E+308;\n    this.ax.cu = -1.7976931348623157E+308;\n    this.ax.cw = -1.7976931348623157E+308;\n    this.ax.cv = -1.7976931348623157E+308;\n\n    for (var c = 0; c < this.a.a3.count; c++) {\n      var d = this.a.a3._inner[c];\n      var e = this.a.a2._inner[c];\n      var f = e.a;\n      var g = this.ax.cz(e.c);\n      var h = this.m(d);\n      var i = this.l(d);\n      var j = h + this.p() + this.q();\n      var k = i + this.r() + this.o();\n      var l = g.x - j / 2;\n      var m = g.y - k / 2;\n      this.ax.cw = Math.max(h, this.ax.cw);\n      this.ax.cv = Math.max(i, this.ax.cv);\n      this.ax.cx = Math.max(j, this.ax.cx);\n      this.ax.cu = Math.max(k, this.ax.cu);\n      var n = new Rect(0, l, m, j, k);\n      a.add(n);\n      b.add(f);\n    }\n  };\n\n  AngleAxisLabelPanelView.prototype.o = function () {\n    return 0;\n  };\n\n  AngleAxisLabelPanelView.prototype.p = function () {\n    return 0;\n  };\n\n  AngleAxisLabelPanelView.prototype.q = function () {\n    return 0;\n  };\n\n  AngleAxisLabelPanelView.prototype.r = function () {\n    return 0;\n  };\n\n  AngleAxisLabelPanelView.$t = markType(AngleAxisLabelPanelView, 'AngleAxisLabelPanelView', AxisLabelPanelBaseView.$);\n  return AngleAxisLabelPanelView;\n}(AxisLabelPanelBaseView);\n\nexport { AngleAxisLabelPanelView };\n/**\n * @hidden\n */\n\nvar CategoryAngleAxisView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CategoryAngleAxisView, _super);\n\n  function CategoryAngleAxisView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.bg = null;\n    _this.bg = a;\n    return _this;\n  }\n\n  CategoryAngleAxisView.$t = markType(CategoryAngleAxisView, 'CategoryAngleAxisView', CategoryAxisBaseView.$);\n  return CategoryAngleAxisView;\n}(CategoryAxisBaseView);\n\nexport { CategoryAngleAxisView };\n/**\n * @hidden\n */\n\nvar NumericAngleAxisView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumericAngleAxisView, _super);\n\n  function NumericAngleAxisView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.bg = null;\n    _this.bg = a;\n    return _this;\n  }\n\n  NumericAngleAxisView.$t = markType(NumericAngleAxisView, 'NumericAngleAxisView', NumericAxisBaseView.$);\n  return NumericAngleAxisView;\n}(NumericAxisBaseView);\n\nexport { NumericAngleAxisView };\n/**\n * @hidden\n */\n\nvar NumericRadiusAxisView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumericRadiusAxisView, _super);\n\n  function NumericRadiusAxisView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.bg = null;\n    _this.bg = a;\n    return _this;\n  }\n\n  NumericRadiusAxisView.$t = markType(NumericRadiusAxisView, 'NumericRadiusAxisView', NumericAxisBaseView.$);\n  return NumericRadiusAxisView;\n}(NumericAxisBaseView);\n\nexport { NumericRadiusAxisView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/AngleAxisLabelPanel_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { AxisLabelPanelBase } from \"./AxisLabelPanelBase\";\nimport { Boolean_$type, typeCast, markType, Point_$type, typeGetValue, fromEnum, runOn, Number_$type, markDep } from \"igniteui-react-core\";\nimport { AxisLabelPanelBaseView } from \"./AxisLabelPanelBaseView\";\nimport { Rect } from \"igniteui-react-core\";\nimport { Extensions } from \"igniteui-react-core\";\nimport { Axis } from \"./Axis\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { LabelPosition } from \"./LabelPosition\";\nimport { XamDataChart } from \"./XamDataChart\";\nimport { CategoryAxisBase } from \"./CategoryAxisBase\";\nimport { IAngleScaler_$type } from \"./IAngleScaler\";\nimport { CategoryAxisRenderer } from \"./CategoryAxisRenderer\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { PolarAxisRenderingManager } from \"./PolarAxisRenderingManager\";\nimport { AxisLabelManager } from \"./AxisLabelManager\";\nimport { ViewportUtils } from \"./ViewportUtils\";\nimport { RadialAxisRenderingParameters } from \"./RadialAxisRenderingParameters\";\nimport { CategoryTickmarkValues } from \"./CategoryTickmarkValues\";\nimport { MathUtil } from \"igniteui-react-core\";\nimport { SeriesViewer } from \"./SeriesViewer\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { AxisRangeChangedEventArgs } from \"./AxisRangeChangedEventArgs\";\nimport { LineGeometry } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { RangeInfo } from \"./RangeInfo\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\nimport { NumericAxisBase } from \"./NumericAxisBase\";\nimport { LogarithmicTickmarkValues } from \"./LogarithmicTickmarkValues\";\nimport { PolarAxisRenderingParameters } from \"./PolarAxisRenderingParameters\";\nimport { RadialAxisLabelPanel } from \"./RadialAxisLabelPanel\";\nimport { LinearTickmarkValues } from \"./LinearTickmarkValues\";\nimport { IPolarRadialRenderingParameters_$type } from \"./IPolarRadialRenderingParameters\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { ArcSegment } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { CategoryAxisBaseView } from \"./CategoryAxisBaseView\";\nimport { NumericAxisBaseView } from \"./NumericAxisBaseView\";\n/**\n * @hidden\n */\nvar AngleAxisLabelPanel = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AngleAxisLabelPanel, _super);\n    function AngleAxisLabelPanel() {\n        var _this = _super.call(this) || this;\n        _this.ct = false;\n        _this.cz = null;\n        _this.cx = 0;\n        _this.cu = 0;\n        _this.cw = 0;\n        _this.cv = 0;\n        return _this;\n    }\n    AngleAxisLabelPanel.prototype.ad = function () {\n        return new AngleAxisLabelPanelView(this);\n    };\n    AngleAxisLabelPanel.prototype.b8 = function (a) {\n        _super.prototype.b8.call(this, a);\n        this.cs = a;\n    };\n    AngleAxisLabelPanel.prototype.ao = function (a, b) {\n        if (!Extensions.b(b)) {\n            return false;\n        }\n        if (this.ac == null || this.ac.i1.isEmpty) {\n            return _super.prototype.ao.call(this, a, b);\n        }\n        return true;\n    };\n    AngleAxisLabelPanel.prototype.ay = function () {\n        var a = new List$1(Rect.$, 0);\n        var b = new List$1(Boolean_$type, 0);\n        if (this.a3.count != this.a2.count) {\n            return a;\n        }\n        this.cs.ay(a, b);\n        var c = false;\n        this.am = this.al(a, b);\n        if (!this.ac.bz()) {\n            c = true;\n            this.a9 = this.cx / 2;\n            this.a9 = this.a9 + this.cy();\n        }\n        else {\n            c = true;\n            this.cs.ac();\n        }\n        if (c) {\n            for (var d = 0; d < a.count; d++) {\n                var e = this.a3._inner[d];\n                var f = this.a2._inner[d];\n                var g = a._inner[d];\n                var h = this.cz(f.c);\n                var i = h.x - this.bc(e) / 2;\n                var j = h.y - this.bb(e) / 2;\n                g.x = i;\n                g.y = j;\n                a._inner[d] = g;\n            }\n        }\n        return a;\n    };\n    AngleAxisLabelPanel.prototype.cy = function () {\n        var a;\n        var b;\n        b = this.ac;\n        a = null;\n        if (b != null) {\n            a = typeCast(XamDataChart.$, b.bf);\n        }\n        if (a == null || b == null) {\n            return 0;\n        }\n        var c = new List$1(Axis.$, 0);\n        for (var d = 0; d < a.axes.count; d++) {\n            var e = a.axes._inner[d];\n            if ((typeCast(NumericAngleAxis.$, e) !== null || typeCast(CategoryAngleAxis.$, e) !== null) && typeCast(AngleAxisLabelPanel.$, e.at) !== null && e.at.a3.count > 0 && (!e.bz()) && !e.by() && (e.ag == null || this.ac.ag == null || e.ag.lj == b.ag.lj)) {\n                c.add(e);\n            }\n        }\n        var f = c.indexOf(b);\n        if (f == -1) {\n            return 0;\n        }\n        var g = 0;\n        var h = 5;\n        if (f == 0) {\n            g += h;\n        }\n        else {\n            g += c._inner[f - 1].at.a9;\n            g += c._inner[f].at.a9 * 2 + h;\n        }\n        return g;\n    };\n    AngleAxisLabelPanel.prototype.ah = function () {\n        return 4;\n    };\n    AngleAxisLabelPanel.prototype.as = function (a) {\n        return a == 4 || a == 5;\n    };\n    AngleAxisLabelPanel.$t = markType(AngleAxisLabelPanel, 'AngleAxisLabelPanel', AxisLabelPanelBase.$);\n    return AngleAxisLabelPanel;\n}(AxisLabelPanelBase));\nexport { AngleAxisLabelPanel };\n/**\n * @hidden\n */\nvar CategoryAngleAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CategoryAngleAxis, _super);\n    function CategoryAngleAxis() {\n        var _this = _super.call(this) || this;\n        _this.k2 = null;\n        _this.kz = null;\n        _this.k3 = false;\n        _this.k7 = NaN;\n        _this.k0 = null;\n        _this.k8 = 0;\n        _this.k5 = 0;\n        _this.k6 = 0;\n        _this.lj = 1;\n        _this.ab = CategoryAngleAxis.$;\n        _this.kz = _this.ky();\n        _this.k2 = new PolarAxisRenderingManager();\n        return _this;\n    }\n    CategoryAngleAxis.prototype.a1 = function () {\n        return new CategoryAngleAxisView(this);\n    };\n    CategoryAngleAxis.prototype.gs = function (a) {\n        _super.prototype.gs.call(this, a);\n        this.kx = a;\n    };\n    CategoryAngleAxis.prototype.get_b0 = function () {\n        return true;\n    };\n    CategoryAngleAxis.prototype.as = function () {\n        var _this = this;\n        var a = new AngleAxisLabelPanel();\n        a.cz = function (b) {\n            var c = _this.bf != null ? _this.bf.mq : Rect.empty;\n            var d = !c.isEmpty ? _this.i1 : Rect.empty;\n            return _this.lw(b, { $type: Point_$type, x: 0.5, y: 0.5 }, c, d, _this.at.a9);\n        };\n        return a;\n    };\n    CategoryAngleAxis.prototype.lh = function (a) {\n        return Math.round(a * Math.pow(10, 10)) / Math.pow(10, 10);\n    };\n    CategoryAngleAxis.prototype.ky = function () {\n        var _this = this;\n        var a = ((function () {\n            var $ret = new AxisLabelManager();\n            $ret.a = _this;\n            $ret.f = _this.cw;\n            $ret.e = _this.cv;\n            $ret.b = _this.at;\n            return $ret;\n        })());\n        if (this.aw != null) {\n            this.aw.registerAxis(this);\n        }\n        var b = new CategoryAxisRenderer(a);\n        b.u = function () {\n            var c = _this.a2.ay();\n            var d = _this.a2.a1();\n            var e = _this.a2.az();\n            var f = _this.a2.a0();\n            _this.he();\n            _this.gi(c);\n            _this.gi(d);\n            _this.gi(e);\n            _this.gi(f);\n        };\n        b.o = function (c, d) { return !d.isEmpty && !c.isEmpty && _this.k1 != null; };\n        b.d = function (c, d, e, f) { return _this.kw(c, d, e, f); };\n        b.v = function () {\n            if (!_this.k3) {\n                _this.k3 = true;\n                _this.k1.cl();\n                _this.k3 = false;\n            }\n        };\n        b.g = function (c) {\n            var d = typeGetValue(c);\n            if (d > _this.jf.count - 1) {\n                d -= _this.jf.count;\n            }\n            var e = _this.jf.item(d);\n            return _this.e6(e);\n        };\n        b.b.c = function (c) {\n            var e_1, _a;\n            if ((_this.aw == null || _this.aw.visibility == 0) && _this.k1 != null && _this.k7 != c) {\n                var d = typeCast(XamDataChart.$, _this.bf);\n                if (d == null) {\n                    return;\n                }\n                _this.k7 = c;\n                _this.at.a8 = c;\n                d.ht();\n                try {\n                    for (var _b = tslib_1.__values(fromEnum(d.axes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var e = _c.value;\n                        if (e != _this && typeCast(AngleAxisLabelPanel.$, e.at) !== null) {\n                            e.a2.ad();\n                        }\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n            }\n        };\n        b.k = function (c, d, e) {\n            var f = typeCast(RadialAxisRenderingParameters.$, c);\n            _this.k2.m(d, e, c.z, c.aa, f.minLength, f.maxLength, f.center);\n        };\n        b.l = function (c, d, e, f) {\n            var g = typeCast(RadialAxisRenderingParameters.$, c);\n            _this.k2.n(d, e, f, g.z, c.aa, g.minLength, g.maxLength, g.center);\n        };\n        b.m = function (c, d) { return _this.getScaledAngle(d); };\n        b.q = function (c, d) {\n            if (_this.lh(d - _this.k8) < 0) {\n                return false;\n            }\n            if (_this.lh(d - _this.k8 - (2 * Math.PI)) > 0) {\n                return false;\n            }\n            return true;\n        };\n        b.j = function (c) {\n            var d = typeCast(RadialAxisRenderingParameters.$, c);\n            if (d.e == d.k._inner[0]) {\n                _this.k2.i(c.t, c.n, c.z, c.aa, d.center, d.minAngle, d.maxAngle);\n            }\n        };\n        b.e = function (c) {\n            c.n = _this.lb();\n            c.r = c.n;\n        };\n        b.p = function (c, d, e) {\n            var f = typeCast(RadialAxisRenderingParameters.$, c);\n            if (e) {\n                return false;\n            }\n            var g = _this.lw(d, f.center, c.aa, c.z, 0);\n            if (g.x < c.z.right && g.x >= c.z.left && g.y < c.z.bottom && g.y >= c.z.top) {\n                return true;\n            }\n            return false;\n        };\n        b.a = function (c, d, e, f) {\n            var g = c.y;\n            var h = new ScalerParams(0, c.aa, c.z, _this.b8, g);\n            var i = d;\n            if (_this.categoryMode != 0) {\n                var j = (e * f) + 1;\n                j = Math.min(j, _this.jy);\n                var k = _this.dw(j, h);\n                i = (d + k) / 2;\n            }\n            return i;\n        };\n        b.f = runOn(this, this.getGroupCenter);\n        b.i = runOn(this, this.le);\n        return b;\n    };\n    CategoryAngleAxis.prototype.lw = function (a, b, c, d, e) {\n        var f = this.lb();\n        var g = ViewportUtils.b(e, c, d);\n        if (this.aw != null && (this.aw.c == 5 || this.aw.c == 1)) {\n            g *= -1;\n        }\n        var h = b.x + (f + g) * Math.cos(a);\n        var i = b.y + (f + g) * Math.sin(a);\n        h = ViewportUtils.c(h, c, d);\n        i = ViewportUtils.f(i, c, d);\n        return { $type: Point_$type, x: h, y: i };\n    };\n    CategoryAngleAxis.prototype.lb = function () {\n        if (this.k1 == null) {\n            return 0;\n        }\n        if (!this.by()) {\n            return this.k1.lo();\n        }\n        else {\n            return this.k1.lp((this.e2));\n        }\n    };\n    CategoryAngleAxis.prototype.kw = function (a, b, c, d) {\n        if (this.jf == null) {\n            return null;\n        }\n        var e = new RadialAxisRenderingParameters();\n        var f = this.jf.count - 1;\n        var g = this.a2.ay();\n        var h = this.a2.a1();\n        var i = this.a2.az();\n        var j = this.a2.a0();\n        e.t = g;\n        e.w = h;\n        e.u = i;\n        e.v = j;\n        e.l = f;\n        e.m = 0;\n        e.h = false;\n        e.z = a;\n        e.y = c;\n        e.x = d;\n        e.aa = b;\n        e.g = this.k4();\n        e.p = this.lf;\n        e.o = this.d9();\n        e.q = this.lg;\n        e.s = this.e7;\n        var k = this.k2.f(b);\n        var l = this.k2.g(b);\n        var m = 0.5 * this.k1.lj;\n        var n = 0.5 * this.k1.li;\n        var o = k;\n        var p = l;\n        var q = this.k1.lo();\n        if (isNaN_(q) || isInfinity(q)) {\n            return null;\n        }\n        if (p >= m) {\n            p = q;\n        }\n        if (o < n) {\n            o = n;\n        }\n        var r = a.width;\n        this.k2.k(b, e, 0, this.jf.count, this.b8, runOn(this, this.getUnscaledAngle), r);\n        var s = { $type: Point_$type, x: 0.5, y: 0.5 };\n        e.center = s;\n        e.maxLength = p;\n        e.minLength = o;\n        e.effectiveMaximum = q;\n        e.ae = this.jf.count;\n        e.ab = this.categoryMode;\n        e.ad = true;\n        e.ac = this.b8;\n        e.af = this.j1;\n        e.f = new CategoryTickmarkValues();\n        e.j = this.cj;\n        return e;\n    };\n    CategoryAngleAxis.prototype.getMinMaxAngle = function (a, b, c) {\n        var d = this.k2.l(a, b, c);\n        b = d.p1;\n        c = d.p2;\n        return {\n            p1: b,\n            p2: c\n        };\n    };\n    CategoryAngleAxis.prototype.ac = function () {\n        _super.prototype.ac.call(this);\n        this.g6(false);\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"k1\", {\n        get: function () {\n            if (this.k0 != null) {\n                return this.k0;\n            }\n            var a = typeCast(XamDataChart.$, this.bf);\n            if (a != null) {\n                for (var b = 0; b < a.axes.count; b++) {\n                    if (typeCast(NumericRadiusAxis.$, a.axes._inner[b]) !== null) {\n                        return a.axes._inner[b];\n                    }\n                }\n            }\n            return this.k0;\n        },\n        set: function (a) {\n            this.k0 = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.ah = function () {\n        return this.k1;\n    };\n    CategoryAngleAxis.prototype.getCategorySize = function (a, b, c) {\n        return 2 * Math.PI / this.jy;\n    };\n    CategoryAngleAxis.prototype.jr = function (a, b, c) {\n        var d = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n        var e = 0;\n        if (!isNaN_(this.jv)) {\n            e = Math.min(this.jv, 1);\n        }\n        var f = 1 - 0.5 * d;\n        return this.getCategorySize(a, b, c) * f / (this.j1 - (this.j1 - 1) * e);\n    };\n    CategoryAngleAxis.prototype.getGroupCenter = function (a, b, c, d) {\n        var e = 0.5;\n        if (this.j1 > 1) {\n            var f = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n            var g = 0;\n            if (!isNaN_(this.jv)) {\n                g = Math.min(this.jv, 1);\n            }\n            var h = 1 - 0.5 * f;\n            var i = h / (this.j1 - (this.j1 - 1) * g);\n            var j = (h - i) / (this.j1 - 1);\n            e = 0.25 * f + 0.5 * i + a * j;\n        }\n        return this.getCategorySize(b, c, d) * e;\n    };\n    CategoryAngleAxis.prototype.le = function (a) {\n        var b = 0.5;\n        if (this.j1 > 1) {\n            var c = !isNaN_(this.jo) ? MathUtil.b(this.jo, 0, 1) : 0;\n            var d = 0;\n            if (!isNaN_(this.jv)) {\n                d = Math.min(this.jv, 1);\n            }\n            var e = 1 - 0.5 * c;\n            var f = e / (this.j1 - (this.j1 - 1) * d);\n            var g = (e - f) / (this.j1 - 1);\n            b = 0.25 * c + 0.5 * f + a * g;\n        }\n        return b;\n    };\n    CategoryAngleAxis.prototype.g7 = function (a) {\n        _super.prototype.g7.call(this, a);\n        var b = this.bf != null ? this.bf.mq : Rect.empty;\n        var c = !b.isEmpty ? this.i1 : Rect.empty;\n        var d = this.iw();\n        var e = this.iv();\n        var f = this.kz.c(a, c, b, d, e);\n        if (f != null) {\n            this.k9 = f.f.m;\n            this.la = f.f.l;\n        }\n    };\n    CategoryAngleAxis.prototype.ld = function (a, b) {\n        var c;\n        var d;\n        var e = this.k2.l(b, c, d);\n        c = e.p1;\n        d = e.p2;\n        if (c == 0) {\n            if (this.b8) {\n                return this.jy;\n            }\n            else {\n                return 0;\n            }\n        }\n        var f = this.getUnscaledAngle(c);\n        if (f < 0 || f > this.jy) {\n            f = this.getUnscaledAngle(c + Math.PI * 2);\n        }\n        return f;\n    };\n    CategoryAngleAxis.prototype.lc = function (a, b) {\n        var c;\n        var d;\n        var e = this.k2.l(b, c, d);\n        c = e.p1;\n        d = e.p2;\n        if (d > Math.PI * 2) {\n            d = d - Math.PI * 2;\n        }\n        if (d == Math.PI * 2) {\n            if (this.b8) {\n                return 0;\n            }\n            else {\n                return this.jy;\n            }\n        }\n        var f = this.getUnscaledAngle(d);\n        if (f < 0 || f > this.jy) {\n            f = this.getUnscaledAngle(d + Math.PI * 2);\n        }\n        return f;\n    };\n    CategoryAngleAxis.prototype.getScaledAngle = function (a) {\n        var b = this.jy;\n        var c = b >= 2 ? (a) / (b) : b == 1 ? 0.5 : NaN;\n        if (this.b9) {\n            c = 1 - c;\n        }\n        return (c * 2 * Math.PI) + this.k8;\n    };\n    CategoryAngleAxis.prototype.getUnscaledAngle = function (a) {\n        if (a < this.k8) {\n            a += 2 * Math.PI;\n        }\n        var b = (a - this.k8) / (2 * Math.PI);\n        if (this.b8) {\n            b = 1 - b;\n        }\n        return b * (this.jy);\n    };\n    CategoryAngleAxis.prototype.dw = function (a, b) {\n        return this.getScaledAngle(a);\n    };\n    CategoryAngleAxis.prototype.dz = function (a, b) {\n        return this.getUnscaledAngle(a);\n    };\n    CategoryAngleAxis.prototype.gu = function (a, b, c, d) {\n        var e_2, _a, e_3, _b, e_4, _c;\n        _super.prototype.gu.call(this, a, b, c, d);\n        var e = typeCast(XamDataChart.$, this.bf);\n        switch (b) {\n            case \"CrossingAxis\":\n                var f = typeCast(NumericRadiusAxis.$, d);\n                this.ls(f);\n                if (f != null) {\n                    f.ly(this);\n                }\n                this.cg = true;\n                this.g6(false);\n                break;\n            case CategoryAngleAxis.$$p[0]:\n                this.k8 = this.li;\n                while (this.k8 < 0) {\n                    this.k8 += 360;\n                }\n                while (this.k8 >= 360) {\n                    this.k8 -= 360;\n                }\n                this.k8 = (this.k8 * Math.PI) / 180;\n                this.cg = true;\n                this.g6(false);\n                try {\n                    for (var _d = tslib_1.__values(fromEnum(this.cx)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var g = _e.value;\n                        g.jd(false);\n                        g.ik();\n                    }\n                }\n                catch (e_2_1) {\n                    e_2 = { error: e_2_1 };\n                }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_a = _d.return))\n                            _a.call(_d);\n                    }\n                    finally {\n                        if (e_2)\n                            throw e_2.error;\n                    }\n                }\n                break;\n            case \"Label\":\n                if (e != null) {\n                    try {\n                        for (var _f = tslib_1.__values(fromEnum(e.axes)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                            var h = _g.value;\n                            h.cg = true;\n                            h.g5();\n                        }\n                    }\n                    catch (e_3_1) {\n                        e_3 = { error: e_3_1 };\n                    }\n                    finally {\n                        try {\n                            if (_g && !_g.done && (_b = _f.return))\n                                _b.call(_f);\n                        }\n                        finally {\n                            if (e_3)\n                                throw e_3.error;\n                        }\n                    }\n                }\n                break;\n            case \"CrossingValue\":\n                if (e != null) {\n                    try {\n                        for (var _h = tslib_1.__values(fromEnum(e.axes)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                            var i = _j.value;\n                            if (typeCast(NumericAngleAxis.$, i) !== null || typeCast(CategoryAngleAxis.$, i) !== null) {\n                                i.cg = true;\n                                i.g5();\n                            }\n                        }\n                    }\n                    catch (e_4_1) {\n                        e_4 = { error: e_4_1 };\n                    }\n                    finally {\n                        try {\n                            if (_j && !_j.done && (_c = _h.return))\n                                _c.call(_h);\n                        }\n                        finally {\n                            if (e_4)\n                                throw e_4.error;\n                        }\n                    }\n                }\n                break;\n            case \"LabelSettings\":\n                this.kz = this.ky();\n                this.lq();\n                this.cg = true;\n                this.g6(false);\n                break;\n        }\n    };\n    CategoryAngleAxis.prototype.lq = function () {\n        this.k7 = NaN;\n    };\n    CategoryAngleAxis.prototype.ls = function (a) {\n        this.k1 = a;\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"lf\", {\n        get: function () {\n            return this.c(CategoryAngleAxis.lt);\n        },\n        set: function (a) {\n            this.h(CategoryAngleAxis.lt, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoryAngleAxis.prototype, \"k9\", {\n        get: function () {\n            return this.k5;\n        },\n        set: function (a) {\n            if (this.k9 != a) {\n                var b = this.k5;\n                this.k5 = a;\n                this.g0(\"ActualInterval\", b, this.k9);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.d7 = function () {\n        return this.k9;\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"lg\", {\n        get: function () {\n            return this.c(CategoryAngleAxis.lu);\n        },\n        set: function (a) {\n            this.h(CategoryAngleAxis.lu, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoryAngleAxis.prototype, \"la\", {\n        get: function () {\n            return this.k6;\n        },\n        set: function (a) {\n            if (this.la != a) {\n                var b = this.k6;\n                this.k6 = a;\n                this.g0(\"ActualMinorInterval\", b, this.la);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.k4 = function () {\n        return false;\n    };\n    CategoryAngleAxis.prototype.get_az = function () {\n        return 2;\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"az\", {\n        get: function () {\n            return this.get_az();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.cn = function () {\n        if (this.cg && this.co) {\n            this.a9 = this.a8();\n        }\n        if (this.jf == null) {\n            return false;\n        }\n        var a = this.jf.count;\n        if (a != this.lk) {\n            var b = new AxisRangeChangedEventArgs(0, 1, 1, this.lk, a);\n            this.lk = a;\n            this.g1(b);\n            return true;\n        }\n        return false;\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"lk\", {\n        get: function () {\n            return this.lj;\n        },\n        set: function (a) {\n            this.lj = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.it = function (a, b, c, d, e) {\n        if (d === void 0) {\n            d = null;\n        }\n        if (e === void 0) {\n            e = null;\n        }\n        var f = typeCast(RadialAxisRenderingParameters.$, this.kz.d(c, b, d, e));\n        if (f == null) {\n            return null;\n        }\n        var g = Math.cos(a);\n        var h = Math.sin(a);\n        var i = f.center.x + g * f.minLength;\n        var j = f.center.y + h * f.minLength;\n        var k = f.center.x + g * f.maxLength;\n        var l = f.center.y + h * f.maxLength;\n        i = ViewportUtils.c(i, b, c);\n        j = ViewportUtils.f(j, b, c);\n        k = ViewportUtils.c(k, b, c);\n        l = ViewportUtils.f(l, b, c);\n        var m = new LineGeometry();\n        m.d = { $type: Point_$type, x: i, y: j };\n        m.c = { $type: Point_$type, x: k, y: l };\n        return m;\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"isVertical\", {\n        get: function () {\n            return this.cf;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.prototype.j$c = function (a, b) {\n        return this.dz.apply(this, arguments);\n    };\n    CategoryAngleAxis.prototype.j$b = function (a, b) {\n        return this.dw.apply(this, arguments);\n    };\n    CategoryAngleAxis.prototype.j$d = function (a, b, c, d, e) {\n        this.gm.apply(this, arguments);\n    };\n    CategoryAngleAxis.prototype.j$e = function (a, b, c, d) {\n        this.gn.apply(this, arguments);\n    };\n    CategoryAngleAxis.prototype.j$f = function (a, b, c, d) {\n        this.go.apply(this, arguments);\n    };\n    Object.defineProperty(CategoryAngleAxis.prototype, \"j$a\", {\n        get: function () {\n            return this.b8;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryAngleAxis.$t = markType(CategoryAngleAxis, 'CategoryAngleAxis', CategoryAxisBase.$, [IAngleScaler_$type]);\n    CategoryAngleAxis.lt = DependencyProperty.i(\"Interval\", Number_$type, CategoryAngleAxis.$, new PropertyMetadata(2, NaN, function (a, b) {\n        a.g0(\"Interval\", b.oldValue, b.newValue);\n        a.g6(false);\n    }));\n    CategoryAngleAxis.lu = DependencyProperty.i(\"MinorInterval\", Number_$type, CategoryAngleAxis.$, new PropertyMetadata(2, NaN, function (a, b) {\n        (typeCast(CategoryAngleAxis.$, a)).g0(\"MinorInterval\", b.oldValue, b.newValue);\n        (typeCast(CategoryAngleAxis.$, a)).g6(false);\n    }));\n    CategoryAngleAxis.$$p = markDep(DependencyProperty, PropertyMetadata, CategoryAngleAxis, 'g0', ['StartAngleOffset:li:lv', [1, 0]]);\n    return CategoryAngleAxis;\n}(CategoryAxisBase));\nexport { CategoryAngleAxis };\n/**\n * @hidden\n */\nvar NumericAngleAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NumericAngleAxis, _super);\n    function NumericAngleAxis() {\n        var _this = _super.call(this) || this;\n        _this.lf = null;\n        _this.lg = false;\n        _this.lh = NaN;\n        _this.li = 0;\n        _this.ld = null;\n        _this.ab = NumericAngleAxis.$;\n        _this.lf = new PolarAxisRenderingManager();\n        _this.jf = _this.jd();\n        return _this;\n    }\n    NumericAngleAxis.prototype.a1 = function () {\n        return new NumericAngleAxisView(this);\n    };\n    NumericAngleAxis.prototype.gs = function (a) {\n        _super.prototype.gs.call(this, a);\n        this.lc = a;\n    };\n    NumericAngleAxis.prototype.get_b0 = function () {\n        return true;\n    };\n    NumericAngleAxis.prototype.as = function () {\n        var _this = this;\n        var a = new AngleAxisLabelPanel();\n        a.cz = function (b) {\n            var c = _this.bf != null ? _this.bf.mq : Rect.empty;\n            var d = !c.isEmpty ? _this.i1 : Rect.empty;\n            return _this.ls(b, { $type: Point_$type, x: 0.5, y: 0.5 }, c, d, _this.at.a9);\n        };\n        return a;\n    };\n    NumericAngleAxis.prototype.lj = function () {\n        if (this.le == null) {\n            return 0;\n        }\n        if (!this.by()) {\n            return this.le.lo();\n        }\n        else {\n            return this.le.lp((this.e2));\n        }\n    };\n    NumericAngleAxis.prototype.ll = function (a) {\n        return Math.round(a * Math.pow(10, 10)) / Math.pow(10, 10);\n    };\n    NumericAngleAxis.prototype.jd = function () {\n        var _this = this;\n        var a = _super.prototype.jd.call(this);\n        a.b.c = function (b) {\n            var e_5, _a;\n            if ((_this.aw == null || _this.aw.visibility == 0) && _this.le != null && _this.lh != b) {\n                var c = typeCast(XamDataChart.$, _this.bf);\n                if (c == null) {\n                    return;\n                }\n                _this.lh = b;\n                _this.at.a8 = b;\n                c.ht();\n                try {\n                    for (var _b = tslib_1.__values(fromEnum(c.axes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var d = _c.value;\n                        if (d != _this && typeCast(AngleAxisLabelPanel.$, d.at) !== null) {\n                            d.a2.ad();\n                        }\n                    }\n                }\n                catch (e_5_1) {\n                    e_5 = { error: e_5_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_5)\n                            throw e_5.error;\n                    }\n                }\n            }\n        };\n        a.e = function (b) {\n            b.n = _this.lj();\n            b.r = b.n;\n        };\n        a.j = function (b) {\n            var c = typeCast(PolarAxisRenderingParameters.$, b);\n            if (c.e == c.k._inner[0]) {\n                _this.lf.i(b.t, b.n, b.z, b.aa, c.center, c.minAngle, c.maxAngle);\n            }\n        };\n        a.k = function (b, c, d) {\n            var e = typeCast(PolarAxisRenderingParameters.$, b);\n            _this.lf.m(c, d, b.z, b.aa, e.minLength, e.maxLength, e.center);\n        };\n        a.l = function (b, c, d, e) {\n            var f = typeCast(PolarAxisRenderingParameters.$, b);\n            _this.lf.n(c, d, e, f.z, b.aa, f.minLength, f.maxLength, f.center);\n        };\n        a.d = function (b, c, d, e) {\n            var f = typeCast(PolarAxisRenderingParameters.$, _this.jg(b, c, d, e));\n            return f;\n        };\n        a.v = function () {\n            if (!_this.lg) {\n                _this.lg = true;\n                _this.le.cl();\n                _this.lg = false;\n            }\n        };\n        a.m = function (b, c) { return _this.getScaledAngle(c); };\n        a.o = function (b, c) { return !c.isEmpty && !b.isEmpty && _this.le != null; };\n        a.q = function (b, c) {\n            if (_this.ll(c - _this.li) < 0) {\n                return false;\n            }\n            if (_this.ll(c - _this.li - (2 * Math.PI)) > 0) {\n                return false;\n            }\n            return true;\n        };\n        a.p = function (b, c, d) {\n            var e = typeCast(PolarAxisRenderingParameters.$, b);\n            var f = _this.ls(_this.getScaledAngle(e.l), e.center, b.aa, b.z, 0);\n            var g = _this.ls(c, e.center, b.aa, b.z, 0);\n            if (d && MathUtil.e(f.x - g.x, f.y - g.y) < 2) {\n                return false;\n            }\n            if (g.x < b.z.right && g.x >= b.z.left && g.y < b.z.bottom && g.y >= b.z.top) {\n                return true;\n            }\n            return false;\n        };\n        a.r = function (b, c, d, e) {\n            if (c < b.m && typeCast(LogarithmicTickmarkValues.$, b.f) !== null) {\n                return b.m;\n            }\n            else if (c > b.l && (typeCast(LogarithmicTickmarkValues.$, b.f) !== null || b.h)) {\n                return b.l;\n            }\n            return c;\n        };\n        return a;\n    };\n    NumericAngleAxis.prototype.ls = function (a, b, c, d, e) {\n        var f = this.lj();\n        var g = ViewportUtils.b(e, c, d);\n        if (this.aw != null && (this.aw.c == 5 || this.aw.c == 1)) {\n            g *= -1;\n        }\n        var h = b.x + (f + g) * Math.cos(a);\n        var i = b.y + (f + g) * Math.sin(a);\n        h = ViewportUtils.c(h, c, d);\n        i = ViewportUtils.f(i, c, d);\n        return { $type: Point_$type, x: h, y: i };\n    };\n    NumericAngleAxis.prototype.dw = function (a, b) {\n        return this.getScaledAngle(a);\n    };\n    NumericAngleAxis.prototype.getScaledAngle1 = function (a, b, c) {\n        var d = 0;\n        if (b) {\n            d = (Math.log(a) - this.ka) / (this.j9 - this.ka);\n        }\n        else {\n            d = (a - this.j4) / (this.j3 - this.j4);\n        }\n        if (c) {\n            d = 1 - d;\n        }\n        return (d * 2 * Math.PI) + this.li;\n    };\n    NumericAngleAxis.prototype.getScaledAngle = function (a) {\n        return this.getScaledAngle1(a, this.ju, this.b9);\n    };\n    NumericAngleAxis.prototype.dz = function (a, b) {\n        return this.getUnscaledAngle(a);\n    };\n    NumericAngleAxis.prototype.getUnscaledAngle = function (a) {\n        var b = (a - this.li) / (2 * Math.PI);\n        if (this.b8) {\n            b = 1 - b;\n        }\n        if (this.ju) {\n            return Math.exp(b * (this.j9 - this.ka) + this.ka);\n        }\n        else {\n            return this.j4 + b * (this.j3 - this.j4);\n        }\n    };\n    NumericAngleAxis.prototype.gu = function (a, b, c, d) {\n        var e_6, _a, e_7, _b, e_8, _c;\n        _super.prototype.gu.call(this, a, b, c, d);\n        var e = typeCast(XamDataChart.$, this.bf);\n        switch (b) {\n            case \"CrossingAxis\":\n                var f = typeCast(NumericRadiusAxis.$, d);\n                this.lq(f);\n                if (f != null) {\n                    f.ly(this);\n                }\n                this.g6(false);\n                break;\n            case NumericAngleAxis.$$p[0]:\n                this.li = this.lm;\n                while (this.li < 0) {\n                    this.li += 360;\n                }\n                while (this.li >= 360) {\n                    this.li -= 360;\n                }\n                this.li = (this.lm * Math.PI) / 180;\n                this.g6(false);\n                try {\n                    for (var _d = tslib_1.__values(fromEnum(this.cu())), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var g = _e.value;\n                        g.jd(false);\n                        g.ik();\n                    }\n                }\n                catch (e_6_1) {\n                    e_6 = { error: e_6_1 };\n                }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_a = _d.return))\n                            _a.call(_d);\n                    }\n                    finally {\n                        if (e_6)\n                            throw e_6.error;\n                    }\n                }\n                break;\n            case \"Label\":\n                if (e != null) {\n                    try {\n                        for (var _f = tslib_1.__values(fromEnum(e.axes)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                            var h = _g.value;\n                            h.g5();\n                        }\n                    }\n                    catch (e_7_1) {\n                        e_7 = { error: e_7_1 };\n                    }\n                    finally {\n                        try {\n                            if (_g && !_g.done && (_b = _f.return))\n                                _b.call(_f);\n                        }\n                        finally {\n                            if (e_7)\n                                throw e_7.error;\n                        }\n                    }\n                }\n                break;\n            case \"CrossingValue\":\n                if (e != null) {\n                    try {\n                        for (var _h = tslib_1.__values(fromEnum(e.axes)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                            var i = _j.value;\n                            if (typeCast(NumericAngleAxis.$, i) !== null || typeCast(CategoryAngleAxis.$, i) !== null) {\n                                i.g5();\n                            }\n                        }\n                    }\n                    catch (e_8_1) {\n                        e_8 = { error: e_8_1 };\n                    }\n                    finally {\n                        try {\n                            if (_j && !_j.done && (_c = _h.return))\n                                _c.call(_h);\n                        }\n                        finally {\n                            if (e_8)\n                                throw e_8.error;\n                        }\n                    }\n                }\n                break;\n            case \"LabelSettings\":\n                this.jf = this.jd();\n                this.lo();\n                this.cg = true;\n                this.g6(false);\n                break;\n        }\n    };\n    NumericAngleAxis.prototype.lo = function () {\n        this.lh = NaN;\n    };\n    NumericAngleAxis.prototype.jh = function () {\n        return new PolarAxisRenderingParameters();\n    };\n    NumericAngleAxis.prototype.jg = function (a, b, c, d) {\n        var e = typeCast(PolarAxisRenderingParameters.$, _super.prototype.jg.call(this, a, b, c, d));\n        var f = this.lf.f(b);\n        var g = this.lf.g(b);\n        var h = 0.5 * this.le.lj;\n        var i = 0.5 * this.le.li;\n        var j = f;\n        var k = g;\n        var l = this.le.lo();\n        if (isNaN_(l) || isInfinity(l)) {\n            return null;\n        }\n        if (k >= h) {\n            k = l;\n        }\n        if (j < i) {\n            j = i;\n        }\n        var m = a.width;\n        this.lf.k(b, e, this.j4, this.j3, this.b8, runOn(this, this.getUnscaledAngle), m);\n        var n = { $type: Point_$type, x: 0.5, y: 0.5 };\n        e.center = n;\n        e.maxLength = k;\n        e.minLength = j;\n        e.effectiveMaximum = l;\n        return e;\n    };\n    NumericAngleAxis.prototype.getMinMaxAngle = function (a, b, c) {\n        var d = this.lf.l(a, b, c);\n        b = d.p1;\n        c = d.p2;\n        return {\n            p1: b,\n            p2: c\n        };\n    };\n    NumericAngleAxis.prototype.g7 = function (a) {\n        _super.prototype.g7.call(this, a);\n        var b = this.bf != null ? this.bf.mq : Rect.empty;\n        var c = !b.isEmpty ? this.i1 : Rect.empty;\n        var d = this.iw();\n        var e = this.iv();\n        var f = this.jf.c(a, c, b, d, e);\n        if (f != null) {\n            this.j2 = f.f.m;\n            this.j5 = f.f.l;\n        }\n    };\n    Object.defineProperty(NumericAngleAxis.prototype, \"le\", {\n        get: function () {\n            if (this.ld != null) {\n                return this.ld;\n            }\n            var a = typeCast(XamDataChart.$, this.bf);\n            if (a != null) {\n                for (var b = 0; b < a.axes.count; b++) {\n                    if (a.axes._inner[b].cc) {\n                        return a.axes._inner[b];\n                    }\n                }\n            }\n            return this.ld;\n        },\n        set: function (a) {\n            this.ld = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericAngleAxis.prototype.ah = function () {\n        return this.le;\n    };\n    NumericAngleAxis.prototype.lq = function (a) {\n        this.le = a;\n    };\n    NumericAngleAxis.prototype.hh = function (a, b) {\n        _super.prototype.hh.call(this, a, b);\n        if (b.height != a.height || b.width != a.width) {\n            this.cl();\n        }\n    };\n    NumericAngleAxis.prototype.get_az = function () {\n        return 2;\n    };\n    Object.defineProperty(NumericAngleAxis.prototype, \"az\", {\n        get: function () {\n            return this.get_az();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericAngleAxis.prototype.it = function (a, b, c, d, e) {\n        if (d === void 0) {\n            d = null;\n        }\n        if (e === void 0) {\n            e = null;\n        }\n        if (this.le == null) {\n            return null;\n        }\n        var f = typeCast(PolarAxisRenderingParameters.$, this.jg(c, b, d, e));\n        if (f == null) {\n            return null;\n        }\n        var g = Math.cos(a);\n        var h = Math.sin(a);\n        var i = f.center.x + g * f.minLength;\n        var j = f.center.y + h * f.minLength;\n        var k = f.center.x + g * f.maxLength;\n        var l = f.center.y + h * f.maxLength;\n        i = ViewportUtils.c(i, b, c);\n        j = ViewportUtils.f(j, b, c);\n        k = ViewportUtils.c(k, b, c);\n        l = ViewportUtils.f(l, b, c);\n        var m = new LineGeometry();\n        m.d = { $type: Point_$type, x: i, y: j };\n        m.c = { $type: Point_$type, x: k, y: l };\n        return m;\n    };\n    NumericAngleAxis.$t = markType(NumericAngleAxis, 'NumericAngleAxis', NumericAxisBase.$, [IAngleScaler_$type]);\n    NumericAngleAxis.$$p = markDep(DependencyProperty, PropertyMetadata, NumericAngleAxis, 'g0', ['StartAngleOffset:lm:lr', [1, 0]]);\n    return NumericAngleAxis;\n}(NumericAxisBase));\nexport { NumericAngleAxis };\n/**\n * @hidden\n */\nvar NumericRadiusAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NumericRadiusAxis, _super);\n    function NumericRadiusAxis() {\n        var _this = _super.call(this) || this;\n        _this.lf = null;\n        _this.lg = false;\n        _this.lh = NaN;\n        _this.lj = 0;\n        _this.li = 0;\n        _this.ll = 0;\n        _this.lc = null;\n        _this.ab = NumericRadiusAxis.$;\n        _this.lj = _this.lt;\n        _this.li = _this.ls;\n        _this.lf = new PolarAxisRenderingManager();\n        _this.jf = _this.jd();\n        return _this;\n    }\n    NumericRadiusAxis.prototype.a1 = function () {\n        return new NumericRadiusAxisView(this);\n    };\n    NumericRadiusAxis.prototype.gs = function (a) {\n        _super.prototype.gs.call(this, a);\n        this.le = a;\n    };\n    NumericRadiusAxis.prototype.get_cc = function () {\n        return true;\n    };\n    NumericRadiusAxis.prototype.dv = function () {\n        var a = this.lj;\n        var b = this.li;\n        var c = Math.min(this.ln(), this.lm()) * (a - b) / 2;\n        c = Math.max(c, 14);\n        return c;\n    };\n    NumericRadiusAxis.prototype.ln = function () {\n        return this.i1.width;\n    };\n    NumericRadiusAxis.prototype.lm = function () {\n        return this.i1.height;\n    };\n    NumericRadiusAxis.prototype.as = function () {\n        return new RadialAxisLabelPanel();\n    };\n    NumericRadiusAxis.prototype.lk = function (a) {\n        if (a == null) {\n            return 0;\n        }\n        return a;\n    };\n    NumericRadiusAxis.prototype.jd = function () {\n        var _this = this;\n        var a = _super.prototype.jd.call(this);\n        a.b.c = function (b) {\n            if ((_this.aw == null || _this.aw.visibility == 0) && _this.ld != null) {\n                if ((_this.aw == null || (_this.aw.c == 4 || _this.aw.c == 5)) && _this.lh != b) {\n                    _this.lh = b;\n                    _this.at.a8 = b;\n                    _this.bf.ht();\n                }\n            }\n        };\n        a.k = function (b, c, d) {\n            var e = typeCast(PolarAxisRenderingParameters.$, b);\n            _this.lf.i(c, d, e.z, e.aa, e.center, e.minAngle, e.maxAngle);\n        };\n        a.l = function (b, c, d, e) {\n            if (d == e) {\n                return;\n            }\n            var f = typeCast(PolarAxisRenderingParameters.$, b);\n            _this.lf.j(c, d, e, f.z, f.aa, f.center, f.minAngle, f.maxAngle);\n        };\n        a.m = function (b, c) { return _this.lp(c); };\n        a.q = function (b, c) {\n            var d = typeCast(PolarAxisRenderingParameters.$, b);\n            return c <= d.effectiveMaximum;\n        };\n        a.n = function (b, c) {\n            var d = typeCast(PolarAxisRenderingParameters.$, b);\n            return c <= d.effectiveMaximum;\n        };\n        a.j = function (b) {\n            var c = typeCast(PolarAxisRenderingParameters.$, b);\n            _this.lf.m(b.t, c.crossingAngleRadians, b.z, b.aa, c.minLength, c.maxLength, c.center);\n        };\n        a.e = function (b) {\n            b.n = _this.aw == null || (_this.aw.c == 4 || _this.aw.c == 0) ? b.z.top : b.z.bottom;\n            b.r = b.n;\n            var c = typeCast(PolarAxisRenderingParameters.$, b);\n            c.crossingAngleRadians = (_this.lk(_this.e2) * Math.PI) / 180;\n            if (_this.aw == null || (_this.aw.c == 4 || _this.aw.c == 5)) {\n                c.n = ViewportUtils.f(0.5, c.aa, c.z) - b.z.top;\n                c.r = c.n;\n                var d = typeCast(RadialAxisLabelPanel.$, _this.at);\n                if (d != null) {\n                    var e = 0;\n                    if (_this.aw != null && _this.aw.c == 4) {\n                        e = 1;\n                    }\n                    d.dh = { $type: Point_$type, x: ViewportUtils.c(0.5, c.aa, c.z), y: e };\n                    d.de = c.crossingAngleRadians;\n                }\n            }\n        };\n        a.p = function (b, c, d) {\n            var e = typeCast(PolarAxisRenderingParameters.$, b);\n            if (_this.ld == null) {\n                return false;\n            }\n            if (c > e.effectiveMaximum) {\n                return false;\n            }\n            var f = false;\n            f = _this.aw == null || (_this.aw.c == 4 || _this.aw.c == 5);\n            var g = 0;\n            if (f) {\n                g = _this.ll;\n            }\n            var h = e.center.x + c * Math.cos(g);\n            var i = e.center.y + c * Math.sin(g);\n            h = ViewportUtils.c(h, e.aa, e.z);\n            i = ViewportUtils.f(i, e.aa, e.z);\n            if (h <= b.z.right && h >= b.z.left && ((i <= b.z.bottom && i >= b.z.top) || !f)) {\n                return true;\n            }\n            return false;\n        };\n        a.h = function (b, c) {\n            var d = typeCast(PolarAxisRenderingParameters.$, b);\n            return new LabelPosition(ViewportUtils.c(d.center.x + c, d.aa, d.z));\n        };\n        a.r = function (b, c, d, e) {\n            if (c < b.m) {\n                return b.m;\n            }\n            else if (c > b.l) {\n                return b.l;\n            }\n            return c;\n        };\n        return a;\n    };\n    NumericRadiusAxis.prototype.dw = function (a, b) {\n        return this.lp(a);\n    };\n    NumericRadiusAxis.prototype.lq = function (a, b, c, d, e) {\n        var f = 0;\n        if (b) {\n            if (a <= 0) {\n                f = (Math.log(this.j4) - this.ka) / (this.j9 - this.ka);\n            }\n            else {\n                f = (Math.log(a) - this.ka) / (this.j9 - this.ka);\n            }\n        }\n        else {\n            f = (a - this.j4) / (this.j3 - this.j4);\n        }\n        if (c) {\n            f = 1 - f;\n        }\n        f = e + (f * (d - e));\n        f /= 2;\n        return f;\n    };\n    NumericRadiusAxis.prototype.lp = function (a) {\n        return this.lq(a, this.ju, this.b9, this.lj, this.li);\n    };\n    NumericRadiusAxis.prototype.lr = function (a) {\n        var b = a * 2;\n        b = (b - this.li) / (this.lj - this.li);\n        if (this.b8) {\n            b = 1 - b;\n        }\n        if (this.ju) {\n            return Math.exp(b * (this.j9 - this.ka) + this.ka);\n        }\n        else {\n            return this.j4 + b * (this.j3 - this.j4);\n        }\n    };\n    NumericRadiusAxis.prototype.dz = function (a, b) {\n        return this.lr(a);\n    };\n    NumericRadiusAxis.prototype.gu = function (a, b, c, d) {\n        var e_9, _a, e_10, _b;\n        switch (b) {\n            case \"CrossingValue\":\n                this.ll = this.lk(this.e2) * Math.PI / 180;\n                break;\n        }\n        _super.prototype.gu.call(this, a, b, c, d);\n        switch (b) {\n            case NumericRadiusAxis.$$p[1]:\n                this.lj = this.lt;\n                if (this.lj < 0) {\n                    this.lj = 0.1;\n                }\n                if (this.lj > 1) {\n                    this.lj = 1;\n                }\n                if (this.li >= this.lj) {\n                    this.li = this.lj - 0.01;\n                    if (this.li < 0) {\n                        this.li = 0;\n                        this.lj = 0.01;\n                    }\n                }\n                this.cg = true;\n                this.g6(false);\n                if (this.ld != null) {\n                    this.ld.g5();\n                }\n                try {\n                    for (var _c = tslib_1.__values(fromEnum(this.cu())), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var e = _d.value;\n                        e.jd(false);\n                    }\n                }\n                catch (e_9_1) {\n                    e_9 = { error: e_9_1 };\n                }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return))\n                            _a.call(_c);\n                    }\n                    finally {\n                        if (e_9)\n                            throw e_9.error;\n                    }\n                }\n                break;\n            case NumericRadiusAxis.$$p[0]:\n                this.li = this.ls;\n                if (this.li < 0) {\n                    this.li = 0.1;\n                }\n                if (this.li > 1) {\n                    this.li = 1;\n                }\n                if (this.li >= this.lj) {\n                    this.li = this.lj - 0.01;\n                    if (this.li < 0) {\n                        this.li = 0;\n                        this.lj = 0.01;\n                    }\n                }\n                this.cg = true;\n                this.g6(false);\n                if (this.ld != null) {\n                    this.ld.g5();\n                }\n                try {\n                    for (var _e = tslib_1.__values(fromEnum(this.cu())), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var f = _f.value;\n                        f.dl = true;\n                        f.jd(false);\n                    }\n                }\n                catch (e_10_1) {\n                    e_10 = { error: e_10_1 };\n                }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return))\n                            _b.call(_e);\n                    }\n                    finally {\n                        if (e_10)\n                            throw e_10.error;\n                    }\n                }\n                if (this.bf != null) {\n                    this.bf.h1();\n                }\n                break;\n            case \"CrossingAxis\":\n                var g = typeCast(NumericAngleAxis.$, d);\n                var h = typeCast(CategoryAngleAxis.$, d);\n                if (g == null && h == null) {\n                    this.ly(null);\n                }\n                if (g != null) {\n                    this.ly(g);\n                    g.lq(this);\n                }\n                if (h != null) {\n                    this.ly(h);\n                    h.ls(this);\n                }\n                this.cg = true;\n                this.g6(false);\n                break;\n            case \"IsInverted\":\n                if (this.ld != null) {\n                    this.ld.cg = true;\n                    this.ld.g6(false);\n                }\n                break;\n        }\n    };\n    NumericRadiusAxis.prototype.ly = function (a) {\n        this.ld = a;\n    };\n    Object.defineProperty(NumericRadiusAxis.prototype, \"ld\", {\n        get: function () {\n            if (this.lc != null) {\n                return this.lc;\n            }\n            var a = typeCast(XamDataChart.$, this.bf);\n            if (a != null) {\n                for (var b = 0; b < a.axes.count; b++) {\n                    if (typeCast(NumericAngleAxis.$, a.axes._inner[b]) !== null || typeCast(CategoryAngleAxis.$, a.axes._inner[b]) !== null) {\n                        return a.axes._inner[b];\n                    }\n                }\n            }\n            return this.lc;\n        },\n        set: function (a) {\n            this.lc = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericRadiusAxis.prototype.ah = function () {\n        return this.ld;\n    };\n    NumericRadiusAxis.prototype.jh = function () {\n        return new PolarAxisRenderingParameters();\n    };\n    NumericRadiusAxis.prototype.jg = function (a, b, c, d) {\n        var e = typeCast(PolarAxisRenderingParameters.$, _super.prototype.jg.call(this, a, b, c, d));\n        var f = this.lf.f(b);\n        var g = this.lf.g(b);\n        var h = 0.5 * this.lj;\n        var i = 0.5 * this.li;\n        var j, k;\n        if (Rect.l_op_Equality(b, SeriesViewer.m0)) {\n            k = this.j3;\n            j = this.j4;\n        }\n        else {\n            k = Math.min(g, h);\n            j = this.lr(f);\n            k = this.lr(k);\n            var l = this.lz(a, b, j, k);\n            j = l.p2;\n            k = l.p3;\n        }\n        var m = { $type: Point_$type, x: 0.5, y: 0.5 };\n        var n = f;\n        var o = g;\n        var p = Math.min(a.width, a.height) * (this.lj - this.li) / 2;\n        e.center = m;\n        var q = Math.max(o, n);\n        var r = Math.min(n, o);\n        e.maxLength = q;\n        e.minLength = r;\n        var s = Math.min(j, k);\n        var t = Math.max(j, k);\n        if (s < this.j4) {\n            s = this.j4;\n        }\n        if (t > this.j3) {\n            t = this.j3;\n        }\n        this.j7 = s;\n        this.j6 = t;\n        e.k.add(((function () {\n            var $ret = new RangeInfo();\n            $ret.d = s;\n            $ret.c = t;\n            $ret.b = p;\n            return $ret;\n        })()));\n        var u = typeCast(IAngleScaler_$type, this.ld);\n        if (u != null) {\n            var v = void 0;\n            var w = void 0;\n            var x = u.getMinMaxAngle(b, v, w);\n            v = x.p1;\n            w = x.p2;\n            e.minAngle = Math.min(v, w);\n            e.maxAngle = Math.max(v, w);\n        }\n        var y = this.lo();\n        if (o >= h) {\n            o = y;\n        }\n        if (n < i) {\n            n = i;\n        }\n        e.minLength = n;\n        e.maxLength = o;\n        e.effectiveMaximum = y;\n        e.f = this.jk;\n        var z = typeCast(LinearTickmarkValues.$, e.f);\n        if (z != null) {\n            z.y = this.lu(m, e.minLength, e.maxLength, b, a);\n        }\n        return e;\n    };\n    NumericRadiusAxis.prototype.lz = function (a, b, c, d) {\n        var e = { $type: Point_$type, x: 0.5, y: 0.5 };\n        var f = 0;\n        if (this.b8) {\n            f = this.lp(this.j4);\n        }\n        else {\n            f = this.lp(this.j3);\n        }\n        var g = 0;\n        if (this.e2 != null) {\n            g = this.ll;\n        }\n        var h = e.x + f * Math.cos(g);\n        var i = e.y + f * Math.sin(g);\n        e.x = ViewportUtils.c(e.x, b, a);\n        e.y = ViewportUtils.f(e.y, b, a);\n        h = ViewportUtils.c(h, b, a);\n        i = ViewportUtils.f(i, b, a);\n        if (h >= a.left && h <= a.right && i >= a.top && i <= a.bottom) {\n            if (this.b8) {\n                d = this.j4;\n            }\n            else {\n                d = this.j3;\n            }\n        }\n        if (e.x >= a.left && e.x <= a.right && e.y >= a.top && e.y <= a.bottom) {\n            if (this.b8) {\n                c = this.j3;\n            }\n            else {\n                c = this.j4;\n            }\n        }\n        return {\n            p2: c,\n            p3: d\n        };\n    };\n    NumericRadiusAxis.prototype.lu = function (a, b, c, d, e) {\n        var f = ViewportUtils.d(c - b, d, e);\n        var g = f / Math.min(e.width, e.height);\n        if (g > 0.7) {\n            return 10;\n        }\n        return 5;\n    };\n    NumericRadiusAxis.prototype.lo = function () {\n        var a = 0;\n        if (!this.b8) {\n            a = this.lp(this.j3);\n        }\n        else {\n            a = this.lp(this.j4);\n        }\n        return a;\n    };\n    NumericRadiusAxis.prototype.k2 = function (a) {\n        if (this.ld != null) {\n            this.ld.g5();\n        }\n    };\n    NumericRadiusAxis.prototype.g7 = function (a) {\n        _super.prototype.g7.call(this, a);\n        var b = this.bf != null ? this.bf.mq : Rect.empty;\n        var c = !b.isEmpty ? this.i1 : Rect.empty;\n        var d = this.iw();\n        var e = this.iv();\n        var f = this.jf.c(a, c, b, d, e);\n        if (f != null) {\n            this.j2 = f.f.m;\n            this.j5 = f.f.l;\n        }\n    };\n    NumericRadiusAxis.prototype.hh = function (a, b) {\n        _super.prototype.hh.call(this, a, b);\n        if (b.height != a.height || b.width != a.width) {\n            this.cl();\n        }\n    };\n    NumericRadiusAxis.prototype.lx = function (a, b, c, d, e) {\n        var f = typeCast(IPolarRadialRenderingParameters_$type, this.jg(b, c, d, e));\n        if (f == null) {\n            return;\n        }\n        this.lf.j(a.d, f.minLength, f.maxLength, b, c, f.center, f.minAngle, f.maxAngle);\n    };\n    NumericRadiusAxis.prototype.get_az = function () {\n        return 3;\n    };\n    Object.defineProperty(NumericRadiusAxis.prototype, \"az\", {\n        get: function () {\n            return this.get_az();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericRadiusAxis.prototype.it = function (a, b, c, d, e) {\n        if (d === void 0) {\n            d = null;\n        }\n        if (e === void 0) {\n            e = null;\n        }\n        var f = typeCast(PolarAxisRenderingParameters.$, this.jg(c, b, d, e));\n        var g = a;\n        var h = new PathGeometry();\n        var i = ViewportUtils.d(g, b, c);\n        var j = ViewportUtils.g(g, b, c);\n        if (i <= 0 || j <= 0) {\n            return null;\n        }\n        var k = ViewportUtils.c(f.center.x, b, c);\n        var l = ViewportUtils.f(f.center.y, b, c);\n        if (f.maxAngle - f.minAngle < Math.PI && f.maxAngle - f.minAngle > 0) {\n            var m = { $type: Point_$type, x: ViewportUtils.c(f.center.x + g * Math.cos(f.minAngle), b, c), y: ViewportUtils.f(f.center.y + g * Math.sin(f.minAngle), b, c) };\n            var n_1 = { $type: Point_$type, x: ViewportUtils.c(f.center.x + g * Math.cos(f.maxAngle), b, c), y: ViewportUtils.f(f.center.y + g * Math.sin(f.maxAngle), b, c) };\n            var o = new PathFigure();\n            o._startPoint = m;\n            o._isClosed = false;\n            o._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.b = false;\n                $ret.e = n_1;\n                $ret.f = new Size(1, i, j);\n                $ret.d = 1;\n                return $ret;\n            })()));\n            h.c.add(o);\n        }\n        else {\n            var p = new PathFigure();\n            p._startPoint = { $type: Point_$type, x: k, y: l - j };\n            p._isClosed = true;\n            p._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.b = false;\n                $ret.e = { $type: Point_$type, x: k, y: l + j };\n                $ret.f = new Size(1, i, j);\n                $ret.d = 1;\n                return $ret;\n            })()));\n            p._segments.add(((function () {\n                var $ret = new ArcSegment();\n                $ret.b = false;\n                $ret.e = { $type: Point_$type, x: k, y: l - j };\n                $ret.f = new Size(1, i, j);\n                $ret.d = 1;\n                return $ret;\n            })()));\n            h.c.add(p);\n        }\n        return h;\n    };\n    NumericRadiusAxis.$t = markType(NumericRadiusAxis, 'NumericRadiusAxis', NumericAxisBase.$);\n    NumericRadiusAxis.$$p = markDep(DependencyProperty, PropertyMetadata, NumericRadiusAxis, 'g0', ['InnerRadiusExtentScale:ls:l0', [1, 0], 'RadiusExtentScale:lt:l1', [1, 0.75]]);\n    return NumericRadiusAxis;\n}(NumericAxisBase));\nexport { NumericRadiusAxis };\n/**\n * @hidden\n */\nvar AngleAxisLabelPanelView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AngleAxisLabelPanelView, _super);\n    function AngleAxisLabelPanelView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.ax = null;\n        _this.ax = a;\n        return _this;\n    }\n    AngleAxisLabelPanelView.prototype.am = function () {\n        _super.prototype.am.call(this);\n        this.ax.ct = true;\n    };\n    AngleAxisLabelPanelView.prototype.ay = function (a, b) {\n        this.ax.cx = -1.7976931348623157E+308;\n        this.ax.cu = -1.7976931348623157E+308;\n        this.ax.cw = -1.7976931348623157E+308;\n        this.ax.cv = -1.7976931348623157E+308;\n        for (var c = 0; c < this.a.a3.count; c++) {\n            var d = this.a.a3._inner[c];\n            var e = this.a.a2._inner[c];\n            var f = e.a;\n            var g = this.ax.cz(e.c);\n            var h = this.m(d);\n            var i = this.l(d);\n            var j = h + this.p() + this.q();\n            var k = i + this.r() + this.o();\n            var l = g.x - j / 2;\n            var m = g.y - k / 2;\n            this.ax.cw = Math.max(h, this.ax.cw);\n            this.ax.cv = Math.max(i, this.ax.cv);\n            this.ax.cx = Math.max(j, this.ax.cx);\n            this.ax.cu = Math.max(k, this.ax.cu);\n            var n = new Rect(0, l, m, j, k);\n            a.add(n);\n            b.add(f);\n        }\n    };\n    AngleAxisLabelPanelView.prototype.o = function () {\n        return 0;\n    };\n    AngleAxisLabelPanelView.prototype.p = function () {\n        return 0;\n    };\n    AngleAxisLabelPanelView.prototype.q = function () {\n        return 0;\n    };\n    AngleAxisLabelPanelView.prototype.r = function () {\n        return 0;\n    };\n    AngleAxisLabelPanelView.$t = markType(AngleAxisLabelPanelView, 'AngleAxisLabelPanelView', AxisLabelPanelBaseView.$);\n    return AngleAxisLabelPanelView;\n}(AxisLabelPanelBaseView));\nexport { AngleAxisLabelPanelView };\n/**\n * @hidden\n */\nvar CategoryAngleAxisView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CategoryAngleAxisView, _super);\n    function CategoryAngleAxisView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.bg = null;\n        _this.bg = a;\n        return _this;\n    }\n    CategoryAngleAxisView.$t = markType(CategoryAngleAxisView, 'CategoryAngleAxisView', CategoryAxisBaseView.$);\n    return CategoryAngleAxisView;\n}(CategoryAxisBaseView));\nexport { CategoryAngleAxisView };\n/**\n * @hidden\n */\nvar NumericAngleAxisView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NumericAngleAxisView, _super);\n    function NumericAngleAxisView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.bg = null;\n        _this.bg = a;\n        return _this;\n    }\n    NumericAngleAxisView.$t = markType(NumericAngleAxisView, 'NumericAngleAxisView', NumericAxisBaseView.$);\n    return NumericAngleAxisView;\n}(NumericAxisBaseView));\nexport { NumericAngleAxisView };\n/**\n * @hidden\n */\nvar NumericRadiusAxisView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NumericRadiusAxisView, _super);\n    function NumericRadiusAxisView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.bg = null;\n        _this.bg = a;\n        return _this;\n    }\n    NumericRadiusAxisView.$t = markType(NumericRadiusAxisView, 'NumericRadiusAxisView', NumericAxisBaseView.$);\n    return NumericRadiusAxisView;\n}(NumericAxisBaseView));\nexport { NumericRadiusAxisView };\n//# sourceMappingURL=AngleAxisLabelPanel_combined.js.map\n"]},"metadata":{},"sourceType":"module"}