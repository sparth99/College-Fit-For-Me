{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove, TypeRegistrar } from \"igniteui-react-core\";\nimport { isValidProp, getModifiedProps, toPoint, ensureBool, NamePatcher } from \"igniteui-react-core\";\nimport { IgrStackedSeriesCreatedEventArgs } from './igr-stacked-series-created-event-args';\nimport { IgrCategorySeries } from './igr-category-series';\nimport { NotifyCollectionChangedAction } from \"igniteui-react-core\";\nimport { CollectionAdapter } from \"igniteui-react-core\";\nimport { ContentChildrenManager } from \"igniteui-react-core\";\nimport { IgrStackedSeriesCollection } from './igr-stacked-series-collection';\n/**\n * Represents a base class for stacked series.\n*/\n\nvar IgrStackedSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrStackedSeriesBase, _super);\n\n  function IgrStackedSeriesBase(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * The series actually present in the chart. Do not directly modify this array.\n     * This array's contents can be modified by causing React to reproject the child content.\n     * Or adding and removing series from the manual series collection on the series property.\n     */\n\n\n    _this.actualSeries = [];\n    _this.contentSeries = [];\n    _this._series = null;\n    _this._seriesAdapter = null;\n    _this._seriesCreated = null;\n    _this._seriesCreated_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._seriesAdapter = new CollectionAdapter(_this.contentSeries, _this.i.series, _this.actualSeries, function (c) {\n      return c.i;\n    }, function (i) {\n      i.owner = _this;\n      i.provideRenderer(_this._renderer); // i.provideData(this._dataSource);\n      // i.bindAxes(this.actualAxes);\n      // this._ensureDefaultTooltip(i);\n      // this._ensureTooltipCreated(i);\n    }, function (i) {\n      i.provideRenderer(null); // i.provideData(null); \n    });\n    _this._contentChildrenManager = new ContentChildrenManager(function (ch) {\n      return ch.key || ch.props.name;\n    }, function (ch) {\n      return ch.key || ch.props.name;\n    }, function () {\n      return _this._updateContentChildren();\n    });\n    return _this;\n  }\n\n  IgrStackedSeriesBase.prototype.createImplementation = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrStackedSeriesBase.prototype.initializeProperties = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrStackedSeriesBase.prototype.componentDidMount = function () {\n    this.initializeProperties();\n  };\n\n  IgrStackedSeriesBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrStackedSeriesBase.prototype.render = function () {\n    var children = this._contentChildrenManager.getChildren(this.props.children);\n\n    var div = React.createElement(\"div\", {\n      children: children\n    });\n    return div;\n  };\n\n  IgrStackedSeriesBase._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  IgrStackedSeriesBase.prototype._updateContentChildren = function () {\n    this.contentSeries.length = 0;\n    var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;\n\n    for (var i = 0; i < contentChildrenActual.length; i++) {\n      this.contentSeries.push(contentChildrenActual[i]);\n    }\n\n    if (this._seriesAdapter !== null) {\n      this._seriesAdapter.notifyContentChanged();\n    }\n  };\n\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"series\", {\n    /**\n     * A collection or manually added series for the chart.\n    */\n    get: function () {\n      var _this = this;\n\n      if (this._series === null) {\n        var coll = new IgrStackedSeriesCollection();\n        var inner = coll._innerColl;\n        inner.addListener(function (sender, e) {\n          switch (e.action) {\n            case NotifyCollectionChangedAction.Add:\n              _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n\n              break;\n\n            case NotifyCollectionChangedAction.Remove:\n              _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n\n              break;\n\n            case NotifyCollectionChangedAction.Replace:\n              _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n\n              _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n\n              break;\n\n            case NotifyCollectionChangedAction.Reset:\n              _this._seriesAdapter.clearManualItems();\n\n              break;\n          }\n        });\n        this._series = coll;\n      }\n\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrStackedSeriesBase.prototype._provideRenderer = function (renderer) {\n    this._renderer = renderer;\n\n    if (this.actualSeries != null) {\n      for (var i = 0; i < this.actualSeries.length; i++) {\n        this.actualSeries[i].provideRenderer(renderer);\n      }\n    }\n  };\n\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"autoGenerateSeries\", {\n    /**\n    * Gets or sets whether series should be automatically generated. Reqiures the use of GroupBy as the ItemsSource.\n    */\n    get: function () {\n      return this.i.o5;\n    },\n    set: function (v) {\n      this.i.o5 = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"reverseLegendOrder\", {\n    /**\n     * Gets or sets whether the order of the fragment series should be reversed in the legend.\n    */\n    get: function () {\n      return this.i.o6;\n    },\n    set: function (v) {\n      this.i.o6 = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"isStacked\", {\n    /**\n     * Checks if this series is a stacked series\n    */\n    get: function () {\n      return this.i.isStacked;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n  * Simulates a pointer hover over the series surface.\n  * @param point  * The pointer position relative to the series viewport over which to hover.\n  */\n\n  IgrStackedSeriesBase.prototype.simulateHover = function (point) {\n    this.i.jk(toPoint(point));\n  };\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  */\n\n\n  IgrStackedSeriesBase.prototype.scrollIntoView = function (item) {\n    var iv = this.i.c9(item);\n    return iv;\n  };\n\n  Object.defineProperty(IgrStackedSeriesBase.prototype, \"seriesCreated\", {\n    /**\n     * Event raised when a new fragment series is automatically generated.\n    */\n    get: function () {\n      return this._seriesCreated;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._seriesCreated_wrapped !== null) {\n        this.i.seriesCreated = delegateRemove(this.i.seriesCreated, this._seriesCreated_wrapped);\n        this._seriesCreated_wrapped = null;\n        this._seriesCreated = null;\n      }\n\n      this._seriesCreated = ev;\n\n      this._seriesCreated_wrapped = function (o, e) {\n        var outerArgs = new IgrStackedSeriesCreatedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSeriesCreated) {\n          _this.beforeSeriesCreated(_this, outerArgs);\n        }\n\n        if (_this._seriesCreated) {\n          _this._seriesCreated(_this, outerArgs);\n        }\n      };\n\n      this.i.seriesCreated = delegateCombine(this.i.seriesCreated, this._seriesCreated_wrapped);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrStackedSeriesBase;\n}(IgrCategorySeries);\n\nexport { IgrStackedSeriesBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-stacked-series-base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove, TypeRegistrar } from \"igniteui-react-core\";\nimport { isValidProp, getModifiedProps, toPoint, ensureBool, NamePatcher } from \"igniteui-react-core\";\nimport { IgrStackedSeriesCreatedEventArgs } from './igr-stacked-series-created-event-args';\nimport { IgrCategorySeries } from './igr-category-series';\nimport { NotifyCollectionChangedAction } from \"igniteui-react-core\";\nimport { CollectionAdapter } from \"igniteui-react-core\";\nimport { ContentChildrenManager } from \"igniteui-react-core\";\nimport { IgrStackedSeriesCollection } from './igr-stacked-series-collection';\n/**\n * Represents a base class for stacked series.\n*/\nvar IgrStackedSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrStackedSeriesBase, _super);\n    function IgrStackedSeriesBase(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * The series actually present in the chart. Do not directly modify this array.\n         * This array's contents can be modified by causing React to reproject the child content.\n         * Or adding and removing series from the manual series collection on the series property.\n         */\n        _this.actualSeries = [];\n        _this.contentSeries = [];\n        _this._series = null;\n        _this._seriesAdapter = null;\n        _this._seriesCreated = null;\n        _this._seriesCreated_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._seriesAdapter = new CollectionAdapter(_this.contentSeries, _this.i.series, _this.actualSeries, function (c) { return c.i; }, function (i) {\n            i.owner = _this;\n            i.provideRenderer(_this._renderer);\n            // i.provideData(this._dataSource);\n            // i.bindAxes(this.actualAxes);\n            // this._ensureDefaultTooltip(i);\n            // this._ensureTooltipCreated(i);\n        }, function (i) {\n            i.provideRenderer(null);\n            // i.provideData(null); \n        });\n        _this._contentChildrenManager = new ContentChildrenManager(function (ch) { return ch.key || ch.props.name; }, function (ch) { return ch.key || ch.props.name; }, function () { return _this._updateContentChildren(); });\n        return _this;\n    }\n    IgrStackedSeriesBase.prototype.createImplementation = function () {\n        return null;\n    };\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrStackedSeriesBase.prototype.initializeProperties = function () {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrStackedSeriesBase.prototype.componentDidMount = function () {\n        this.initializeProperties();\n    };\n    IgrStackedSeriesBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrStackedSeriesBase.prototype.render = function () {\n        var children = this._contentChildrenManager.getChildren(this.props.children);\n        var div = React.createElement(\"div\", {\n            children: children\n        });\n        return div;\n    };\n    IgrStackedSeriesBase._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    IgrStackedSeriesBase.prototype._updateContentChildren = function () {\n        this.contentSeries.length = 0;\n        var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;\n        for (var i = 0; i < contentChildrenActual.length; i++) {\n            this.contentSeries.push(contentChildrenActual[i]);\n        }\n        if (this._seriesAdapter !== null) {\n            this._seriesAdapter.notifyContentChanged();\n        }\n    };\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"series\", {\n        /**\n         * A collection or manually added series for the chart.\n        */\n        get: function () {\n            var _this = this;\n            if (this._series === null) {\n                var coll = new IgrStackedSeriesCollection();\n                var inner = coll._innerColl;\n                inner.addListener(function (sender, e) {\n                    switch (e.action) {\n                        case NotifyCollectionChangedAction.Add:\n                            _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n                            break;\n                        case NotifyCollectionChangedAction.Remove:\n                            _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n                            break;\n                        case NotifyCollectionChangedAction.Replace:\n                            _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n                            _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n                            break;\n                        case NotifyCollectionChangedAction.Reset:\n                            _this._seriesAdapter.clearManualItems();\n                            break;\n                    }\n                });\n                this._series = coll;\n            }\n            return this._series;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrStackedSeriesBase.prototype._provideRenderer = function (renderer) {\n        this._renderer = renderer;\n        if (this.actualSeries != null) {\n            for (var i = 0; i < this.actualSeries.length; i++) {\n                this.actualSeries[i].provideRenderer(renderer);\n            }\n        }\n    };\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"autoGenerateSeries\", {\n        /**\n     * Gets or sets whether series should be automatically generated. Reqiures the use of GroupBy as the ItemsSource.\n    */\n        get: function () {\n            return this.i.o5;\n        },\n        set: function (v) {\n            this.i.o5 = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"reverseLegendOrder\", {\n        /**\n         * Gets or sets whether the order of the fragment series should be reversed in the legend.\n        */\n        get: function () {\n            return this.i.o6;\n        },\n        set: function (v) {\n            this.i.o6 = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"isStacked\", {\n        /**\n         * Checks if this series is a stacked series\n        */\n        get: function () {\n            return this.i.isStacked;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n * Simulates a pointer hover over the series surface.\n\r\n* @param point  * The pointer position relative to the series viewport over which to hover.\n*/\n    IgrStackedSeriesBase.prototype.simulateHover = function (point) {\n        this.i.jk(toPoint(point));\n    };\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    */\n    IgrStackedSeriesBase.prototype.scrollIntoView = function (item) {\n        var iv = this.i.c9(item);\n        return (iv);\n    };\n    Object.defineProperty(IgrStackedSeriesBase.prototype, \"seriesCreated\", {\n        /**\n         * Event raised when a new fragment series is automatically generated.\n        */\n        get: function () {\n            return this._seriesCreated;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._seriesCreated_wrapped !== null) {\n                this.i.seriesCreated = delegateRemove(this.i.seriesCreated, this._seriesCreated_wrapped);\n                this._seriesCreated_wrapped = null;\n                this._seriesCreated = null;\n            }\n            this._seriesCreated = ev;\n            this._seriesCreated_wrapped = function (o, e) {\n                var outerArgs = new IgrStackedSeriesCreatedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSeriesCreated) {\n                    _this.beforeSeriesCreated(_this, outerArgs);\n                }\n                if (_this._seriesCreated) {\n                    _this._seriesCreated(_this, outerArgs);\n                }\n            };\n            this.i.seriesCreated = delegateCombine(this.i.seriesCreated, this._seriesCreated_wrapped);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrStackedSeriesBase;\n}(IgrCategorySeries));\nexport { IgrStackedSeriesBase };\n//# sourceMappingURL=igr-stacked-series-base.js.map\n"]},"metadata":{},"sourceType":"module"}