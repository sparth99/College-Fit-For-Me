{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { RectData } from \"igniteui-react-core\";\nimport { LabelAppearanceData } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ChartTitleVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ChartTitleVisualData, _super);\n\n  function ChartTitleVisualData() {\n    var _this = _super.call(this) || this;\n\n    _this._viewport = null;\n    _this._textPlotArea = null;\n    _this._appearance = null;\n    _this.appearance = new LabelAppearanceData();\n    return _this;\n  }\n\n  Object.defineProperty(ChartTitleVisualData.prototype, \"width\", {\n    get: function () {\n      return this.viewport.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartTitleVisualData.prototype, \"height\", {\n    get: function () {\n      return this.viewport.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartTitleVisualData.prototype, \"viewport\", {\n    get: function () {\n      return this._viewport;\n    },\n    set: function (a) {\n      this._viewport = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartTitleVisualData.prototype, \"textPlotArea\", {\n    get: function () {\n      return this._textPlotArea;\n    },\n    set: function (a) {\n      this._textPlotArea = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartTitleVisualData.prototype, \"appearance\", {\n    get: function () {\n      return this._appearance;\n    },\n    set: function (a) {\n      this._appearance = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ChartTitleVisualData.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.u(\"{\");\n    a.u(\"viewport: \" + this.viewport.serialize() + \", \");\n    a.u(\"textPlotArea: \" + this.textPlotArea.serialize() + \", \");\n    a.u(\"appearance: \" + this.appearance.serialize());\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  ChartTitleVisualData.prototype.h = function (a) {\n    var b = (this.textPlotArea.left - a.left) / a.width;\n    var c = (this.textPlotArea.top - a.top) / a.height;\n    var d = this.textPlotArea.width / a.width;\n    var e = this.textPlotArea.height / a.height;\n    this.textPlotArea = new RectData(b, c, d, e);\n  };\n\n  ChartTitleVisualData.prototype.g = function () {\n    var a = (this.textPlotArea.left - this.viewport.left) / this.viewport.width;\n    var b = (this.textPlotArea.top - this.viewport.top) / this.viewport.height;\n    var c = this.textPlotArea.width / this.viewport.width;\n    var d = this.textPlotArea.height / this.viewport.height;\n    this.textPlotArea = new RectData(a, b, c, d);\n  };\n\n  ChartTitleVisualData.prototype.j = function (a) {\n    var b = this.textPlotArea.left * a.width;\n    var c = this.textPlotArea.top * a.height;\n    var d = this.textPlotArea.width * a.width;\n    var e = this.textPlotArea.height * a.height;\n    this.textPlotArea = new RectData(b, c, d, e);\n  };\n\n  ChartTitleVisualData.prototype.i = function () {\n    var a = this.textPlotArea.left * this.viewport.width;\n    var b = this.textPlotArea.top * this.viewport.height;\n    var c = this.textPlotArea.width * this.viewport.width;\n    var d = this.textPlotArea.height * this.viewport.height;\n    this.textPlotArea = new RectData(a, b, c, d);\n  };\n\n  ChartTitleVisualData.$t = markType(ChartTitleVisualData, 'ChartTitleVisualData');\n  return ChartTitleVisualData;\n}(Base);\n\nexport { ChartTitleVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ChartTitleVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { RectData } from \"igniteui-react-core\";\nimport { LabelAppearanceData } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ChartTitleVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ChartTitleVisualData, _super);\n    function ChartTitleVisualData() {\n        var _this = _super.call(this) || this;\n        _this._viewport = null;\n        _this._textPlotArea = null;\n        _this._appearance = null;\n        _this.appearance = new LabelAppearanceData();\n        return _this;\n    }\n    Object.defineProperty(ChartTitleVisualData.prototype, \"width\", {\n        get: function () {\n            return this.viewport.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartTitleVisualData.prototype, \"height\", {\n        get: function () {\n            return this.viewport.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartTitleVisualData.prototype, \"viewport\", {\n        get: function () {\n            return this._viewport;\n        },\n        set: function (a) {\n            this._viewport = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartTitleVisualData.prototype, \"textPlotArea\", {\n        get: function () {\n            return this._textPlotArea;\n        },\n        set: function (a) {\n            this._textPlotArea = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartTitleVisualData.prototype, \"appearance\", {\n        get: function () {\n            return this._appearance;\n        },\n        set: function (a) {\n            this._appearance = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartTitleVisualData.prototype.serialize = function () {\n        var a = new StringBuilder(0);\n        a.u(\"{\");\n        a.u(\"viewport: \" + this.viewport.serialize() + \", \");\n        a.u(\"textPlotArea: \" + this.textPlotArea.serialize() + \", \");\n        a.u(\"appearance: \" + this.appearance.serialize());\n        a.u(\"}\");\n        return a.toString();\n    };\n    ChartTitleVisualData.prototype.h = function (a) {\n        var b = (this.textPlotArea.left - a.left) / a.width;\n        var c = (this.textPlotArea.top - a.top) / a.height;\n        var d = this.textPlotArea.width / a.width;\n        var e = this.textPlotArea.height / a.height;\n        this.textPlotArea = new RectData(b, c, d, e);\n    };\n    ChartTitleVisualData.prototype.g = function () {\n        var a = (this.textPlotArea.left - this.viewport.left) / this.viewport.width;\n        var b = (this.textPlotArea.top - this.viewport.top) / this.viewport.height;\n        var c = this.textPlotArea.width / this.viewport.width;\n        var d = this.textPlotArea.height / this.viewport.height;\n        this.textPlotArea = new RectData(a, b, c, d);\n    };\n    ChartTitleVisualData.prototype.j = function (a) {\n        var b = this.textPlotArea.left * a.width;\n        var c = this.textPlotArea.top * a.height;\n        var d = this.textPlotArea.width * a.width;\n        var e = this.textPlotArea.height * a.height;\n        this.textPlotArea = new RectData(b, c, d, e);\n    };\n    ChartTitleVisualData.prototype.i = function () {\n        var a = this.textPlotArea.left * this.viewport.width;\n        var b = this.textPlotArea.top * this.viewport.height;\n        var c = this.textPlotArea.width * this.viewport.width;\n        var d = this.textPlotArea.height * this.viewport.height;\n        this.textPlotArea = new RectData(a, b, c, d);\n    };\n    ChartTitleVisualData.$t = markType(ChartTitleVisualData, 'ChartTitleVisualData');\n    return ChartTitleVisualData;\n}(Base));\nexport { ChartTitleVisualData };\n//# sourceMappingURL=ChartTitleVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}