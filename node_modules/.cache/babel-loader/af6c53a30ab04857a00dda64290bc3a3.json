{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrRing } from \"./igr-ring\";\nimport { IgrRingSeriesBase } from \"./igr-ring-series-base\";\nimport { RingSeries } from \"./RingSeries\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { Number_$type } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\n/**\n * Represents one ring in IgxDoughnutChartComponent series.\n*/\n\nvar IgrRingSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrRingSeries, _super);\n\n  function IgrRingSeries(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._explodedSlices = null;\n    _this._selectedSlices = null;\n    return _this;\n  }\n\n  IgrRingSeries.prototype.createImplementation = function () {\n    return new RingSeries();\n  };\n\n  Object.defineProperty(IgrRingSeries.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeries.prototype, \"explodedSlices\", {\n    /**\n     * Gets or sets the collection of exploded slice indices.\n    */\n    get: function () {\n      if (this._explodedSlices === null) {\n        var coll = new IgrIndexCollection();\n        var innerColl = void 0;\n\n        if (this.ring.i.ringControl.arcs.count == 0) {\n          innerColl = new IndexCollection_internal();\n        } else {\n          innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n        }\n\n        this._explodedSlices = coll._fromInner(innerColl);\n      }\n\n      return this._explodedSlices;\n    },\n    set: function (v) {\n      if (this._explodedSlices !== null) {\n        this._explodedSlices._setSyncTarget(null);\n\n        this._explodedSlices = null;\n      }\n\n      var coll = new IgrIndexCollection();\n      this._explodedSlices = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Number_$type);\n      var innerColl;\n\n      if (this.ring.i.ringControl.arcs.count == 0) {\n        innerColl = new IndexCollection_internal();\n      } else {\n        innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._explodedSlices._setSyncTarget(syncColl);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeries.prototype, \"selectedSlices\", {\n    /**\n     * Gets or sets the collection of selected slice indices.\n    */\n    get: function () {\n      if (this._selectedSlices === null) {\n        var coll = new IgrIndexCollection();\n        var innerColl = void 0;\n\n        if (this.ring.i.ringControl.arcs.count == 0) {\n          innerColl = new IndexCollection_internal();\n        } else {\n          innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n        }\n\n        this._selectedSlices = coll._fromInner(innerColl);\n      }\n\n      return this._selectedSlices;\n    },\n    set: function (v) {\n      if (this._selectedSlices !== null) {\n        this._selectedSlices._setSyncTarget(null);\n\n        this._selectedSlices = null;\n      }\n\n      var coll = new IgrIndexCollection();\n      this._selectedSlices = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Number_$type);\n      var innerColl;\n\n      if (this.ring.i.ringControl.arcs.count == 0) {\n        innerColl = new IndexCollection_internal();\n      } else {\n        innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._selectedSlices._setSyncTarget(syncColl);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrRingSeries.prototype.sychronizeCollections = function () {\n    if (this._explodedSlices) {\n      var inner = this._explodedSlices._inner;\n\n      if (inner && inner !== this.ring.i.ringControl.arcs.item(0).explodedSlices) {\n        this._explodedSlices._inner = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n\n        for (var i = 0; i < inner.count; i++) {\n          this._explodedSlices.add(inner.item(i));\n        }\n      }\n    }\n\n    if (this._selectedSlices) {\n      var inner = this._selectedSlices._inner;\n\n      if (inner && inner !== this.ring.i.ringControl.arcs.item(0).selectedSlices) {\n        this._selectedSlices._inner = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n\n        for (var i = 0; i < inner.count; i++) {\n          this._selectedSlices.add(inner.item(i));\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(IgrRingSeries.prototype, \"ring\", {\n    /**\n    * Gets reference to the ring data.\n    */\n    get: function () {\n      if (this.i.dx == null) {\n        return null;\n      }\n\n      if (!this.i.dx.externalObject) {\n        var e = new IgrRing();\n        e._implementation = this.i.dx;\n        this.i.dx.externalObject = e;\n      }\n\n      return this.i.dx.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.dx = null : this.i.dx = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrRingSeries;\n}(IgrRingSeriesBase);\n\nexport { IgrRingSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-ring-series.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrRing } from \"./igr-ring\";\nimport { IgrRingSeriesBase } from \"./igr-ring-series-base\";\nimport { RingSeries } from \"./RingSeries\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { Number_$type } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\n/**\n * Represents one ring in IgxDoughnutChartComponent series.\n*/\nvar IgrRingSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrRingSeries, _super);\n    function IgrRingSeries(props) {\n        var _this = _super.call(this, props) || this;\n        _this._explodedSlices = null;\n        _this._selectedSlices = null;\n        return _this;\n    }\n    IgrRingSeries.prototype.createImplementation = function () {\n        return new RingSeries();\n    };\n    Object.defineProperty(IgrRingSeries.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeries.prototype, \"explodedSlices\", {\n        /**\n         * Gets or sets the collection of exploded slice indices.\n        */\n        get: function () {\n            if (this._explodedSlices === null) {\n                var coll = new IgrIndexCollection();\n                var innerColl = void 0;\n                if (this.ring.i.ringControl.arcs.count == 0) {\n                    innerColl = new IndexCollection_internal();\n                }\n                else {\n                    innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n                }\n                this._explodedSlices = coll._fromInner(innerColl);\n            }\n            return this._explodedSlices;\n        },\n        set: function (v) {\n            if (this._explodedSlices !== null) {\n                this._explodedSlices._setSyncTarget(null);\n                this._explodedSlices = null;\n            }\n            var coll = new IgrIndexCollection();\n            this._explodedSlices = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Number_$type);\n            var innerColl;\n            if (this.ring.i.ringControl.arcs.count == 0) {\n                innerColl = new IndexCollection_internal();\n            }\n            else {\n                innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._explodedSlices._setSyncTarget(syncColl);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeries.prototype, \"selectedSlices\", {\n        /**\n         * Gets or sets the collection of selected slice indices.\n        */\n        get: function () {\n            if (this._selectedSlices === null) {\n                var coll = new IgrIndexCollection();\n                var innerColl = void 0;\n                if (this.ring.i.ringControl.arcs.count == 0) {\n                    innerColl = new IndexCollection_internal();\n                }\n                else {\n                    innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n                }\n                this._selectedSlices = coll._fromInner(innerColl);\n            }\n            return this._selectedSlices;\n        },\n        set: function (v) {\n            if (this._selectedSlices !== null) {\n                this._selectedSlices._setSyncTarget(null);\n                this._selectedSlices = null;\n            }\n            var coll = new IgrIndexCollection();\n            this._selectedSlices = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Number_$type);\n            var innerColl;\n            if (this.ring.i.ringControl.arcs.count == 0) {\n                innerColl = new IndexCollection_internal();\n            }\n            else {\n                innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._selectedSlices._setSyncTarget(syncColl);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrRingSeries.prototype.sychronizeCollections = function () {\n        if (this._explodedSlices) {\n            var inner = this._explodedSlices._inner;\n            if (inner && inner !== this.ring.i.ringControl.arcs.item(0).explodedSlices) {\n                this._explodedSlices._inner = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n                for (var i = 0; i < inner.count; i++) {\n                    this._explodedSlices.add(inner.item(i));\n                }\n            }\n        }\n        if (this._selectedSlices) {\n            var inner = this._selectedSlices._inner;\n            if (inner && inner !== this.ring.i.ringControl.arcs.item(0).selectedSlices) {\n                this._selectedSlices._inner = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n                for (var i = 0; i < inner.count; i++) {\n                    this._selectedSlices.add(inner.item(i));\n                }\n            }\n        }\n    };\n    Object.defineProperty(IgrRingSeries.prototype, \"ring\", {\n        /**\n     * Gets reference to the ring data.\n    */\n        get: function () {\n            if (this.i.dx == null) {\n                return null;\n            }\n            if (!this.i.dx.externalObject) {\n                var e = new IgrRing();\n                e._implementation = this.i.dx;\n                this.i.dx.externalObject = e;\n            }\n            return this.i.dx.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.dx = null : this.i.dx = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrRingSeries;\n}(IgrRingSeriesBase));\nexport { IgrRingSeries };\n//# sourceMappingURL=igr-ring-series.js.map\n"]},"metadata":{},"sourceType":"module"}