{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { AccumulationDistributionIndicator } from \"./AccumulationDistributionIndicator\";\n/**\n * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* You can use the `IgrAccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrAccumulationDistributionIndicator\n* \tname=\"series1\"\n* \txAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrAccumulationDistributionIndicator({name:\"series3\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrAccumulationDistributionIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrAccumulationDistributionIndicator, _super);\n\n  function IgrAccumulationDistributionIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrAccumulationDistributionIndicator.prototype.createImplementation = function () {\n    return new AccumulationDistributionIndicator();\n  };\n\n  Object.defineProperty(IgrAccumulationDistributionIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrAccumulationDistributionIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrAccumulationDistributionIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-accumulation-distribution-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,iCAAT,QAAkD,qCAAlD;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,IAAA,oCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0D,EAAA,OAAA,CAAA,SAAA,CAAA,oCAAA,EAAA,MAAA;;AAazD,WAAA,oCAAA,CAAY,KAAZ,EAA6D;WAC5D,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,oCAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,iCAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,oCAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAM7B,SAAA,oCAAA;AAAC,CAhBD,CAA0D,yBAA1D,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { AccumulationDistributionIndicator } from \"./AccumulationDistributionIndicator\";\n/**\n * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* You can use the `IgrAccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrAccumulationDistributionIndicator\n* \tname=\"series1\"\n* \txAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrAccumulationDistributionIndicator({name:\"series3\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrAccumulationDistributionIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrAccumulationDistributionIndicator, _super);\n    function IgrAccumulationDistributionIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrAccumulationDistributionIndicator.prototype.createImplementation = function () {\n        return new AccumulationDistributionIndicator();\n    };\n    Object.defineProperty(IgrAccumulationDistributionIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrAccumulationDistributionIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrAccumulationDistributionIndicator };\n//# sourceMappingURL=igr-accumulation-distribution-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}