{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ScatterFrameBase$1 } from \"./ScatterFrameBase$1\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Point_$type, typeCast, markType } from \"igniteui-react-core\";\nimport { Frame } from \"./Frame\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PolarFrame =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarFrame, _super);\n\n  function PolarFrame() {\n    var _this = _super.call(this, PolarFrame.$) || this;\n\n    _this.w = null;\n    _this.v = false;\n    _this.x = null;\n    _this.w = new List$1(Point_$type, 0);\n    _this.v = true;\n    return _this;\n  }\n\n  PolarFrame.prototype.r = function (a, b, c) {\n    var d = typeCast(PolarFrame.$, b);\n    var e = typeCast(PolarFrame.$, c);\n\n    if (d == null || e == null) {\n      return;\n    }\n\n    Frame.a(this.w, a, d.w, e.w);\n  };\n\n  PolarFrame.prototype.q = function (a, b, c, d) {\n    if (this.v) {\n      _super.prototype.q.call(this, a, b, c, d);\n    } else {\n      _super.prototype.q.call(this, a, b, c, d);\n\n      if (c != null && d != null && (c.b.x != d.b.x || c.b.y != d.b.y)) {\n        var e = 1 - b;\n        a.b = {\n          $type: Point_$type,\n          x: c.b.x * e + d.b.x * b,\n          y: c.b.y * e + d.b.y * b\n        };\n      }\n    }\n  };\n\n  PolarFrame.prototype.u = function (a) {\n    return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\n  };\n\n  PolarFrame.prototype.t = function (a, b, c, d) {\n    if (this.v) {\n      _super.prototype.t.call(this, a, b, c, d);\n    } else {\n      if (c != null && d != null && (c.c.x != d.c.x || c.c.y != d.c.y) && this.u(a.b)) {\n        a.c = this.x(a.b);\n      } else {\n        _super.prototype.t.call(this, a, b, c, d);\n      }\n    }\n  };\n\n  PolarFrame.$t = markType(PolarFrame, 'PolarFrame', ScatterFrameBase$1.$.specialize(-1)).initSelfReferences();\n  return PolarFrame;\n}(ScatterFrameBase$1);\n\nexport { PolarFrame };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PolarFrame.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ScatterFrameBase$1 } from \"./ScatterFrameBase$1\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Point_$type, typeCast, markType } from \"igniteui-react-core\";\nimport { Frame } from \"./Frame\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PolarFrame = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarFrame, _super);\n    function PolarFrame() {\n        var _this = _super.call(this, PolarFrame.$) || this;\n        _this.w = null;\n        _this.v = false;\n        _this.x = null;\n        _this.w = new List$1(Point_$type, 0);\n        _this.v = true;\n        return _this;\n    }\n    PolarFrame.prototype.r = function (a, b, c) {\n        var d = typeCast(PolarFrame.$, b);\n        var e = typeCast(PolarFrame.$, c);\n        if (d == null || e == null) {\n            return;\n        }\n        Frame.a(this.w, a, d.w, e.w);\n    };\n    PolarFrame.prototype.q = function (a, b, c, d) {\n        if (this.v) {\n            _super.prototype.q.call(this, a, b, c, d);\n        }\n        else {\n            _super.prototype.q.call(this, a, b, c, d);\n            if (c != null && d != null && (c.b.x != d.b.x || c.b.y != d.b.y)) {\n                var e = 1 - b;\n                a.b = { $type: Point_$type, x: c.b.x * e + d.b.x * b, y: c.b.y * e + d.b.y * b };\n            }\n        }\n    };\n    PolarFrame.prototype.u = function (a) {\n        return !isNaN_(a.x) && !isNaN_(a.y) && !isInfinity(a.x) && !isInfinity(a.y);\n    };\n    PolarFrame.prototype.t = function (a, b, c, d) {\n        if (this.v) {\n            _super.prototype.t.call(this, a, b, c, d);\n        }\n        else {\n            if (c != null && d != null && (c.c.x != d.c.x || c.c.y != d.c.y) && this.u(a.b)) {\n                a.c = this.x(a.b);\n            }\n            else {\n                _super.prototype.t.call(this, a, b, c, d);\n            }\n        }\n    };\n    PolarFrame.$t = markType(PolarFrame, 'PolarFrame', ScatterFrameBase$1.$.specialize(-1)).initSelfReferences();\n    return PolarFrame;\n}(ScatterFrameBase$1));\nexport { PolarFrame };\n//# sourceMappingURL=PolarFrame.js.map\n"]},"metadata":{},"sourceType":"module"}