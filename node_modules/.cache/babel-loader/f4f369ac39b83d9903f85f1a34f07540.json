{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { ISeriesVisualDataManager_$type } from \"./ISeriesVisualDataManager\";\nimport { StackedSeriesVisualData } from \"./StackedSeriesVisualData\";\nimport { SeriesVisualData } from \"./SeriesVisualData\";\nimport { MarkerVisualData } from \"./MarkerVisualData\";\nimport { RectData } from \"igniteui-react-core\";\nimport { PrimitiveAppearanceData } from \"igniteui-react-core\";\nimport { DataContext } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\nimport { ColorData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { PolygonVisualData } from \"igniteui-react-core\";\nimport { PolyLineVisualData } from \"igniteui-react-core\";\nimport { RectangleVisualData } from \"igniteui-react-core\";\nimport { PointerTooltipVisualData } from \"./PointerTooltipVisualData\";\nimport { CalloutVisualData } from \"./CalloutVisualData\";\nimport { LineVisualData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar SeriesVisualDataManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SeriesVisualDataManager, _super);\n\n  function SeriesVisualDataManager() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SeriesVisualDataManager.prototype.addSubSeriesVisualData = function (a, b) {\n    var c = a;\n    var d = b;\n    c.fragmentSeries.add(d);\n  };\n\n  SeriesVisualDataManager.prototype.copyVisualData = function (a, b) {\n    var e_1, _a, e_2, _b;\n\n    var c = a;\n    var d = b;\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(d.shapes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var e = _d.value;\n        c.shapes.add(e);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(d.markerShapes)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var f = _f.value;\n        c.markerShapes.add(f);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    c.pixels = d.pixels;\n    c.pixelWidth = d.pixelWidth;\n  };\n\n  SeriesVisualDataManager.prototype.createFragmentVisualData = function (a, b, c, d) {\n    var e = new SeriesVisualData();\n    e.viewport = RectData.b(b);\n    e.type = c;\n    e.name = d;\n    return e;\n  };\n\n  SeriesVisualDataManager.prototype.exportMarkerVisualData = function (a, b) {\n    var _this = this;\n\n    var c = b;\n    a.l0.cc(function (d) {\n      var e = _this.getMarkerVisualData(a, d, a.mj);\n\n      c.markerShapes.add(typeCast(MarkerVisualData.$, e));\n    });\n  };\n\n  SeriesVisualDataManager.prototype.getMarkerVisualData = function (a, b, c) {\n    var d = new MarkerVisualData();\n    var e = new PrimitiveAppearanceData();\n    d.x = b.n;\n    d.y = b.o;\n    d.bounds = new RectData(b.n - b.m / 2, b.o - b.l / 2, b.m, b.l);\n    e.fill = ColorData.a_1(Color.u(0, 0, 0, 0));\n    e.stroke = ColorData.a_1(Color.u(0, 0, 0, 0));\n    d.index = -1;\n    d.contentTemplate = b.ah;\n\n    if (b.content != null && typeCast(DataContext.$, b.content) !== null && b._visibility == 0) {\n      var f = b.content;\n      e.fill = AppearanceHelper.b(f.actualItemBrush);\n      e.fillExtended = AppearanceHelper.a(f.actualItemBrush);\n      e.stroke = AppearanceHelper.b(f.outline);\n      e.strokeExtended = AppearanceHelper.a(f.outline);\n      e.strokeThickness = a.ey;\n\n      if (f.item != null) {\n        d.index = a.bz.indexOf(f.item);\n      }\n    }\n\n    e.isVisible = b._visibility == 0;\n    d.isVisible = b._visibility == 0;\n    d.markerAppearance = e;\n    d.markerType = this.a(a, c);\n    return d;\n  };\n\n  SeriesVisualDataManager.prototype.a = function (a, b) {\n    if (b == a.bs.kn) {\n      return \"Circle\";\n    } else if (b == a.bs.ko) {\n      return \"Diamond\";\n    } else if (b == a.bs.kp) {\n      return \"Hexagon\";\n    } else if (b == a.bs.kq) {\n      return \"Hexagram\";\n    } else if (b == a.bs.kr) {\n      return \"Pentagon\";\n    } else if (b == a.bs.ks) {\n      return \"Pentagram\";\n    } else if (b == a.bs.kt) {\n      return \"Pyramid\";\n    } else if (b == a.bs.ku) {\n      return \"Square\";\n    } else if (b == a.bs.kv) {\n      return \"Tetragram\";\n    } else if (b == a.bs.kw) {\n      return \"Triangle\";\n    } else {\n      return \"None\";\n    }\n  };\n\n  SeriesVisualDataManager.prototype.exportMarkerVisualDataFromMarker = function (a, b, c) {\n    var d = b;\n    var e = new MarkerVisualData();\n    var f = new PrimitiveAppearanceData();\n    e.x = c.n;\n    e.y = c.o;\n    e.bounds = new RectData(c.n - c.m / 2, c.o - c.l / 2, c.m, c.l);\n    e.index = -1;\n    e.contentTemplate = c.ah;\n\n    if (typeCast(DataContext.$, c.content) !== null) {\n      var g = c.content;\n      f.fill = AppearanceHelper.b(g.actualItemBrush);\n      f.stroke = AppearanceHelper.b(g.outline);\n    }\n\n    e.isVisible = c._visibility == 0;\n    e.markerAppearance = f;\n\n    if (c.ah == a.bs.kn) {\n      e.markerType = \"Circle\";\n    } else if (c.ah == a.bs.ko) {\n      e.markerType = \"Diamond\";\n    } else if (c.ah == a.bs.kp) {\n      e.markerType = \"Hexagon\";\n    } else if (c.ah == a.bs.kq) {\n      e.markerType = \"Hexagram\";\n    } else if (c.ah == a.bs.kr) {\n      e.markerType = \"Pentagon\";\n    } else if (c.ah == a.bs.ks) {\n      e.markerType = \"Pentagram\";\n    } else if (c.ah == a.bs.kt) {\n      e.markerType = \"Pyramid\";\n    } else if (c.ah == a.bs.ku) {\n      e.markerType = \"Square\";\n    } else if (c.ah == a.bs.kv) {\n      e.markerType = \"Tetragram\";\n    } else if (c.ah == a.bs.kw) {\n      e.markerType = \"Triangle\";\n    } else {\n      e.markerType = \"None\";\n    }\n\n    d.markerShapes.add(e);\n  };\n\n  SeriesVisualDataManager.prototype.exportPathData = function (a, b, c, d) {\n    var e = a;\n    var f = new PathVisualData(1, c, b);\n\n    if (d != null) {\n      for (var g = 0; g < d.length; g++) {\n        f.tags.add(d[g]);\n      }\n    }\n\n    e.shapes.add(f);\n  };\n\n  SeriesVisualDataManager.prototype.exportPolygonData = function (a, b, c, d) {\n    var e = a;\n    var f = new PolygonVisualData(1, c, b);\n\n    if (d != null) {\n      for (var g = 0; g < d.length; g++) {\n        f.tags.add(d[g]);\n      }\n    }\n\n    e.shapes.add(f);\n  };\n\n  SeriesVisualDataManager.prototype.exportPolylineData = function (a, b, c, d) {\n    var e = a;\n    var f = new PolyLineVisualData(1, c, b);\n\n    if (d != null) {\n      for (var g = 0; g < d.length; g++) {\n        f.tags.add(d[g]);\n      }\n    }\n\n    e.shapes.add(f);\n  };\n\n  SeriesVisualDataManager.prototype.exportRectangleData = function (a, b, c, d) {\n    var e = a;\n    var f = new RectangleVisualData(1, c, b);\n\n    if (d != null) {\n      for (var g = 0; g < d.length; g++) {\n        f.tags.add(d[g]);\n      }\n    }\n\n    e.shapes.add(f);\n  };\n\n  SeriesVisualDataManager.prototype.exportStackedVisualData = function (a, b) {\n    var c = new StackedSeriesVisualData();\n    c.viewport = RectData.b(b);\n    c.type = getInstanceType(a).typeName;\n    c.name = a.name;\n    return c;\n  };\n\n  SeriesVisualDataManager.prototype.exportTrendlineData = function (a, b, c) {\n    var d = b;\n    var e = new PolyLineVisualData(1, \"trendLine\", c);\n    e.tags.add(\"Trend\");\n    d.shapes.add(e);\n  };\n\n  SeriesVisualDataManager.prototype.exportVisualData = function (a, b) {\n    var c = new SeriesVisualData();\n    c.viewport = RectData.b(b);\n    c.type = this.b(getInstanceType(a).typeName);\n    c.name = a.name;\n    c.opacity = a._opacity;\n    return c;\n  };\n\n  SeriesVisualDataManager.prototype.exportSeriesPixelsData = function (a, b, c, d) {\n    var e = a;\n    e.pixels = b;\n    e.pixelWidth = c;\n    e.pixelHeight = d;\n  };\n\n  SeriesVisualDataManager.prototype.b = function (a) {\n    return a;\n  };\n\n  SeriesVisualDataManager.prototype.addPointerTooltipData = function (a, b, c, d, e) {\n    if (b == null) {\n      return;\n    }\n\n    var f = a;\n    var g = b;\n    g.offsetX = c;\n    g.offsetY = d;\n    g.categoryNames = e;\n    f.pointerTooltips.add(g);\n  };\n\n  SeriesVisualDataManager.prototype.exportPointerTooltipData = function (a, b, c, d) {\n    var e = new PointerTooltipVisualData();\n    e.pointerFillShape = new PolygonVisualData(1, \"fillShape\", a);\n    e.pointerOutlineShape = new PolyLineVisualData(1, \"outlineShape\", b);\n    e.boxShape = new RectangleVisualData(1, \"boxShape\", c);\n    e.viewport = RectData.b(d);\n    return e;\n  };\n\n  SeriesVisualDataManager.prototype.exportCalloutData = function (a, b, c, d, e, f, g, h, i, j, k) {\n    var l = new CalloutVisualData();\n    l.left = a;\n    l.top = b;\n    l.marginLeft = c;\n    l.marginTop = d;\n    l.background = new RectangleVisualData(1, \"calloutBackground\", f);\n    l.text = AppearanceHelper.c(g, h);\n    l.line = new LineVisualData(1, \"calloutLeaderLine\", i);\n    e.calloutShapes.add(l);\n  };\n\n  SeriesVisualDataManager.$t = markType(SeriesVisualDataManager, 'SeriesVisualDataManager', Base.$, [ISeriesVisualDataManager_$type]);\n  return SeriesVisualDataManager;\n}(Base);\n\nexport { SeriesVisualDataManager };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/SeriesVisualDataManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { ISeriesVisualDataManager_$type } from \"./ISeriesVisualDataManager\";\nimport { StackedSeriesVisualData } from \"./StackedSeriesVisualData\";\nimport { SeriesVisualData } from \"./SeriesVisualData\";\nimport { MarkerVisualData } from \"./MarkerVisualData\";\nimport { RectData } from \"igniteui-react-core\";\nimport { PrimitiveAppearanceData } from \"igniteui-react-core\";\nimport { DataContext } from \"igniteui-react-core\";\nimport { Color } from \"igniteui-react-core\";\nimport { ColorData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { PolygonVisualData } from \"igniteui-react-core\";\nimport { PolyLineVisualData } from \"igniteui-react-core\";\nimport { RectangleVisualData } from \"igniteui-react-core\";\nimport { PointerTooltipVisualData } from \"./PointerTooltipVisualData\";\nimport { CalloutVisualData } from \"./CalloutVisualData\";\nimport { LineVisualData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar SeriesVisualDataManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SeriesVisualDataManager, _super);\n    function SeriesVisualDataManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SeriesVisualDataManager.prototype.addSubSeriesVisualData = function (a, b) {\n        var c = a;\n        var d = b;\n        c.fragmentSeries.add(d);\n    };\n    SeriesVisualDataManager.prototype.copyVisualData = function (a, b) {\n        var e_1, _a, e_2, _b;\n        var c = a;\n        var d = b;\n        try {\n            for (var _c = tslib_1.__values(fromEnum(d.shapes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var e = _d.value;\n                c.shapes.add(e);\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        try {\n            for (var _e = tslib_1.__values(fromEnum(d.markerShapes)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var f = _f.value;\n                c.markerShapes.add(f);\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        c.pixels = d.pixels;\n        c.pixelWidth = d.pixelWidth;\n    };\n    SeriesVisualDataManager.prototype.createFragmentVisualData = function (a, b, c, d) {\n        var e = new SeriesVisualData();\n        e.viewport = RectData.b(b);\n        e.type = c;\n        e.name = d;\n        return e;\n    };\n    SeriesVisualDataManager.prototype.exportMarkerVisualData = function (a, b) {\n        var _this = this;\n        var c = b;\n        a.l0.cc(function (d) {\n            var e = _this.getMarkerVisualData(a, d, a.mj);\n            c.markerShapes.add(typeCast(MarkerVisualData.$, e));\n        });\n    };\n    SeriesVisualDataManager.prototype.getMarkerVisualData = function (a, b, c) {\n        var d = new MarkerVisualData();\n        var e = new PrimitiveAppearanceData();\n        d.x = b.n;\n        d.y = b.o;\n        d.bounds = new RectData(b.n - (b.m / 2), b.o - (b.l / 2), b.m, b.l);\n        e.fill = ColorData.a_1(Color.u(0, 0, 0, 0));\n        e.stroke = ColorData.a_1(Color.u(0, 0, 0, 0));\n        d.index = -1;\n        d.contentTemplate = b.ah;\n        if (b.content != null && typeCast(DataContext.$, b.content) !== null && b._visibility == 0) {\n            var f = b.content;\n            e.fill = AppearanceHelper.b(f.actualItemBrush);\n            e.fillExtended = AppearanceHelper.a(f.actualItemBrush);\n            e.stroke = AppearanceHelper.b(f.outline);\n            e.strokeExtended = AppearanceHelper.a(f.outline);\n            e.strokeThickness = a.ey;\n            if (f.item != null) {\n                d.index = a.bz.indexOf(f.item);\n            }\n        }\n        e.isVisible = b._visibility == 0;\n        d.isVisible = b._visibility == 0;\n        d.markerAppearance = e;\n        d.markerType = this.a(a, c);\n        return d;\n    };\n    SeriesVisualDataManager.prototype.a = function (a, b) {\n        if (b == a.bs.kn) {\n            return \"Circle\";\n        }\n        else if (b == a.bs.ko) {\n            return \"Diamond\";\n        }\n        else if (b == a.bs.kp) {\n            return \"Hexagon\";\n        }\n        else if (b == a.bs.kq) {\n            return \"Hexagram\";\n        }\n        else if (b == a.bs.kr) {\n            return \"Pentagon\";\n        }\n        else if (b == a.bs.ks) {\n            return \"Pentagram\";\n        }\n        else if (b == a.bs.kt) {\n            return \"Pyramid\";\n        }\n        else if (b == a.bs.ku) {\n            return \"Square\";\n        }\n        else if (b == a.bs.kv) {\n            return \"Tetragram\";\n        }\n        else if (b == a.bs.kw) {\n            return \"Triangle\";\n        }\n        else {\n            return \"None\";\n        }\n    };\n    SeriesVisualDataManager.prototype.exportMarkerVisualDataFromMarker = function (a, b, c) {\n        var d = b;\n        var e = new MarkerVisualData();\n        var f = new PrimitiveAppearanceData();\n        e.x = c.n;\n        e.y = c.o;\n        e.bounds = new RectData(c.n - (c.m / 2), c.o - (c.l / 2), c.m, c.l);\n        e.index = -1;\n        e.contentTemplate = c.ah;\n        if (typeCast(DataContext.$, c.content) !== null) {\n            var g = c.content;\n            f.fill = AppearanceHelper.b(g.actualItemBrush);\n            f.stroke = AppearanceHelper.b(g.outline);\n        }\n        e.isVisible = c._visibility == 0;\n        e.markerAppearance = f;\n        if (c.ah == a.bs.kn) {\n            e.markerType = \"Circle\";\n        }\n        else if (c.ah == a.bs.ko) {\n            e.markerType = \"Diamond\";\n        }\n        else if (c.ah == a.bs.kp) {\n            e.markerType = \"Hexagon\";\n        }\n        else if (c.ah == a.bs.kq) {\n            e.markerType = \"Hexagram\";\n        }\n        else if (c.ah == a.bs.kr) {\n            e.markerType = \"Pentagon\";\n        }\n        else if (c.ah == a.bs.ks) {\n            e.markerType = \"Pentagram\";\n        }\n        else if (c.ah == a.bs.kt) {\n            e.markerType = \"Pyramid\";\n        }\n        else if (c.ah == a.bs.ku) {\n            e.markerType = \"Square\";\n        }\n        else if (c.ah == a.bs.kv) {\n            e.markerType = \"Tetragram\";\n        }\n        else if (c.ah == a.bs.kw) {\n            e.markerType = \"Triangle\";\n        }\n        else {\n            e.markerType = \"None\";\n        }\n        d.markerShapes.add(e);\n    };\n    SeriesVisualDataManager.prototype.exportPathData = function (a, b, c, d) {\n        var e = a;\n        var f = new PathVisualData(1, c, b);\n        if (d != null) {\n            for (var g = 0; g < d.length; g++) {\n                f.tags.add(d[g]);\n            }\n        }\n        e.shapes.add(f);\n    };\n    SeriesVisualDataManager.prototype.exportPolygonData = function (a, b, c, d) {\n        var e = a;\n        var f = new PolygonVisualData(1, c, b);\n        if (d != null) {\n            for (var g = 0; g < d.length; g++) {\n                f.tags.add(d[g]);\n            }\n        }\n        e.shapes.add(f);\n    };\n    SeriesVisualDataManager.prototype.exportPolylineData = function (a, b, c, d) {\n        var e = a;\n        var f = new PolyLineVisualData(1, c, b);\n        if (d != null) {\n            for (var g = 0; g < d.length; g++) {\n                f.tags.add(d[g]);\n            }\n        }\n        e.shapes.add(f);\n    };\n    SeriesVisualDataManager.prototype.exportRectangleData = function (a, b, c, d) {\n        var e = a;\n        var f = new RectangleVisualData(1, c, b);\n        if (d != null) {\n            for (var g = 0; g < d.length; g++) {\n                f.tags.add(d[g]);\n            }\n        }\n        e.shapes.add(f);\n    };\n    SeriesVisualDataManager.prototype.exportStackedVisualData = function (a, b) {\n        var c = new StackedSeriesVisualData();\n        c.viewport = RectData.b(b);\n        c.type = getInstanceType(a).typeName;\n        c.name = a.name;\n        return c;\n    };\n    SeriesVisualDataManager.prototype.exportTrendlineData = function (a, b, c) {\n        var d = b;\n        var e = new PolyLineVisualData(1, \"trendLine\", c);\n        e.tags.add(\"Trend\");\n        d.shapes.add(e);\n    };\n    SeriesVisualDataManager.prototype.exportVisualData = function (a, b) {\n        var c = new SeriesVisualData();\n        c.viewport = RectData.b(b);\n        c.type = this.b(getInstanceType(a).typeName);\n        c.name = a.name;\n        c.opacity = a._opacity;\n        return c;\n    };\n    SeriesVisualDataManager.prototype.exportSeriesPixelsData = function (a, b, c, d) {\n        var e = a;\n        e.pixels = b;\n        e.pixelWidth = c;\n        e.pixelHeight = d;\n    };\n    SeriesVisualDataManager.prototype.b = function (a) {\n        return a;\n    };\n    SeriesVisualDataManager.prototype.addPointerTooltipData = function (a, b, c, d, e) {\n        if (b == null) {\n            return;\n        }\n        var f = a;\n        var g = b;\n        g.offsetX = c;\n        g.offsetY = d;\n        g.categoryNames = e;\n        f.pointerTooltips.add(g);\n    };\n    SeriesVisualDataManager.prototype.exportPointerTooltipData = function (a, b, c, d) {\n        var e = new PointerTooltipVisualData();\n        e.pointerFillShape = new PolygonVisualData(1, \"fillShape\", a);\n        e.pointerOutlineShape = new PolyLineVisualData(1, \"outlineShape\", b);\n        e.boxShape = new RectangleVisualData(1, \"boxShape\", c);\n        e.viewport = RectData.b(d);\n        return e;\n    };\n    SeriesVisualDataManager.prototype.exportCalloutData = function (a, b, c, d, e, f, g, h, i, j, k) {\n        var l = new CalloutVisualData();\n        l.left = a;\n        l.top = b;\n        l.marginLeft = c;\n        l.marginTop = d;\n        l.background = new RectangleVisualData(1, \"calloutBackground\", f);\n        l.text = AppearanceHelper.c(g, h);\n        l.line = new LineVisualData(1, \"calloutLeaderLine\", i);\n        e.calloutShapes.add(l);\n    };\n    SeriesVisualDataManager.$t = markType(SeriesVisualDataManager, 'SeriesVisualDataManager', Base.$, [ISeriesVisualDataManager_$type]);\n    return SeriesVisualDataManager;\n}(Base));\nexport { SeriesVisualDataManager };\n//# sourceMappingURL=SeriesVisualDataManager.js.map\n"]},"metadata":{},"sourceType":"module"}