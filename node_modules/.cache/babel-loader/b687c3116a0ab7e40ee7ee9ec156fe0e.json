{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\n\nvar IgrSplineSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrSplineSeriesBase, _super);\n\n  function IgrSplineSeriesBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n    /**\n     * Gets whether the current series shows an area or line shape.\n    */\n    get: function () {\n      return this.i.ck;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n    /**\n     * Gets or sets the type of spline to be rendered.\n    *\n    * ```ts\n    * this.series.splineType = SplineType.Clamped;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrSplineAreaSeries\n    *      name=\"series1\"\n    *      valueMemberPath=\"value\"/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.qj;\n    },\n    set: function (v) {\n      this.i.qj = ensureEnum(SplineType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrSplineSeriesBase };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-spline-series-base.ts"],"names":[],"mappings":";AAKA,SAAqB,gBAArB,QAA6C,cAA7C;AACA,SAAS,mCAAT,QAA+F,2CAA/F;AAMA,SAAqB,UAArB,QAAuC,qBAAvC;AAEA;;;;AAGA,IAAA,mBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmH,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA;;AAUlH,WAAA,mBAAA,CAAY,KAAZ,EAAoB;WACgB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AAG/C;;AAP2B,EAAA,MAAA,CAAA,cAAA,CAAW,mBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAW5B,EAAA,MAAA,CAAA,cAAA,CAAI,mBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFe;oBAAA;;AAAA,GAAhB;AAuBA,EAAA,MAAA,CAAA,cAAA,CAAI,mBAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AApBd;;;;;;;;;;;;;;;;;;;;SAoBA,YAAA;AACC,aAAO,KAAK,CAAL,CAAO,EAAd;AACA,KAFa;SAGd,UAAe,CAAf,EAA4B;AAC3B,WAAK,CAAL,CAAO,EAAP,GAAY,UAAU,CAAa,gBAAb,EAA+B,CAA/B,CAAtB;AACA,KALa;oBAAA;;AAAA,GAAd;AAMD,SAAA,mBAAA;AAAC,CA/CD,CAAmH,mCAAnH,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\nvar IgrSplineSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrSplineSeriesBase, _super);\n    function IgrSplineSeriesBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n        /**\n         * Gets whether the current series shows an area or line shape.\n        */\n        get: function () {\n            return this.i.ck;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n        /**\n         * Gets or sets the type of spline to be rendered.\n        *\n        * ```ts\n        * this.series.splineType = SplineType.Clamped;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrSplineAreaSeries\n        *      name=\"series1\"\n        *      valueMemberPath=\"value\"/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.qj;\n        },\n        set: function (v) {\n            this.i.qj = ensureEnum(SplineType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrSplineSeriesBase };\n//# sourceMappingURL=igr-spline-series-base.js.map\n"]},"metadata":{},"sourceType":"module"}