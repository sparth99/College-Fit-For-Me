{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { PositiveVolumeIndexIndicator } from \"./PositiveVolumeIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Positive Volume Index (PVI) indicator series.\n * Default required members: Close, Volume\n*\n* You can use the `IgrPositiveVolumeIndexIndicator` with the 'NegativeVolumeIndexIndicator' to identify bull markets.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPositiveVolumeIndexIndicator\n*      name=\"series1\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrPositiveVolumeIndexIndicator ({name:\"series1\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.xAxis = this.categoryXAxis;\n* series.yAxis = this.numericYAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* ```\n*/\n\nvar IgrPositiveVolumeIndexIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrPositiveVolumeIndexIndicator, _super);\n\n  function IgrPositiveVolumeIndexIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrPositiveVolumeIndexIndicator.prototype.createImplementation = function () {\n    return new PositiveVolumeIndexIndicator();\n  };\n\n  Object.defineProperty(IgrPositiveVolumeIndexIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrPositiveVolumeIndexIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrPositiveVolumeIndexIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-positive-volume-index-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,4BAAT,QAA6C,gCAA7C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAA,+BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,OAAA,CAAA,SAAA,CAAA,+BAAA,EAAA,MAAA;;AAapD,WAAA,+BAAA,CAAY,KAAZ,EAAwD;WACvD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,+BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,4BAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,+BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAM7B,SAAA,+BAAA;AAAC,CAhBD,CAAqD,yBAArD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { PositiveVolumeIndexIndicator } from \"./PositiveVolumeIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Positive Volume Index (PVI) indicator series.\n * Default required members: Close, Volume\n*\n* You can use the `IgrPositiveVolumeIndexIndicator` with the 'NegativeVolumeIndexIndicator' to identify bull markets.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPositiveVolumeIndexIndicator\n*      name=\"series1\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrPositiveVolumeIndexIndicator ({name:\"series1\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.xAxis = this.categoryXAxis;\n* series.yAxis = this.numericYAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* ```\n*/\nvar IgrPositiveVolumeIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrPositiveVolumeIndexIndicator, _super);\n    function IgrPositiveVolumeIndexIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrPositiveVolumeIndexIndicator.prototype.createImplementation = function () {\n        return new PositiveVolumeIndexIndicator();\n    };\n    Object.defineProperty(IgrPositiveVolumeIndexIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrPositiveVolumeIndexIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrPositiveVolumeIndexIndicator };\n//# sourceMappingURL=igr-positive-volume-index-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}