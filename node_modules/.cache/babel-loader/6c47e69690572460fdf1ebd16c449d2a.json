{"ast":null,"code":"import { AxisAnnotation as AxisAnnotation_internal } from \"./AxisAnnotation\";\nimport { brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents an axis annotation\n*/\n\nvar IgrAxisAnnotation =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrAxisAnnotation() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrAxisAnnotation.prototype.createImplementation = function () {\n    return new AxisAnnotation_internal();\n  };\n\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrAxisAnnotation.prototype.onImplementationCreated = function () {};\n\n  IgrAxisAnnotation.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"value\", {\n    /**\n     * Gets or sets the value at which this annotation is displayed on the axis.\n    */\n    get: function () {\n      return this.i.value;\n    },\n    set: function (v) {\n      this.i.value = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"text\", {\n    /**\n     * Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.\n    */\n    get: function () {\n      return this.i.text;\n    },\n    set: function (v) {\n      this.i.text = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"formatLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.\n    */\n    get: function () {\n      return this.i.formatLabel;\n    },\n    set: function (v) {\n      this.i.formatLabel = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"textColor\", {\n    /**\n     * Gets or sets the color to use for the text in the annotation.\n    */\n    get: function () {\n      return brushToString(this.i.textColor);\n    },\n    set: function (v) {\n      this.i.textColor = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"background\", {\n    /**\n     * Gets or sets the background to use for tha axis annotation box.\n    */\n    get: function () {\n      return brushToString(this.i.background);\n    },\n    set: function (v) {\n      this.i.background = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"outline\", {\n    /**\n     * Gets or sets the Outline to use for tha axis annotation box.\n    */\n    get: function () {\n      return brushToString(this.i.outline);\n    },\n    set: function (v) {\n      this.i.outline = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"strokeThickness\", {\n    /**\n     * Gets or sets the border stroke thickness to use for tha axis annotation box.\n    */\n    get: function () {\n      return this.i.strokeThickness;\n    },\n    set: function (v) {\n      this.i.strokeThickness = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingLeft\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.backgroundPaddingLeft;\n    },\n    set: function (v) {\n      this.i.backgroundPaddingLeft = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingTop\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.backgroundPaddingTop;\n    },\n    set: function (v) {\n      this.i.backgroundPaddingTop = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingRight\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.backgroundPaddingRight;\n    },\n    set: function (v) {\n      this.i.backgroundPaddingRight = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingBottom\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.backgroundPaddingBottom;\n    },\n    set: function (v) {\n      this.i.backgroundPaddingBottom = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrAxisAnnotation.prototype.resetCachedExtent = function () {\n    this.i.resetCachedExtent();\n  };\n\n  IgrAxisAnnotation.prototype.resolveLabelValue = function () {\n    var iv = this.i.resolveLabelValue();\n    return iv;\n  };\n\n  return IgrAxisAnnotation;\n}();\n\nexport { IgrAxisAnnotation };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-axis-annotation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { AxisAnnotation as AxisAnnotation_internal } from \"./AxisAnnotation\";\nimport { brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents an axis annotation\n*/\nvar IgrAxisAnnotation = /** @class */ /*@__PURE__*/ (function () {\n    function IgrAxisAnnotation() {\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrAxisAnnotation.prototype.createImplementation = function () {\n        return new AxisAnnotation_internal();\n    };\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrAxisAnnotation.prototype.onImplementationCreated = function () {\n    };\n    IgrAxisAnnotation.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"value\", {\n        /**\n         * Gets or sets the value at which this annotation is displayed on the axis.\n        */\n        get: function () {\n            return this.i.value;\n        },\n        set: function (v) {\n            this.i.value = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"text\", {\n        /**\n         * Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.\n        */\n        get: function () {\n            return this.i.text;\n        },\n        set: function (v) {\n            this.i.text = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"formatLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.\n        */\n        get: function () {\n            return this.i.formatLabel;\n        },\n        set: function (v) {\n            this.i.formatLabel = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets or sets the color to use for the text in the annotation.\n        */\n        get: function () {\n            return brushToString(this.i.textColor);\n        },\n        set: function (v) {\n            this.i.textColor = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"background\", {\n        /**\n         * Gets or sets the background to use for tha axis annotation box.\n        */\n        get: function () {\n            return brushToString(this.i.background);\n        },\n        set: function (v) {\n            this.i.background = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"outline\", {\n        /**\n         * Gets or sets the Outline to use for tha axis annotation box.\n        */\n        get: function () {\n            return brushToString(this.i.outline);\n        },\n        set: function (v) {\n            this.i.outline = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"strokeThickness\", {\n        /**\n         * Gets or sets the border stroke thickness to use for tha axis annotation box.\n        */\n        get: function () {\n            return this.i.strokeThickness;\n        },\n        set: function (v) {\n            this.i.strokeThickness = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingLeft\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.backgroundPaddingLeft;\n        },\n        set: function (v) {\n            this.i.backgroundPaddingLeft = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingTop\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.backgroundPaddingTop;\n        },\n        set: function (v) {\n            this.i.backgroundPaddingTop = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingRight\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.backgroundPaddingRight;\n        },\n        set: function (v) {\n            this.i.backgroundPaddingRight = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisAnnotation.prototype, \"backgroundPaddingBottom\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.backgroundPaddingBottom;\n        },\n        set: function (v) {\n            this.i.backgroundPaddingBottom = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrAxisAnnotation.prototype.resetCachedExtent = function () {\n        this.i.resetCachedExtent();\n    };\n    IgrAxisAnnotation.prototype.resolveLabelValue = function () {\n        var iv = this.i.resolveLabelValue();\n        return (iv);\n    };\n    return IgrAxisAnnotation;\n}());\nexport { IgrAxisAnnotation };\n//# sourceMappingURL=igr-axis-annotation.js.map\n"]},"metadata":{},"sourceType":"module"}