{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Cities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { api } from '../instance';\nexport default class Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: null,\n      page: 1,\n      loading: true\n    };\n\n    this.fetchCities = () => {\n      api.get('/cities', {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(cities => {\n        this.setState({\n          cities,\n          loading: false\n        });\n      });\n    };\n\n    this.formatNumber = value => {\n      return value === 0 ? 'N/A' : value.toLocaleString();\n    };\n\n    this.displayCities = () => {\n      const {\n        cities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 3; c++) {\n          if (cities.length <= c + 3 * r) {\n            break;\n          }\n\n          var city = cities[c + 3 * r];\n          children.push(React.createElement(Card, {\n            className: \"cities-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(Nav.Link, {\n            className: \"city-instance\",\n            href: '/cities/' + String(city.city_state_name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(Card.Img, {\n            src: city.image_url,\n            variant: \"top\",\n            height: \"300\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }), React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, city.city_name, \", \", city.state_name), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Population: \", this.formatNumber(city.population))))));\n        }\n\n        rows.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n        rows.push(React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, children));\n        if (cities.length < 3 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page,\n        loading: true\n      }, () => this.fetchCities());\n    };\n\n    this.displayButtons = () => {\n      let buttons = [];\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"1\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"2\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"3\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"4\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"5\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(6);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"6\"));\n      buttons.push(React.createElement(Button, {\n        variant: \"outline-primary mr-1\",\n        onClick: e => {\n          this.changePage(7);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"7\"));\n      return buttons;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      className: \"cities-jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(\"p\", {\n      className: \"cities-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"City matters a lot when deciding a University to attend.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Whether you're a West Coast or East Coast person, prefer a big or small city, or looking for a city that has great access to nature, there's a city for you!\"), this.state.loading ? React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      className: \"Spinner-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.displayCities()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), this.displayButtons()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Cities.js"],"names":["React","Component","Nav","CardDeck","Spinner","Navigation","Footer","Jumbotron","Card","Button","api","Cities","state","cities","page","loading","fetchCities","get","params","then","res","data","setState","formatNumber","value","toLocaleString","displayCities","rows","r","children","c","length","city","push","String","city_state_name","image_url","city_name","state_name","population","changePage","displayButtons","buttons","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,OAAxB,QAAuC,iBAAvC;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,eAAe,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CW,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADoC;;AAAA,SAW5CC,WAX4C,GAW9B,MAAM;AAClBN,MAAAA,GAAG,CACAO,GADH,CACO,SADP,EACkB;AACdC,QAAAA,MAAM,EAAE;AACNJ,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADX;AADM,OADlB,EAMGK,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IANrB,EAOGF,IAPH,CAOSN,MAAD,IAAY;AAChB,aAAKS,QAAL,CAAc;AAAET,UAAAA,MAAF;AAAUE,UAAAA,OAAO,EAAE;AAAnB,SAAd;AACD,OATH;AAUD,KAtB2C;;AAAA,SAwB5CQ,YAxB4C,GAwB5BC,KAAD,IAAW;AACxB,aAAOA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA,KAAK,CAACC,cAAN,EAA7B;AACD,KA1B2C;;AAAA,SA4B5CC,aA5B4C,GA4B5B,MAAM;AACpB,YAAM;AAAEb,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,UAAIe,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAIjB,MAAM,CAACkB,MAAP,IAAiBD,CAAC,GAAG,IAAIF,CAA7B,EAAgC;AAC9B;AACD;;AACD,cAAII,IAAI,GAAGnB,MAAM,CAACiB,CAAC,GAAG,IAAIF,CAAT,CAAjB;AACAC,UAAAA,QAAQ,CAACI,IAAT,CACE,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,GAAD,CAAK,IAAL;AAAU,YAAA,SAAS,EAAC,eAApB;AAAoC,YAAA,IAAI,EAAE,aAAaC,MAAM,CAACF,IAAI,CAACG,eAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAEH,IAAI,CAACI,SAApB;AAA+B,YAAA,OAAO,EAAC,KAAvC;AAA6C,YAAA,MAAM,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGJ,IAAI,CAACK,SADR,QACqBL,IAAI,CAACM,UAD1B,CADF,EAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACe,KAAKf,YAAL,CAAkBS,IAAI,CAACO,UAAvB,CADf,CAJF,CAFF,CADF,CADF;AAeD;;AACDZ,QAAAA,IAAI,CAACM,IAAL,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACAN,QAAAA,IAAI,CAACM,IAAL,CAAU;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBJ,QAAtB,CAAV;AACA,YAAIhB,MAAM,CAACkB,MAAP,GAAgB,IAAIH,CAAxB,EAA2B;AAC5B;;AACD,aAAOD,IAAP;AACD,KA3D2C;;AAAA,SA6D5Ca,UA7D4C,GA6D9B1B,IAAD,IAAU;AACrB,WAAKQ,QAAL,CACE;AACER,QAAAA,IAAI,EAAEA,IADR;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADF,EAKE,MAAM,KAAKC,WAAL,EALR;AAOD,KArE2C;;AAAA,SAuE5CyB,cAvE4C,GAuE3B,MAAM;AACrB,UAAIC,OAAO,GAAG,EAAd;AAEAA,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKAE,MAAAA,OAAO,CAACT,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAuC,QAAA,OAAO,EAAGU,CAAD,IAAO;AAAC,eAAKH,UAAL,CAAgB,CAAhB;AAAmB,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMA,aAAOE,OAAP;AACD,KA/G2C;AAAA;;AAO5CE,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,WAAL;AACD;;AAwGD6B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sKAPF,EAYG,KAAKjC,KAAL,CAAWG,OAAX,GACC,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOC,0CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,KAAKW,aAAL,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKe,cAAL,EAHH,CAnBJ,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF;AA8BD;;AAhJ2C","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Cities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { api } from '../instance';\n\nexport default class Cities extends Component {\n  state = {\n    cities: null,\n    page: 1,\n    loading: true,\n  };\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  fetchCities = () => {\n    api\n      .get('/cities', {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((cities) => {\n        this.setState({ cities, loading: false });\n      });\n  };\n\n  formatNumber = (value) => {\n    return value === 0 ? 'N/A' : value.toLocaleString();\n  }\n\n  displayCities = () => {\n    const { cities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 3; c++) {\n        if (cities.length <= c + 3 * r) {\n          break;\n        }\n        var city = cities[c + 3 * r];\n        children.push(\n          <Card className=\"cities-card\">\n            <Nav.Link className=\"city-instance\" href={'/cities/' + String(city.city_state_name)}>\n              <Card.Img src={city.image_url} variant=\"top\" height=\"300\" />\n              <Card.Body>\n                <Card.Title>\n                  {city.city_name}, {city.state_name}\n                </Card.Title>\n                <Card.Text>\n                  Population: {this.formatNumber(city.population)}\n                </Card.Text>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (cities.length < 3 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n        loading: true,\n      },\n      () => this.fetchCities()\n    );\n  };\n\n  displayButtons = () => {\n    let buttons = []\n\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(1)}}>\n        1\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(2)}}>\n        2\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(3)}}>\n        3\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(4)}}>\n        4\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(5)}}>\n        5\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(6)}}>\n        6\n      </Button>\n    )\n    buttons.push(\n      <Button variant=\"outline-primary mr-1\" onClick={(e) => {this.changePage(7)}}>\n        7\n      </Button>\n    )\n\n    return buttons\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Jumbotron className=\"cities-jumbotron\"></Jumbotron>\n        <h2>Cities</h2>\n        <p className=\"cities-header\">\n          City matters a lot when deciding a University to attend.\n        </p>\n        <p>\n          Whether you're a West Coast or East Coast person, prefer a big or\n          small city, or looking for a city that has great access to nature,\n          there's a city for you!\n        </p>\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <>\n            <CardDeck>{this.displayCities()}</CardDeck>\n            <p />\n            {this.displayButtons()}\n          </>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}