{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType, getInstanceType } from \"igniteui-react-core\";\nimport { DictionaryUtil } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar MessageHandler_Spark =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(MessageHandler_Spark, _super);\n\n  function MessageHandler_Spark() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.a = DictionaryUtil.dictionaryCreate();\n    return _this;\n  }\n\n  MessageHandler_Spark.prototype.addHandler = function (a, b) {\n    this.a.set(a.typeName, b);\n  };\n\n  MessageHandler_Spark.prototype.messageReceived = function (a) {\n    var b;\n    var c = getInstanceType(a).typeName;\n\n    if (this.a.has(c)) {\n      b = this.a.get(c);\n      b(a);\n    }\n  };\n\n  MessageHandler_Spark.$t = markType(MessageHandler_Spark, 'MessageHandler_Spark');\n  return MessageHandler_Spark;\n}(Base);\n\nexport { MessageHandler_Spark };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/MessageHandler_Spark.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAqB,QAArB,EAA+B,eAA/B,QAAsD,qBAAtD;AAEA,SAAS,cAAT,QAA+B,qBAA/B;AAEA;;;;AAGA,IAAA,oBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,OAAA,CAAA,SAAA,CAAA,oBAAA,EAAA,MAAA;;AAA1C,WAAA,oBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,CAAA,GAAsB,cAAc,CAAC,gBAAf,EAAtB;;AAYR;;AAXA,EAAA,oBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAAoB,CAApB,EAAiD;AAChD,SAAK,CAAL,CAAO,GAAP,CAAW,CAAC,CAAC,QAAb,EAAuB,CAAvB;AACA,GAFD;;AAGA,EAAA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,CAAhB,EAAgC;AAC/B,QAAI,CAAJ;AACA,QAAI,CAAC,GAAW,eAAe,CAAC,CAAD,CAAf,CAAmB,QAAnC;;AACA,QAAI,KAAK,CAAL,CAAO,GAAP,CAAW,CAAX,CAAJ,EAAmB;AAClB,MAAA,CAAC,GAA+B,KAAK,CAAL,CAAO,GAAP,CAAW,CAAX,CAAhC;AACA,MAAA,CAAC,CAAC,CAAD,CAAD;AACA;AACD,GAPD;;AALO,EAAA,oBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oBAAD,EAAuB,sBAAvB,CAAnB;AAaR,SAAA,oBAAA;AAAC,CAdD,CAA0C,IAA1C,CAAA;;SAAa,oB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType, getInstanceType } from \"igniteui-react-core\";\nimport { DictionaryUtil } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar MessageHandler_Spark = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MessageHandler_Spark, _super);\n    function MessageHandler_Spark() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.a = DictionaryUtil.dictionaryCreate();\n        return _this;\n    }\n    MessageHandler_Spark.prototype.addHandler = function (a, b) {\n        this.a.set(a.typeName, b);\n    };\n    MessageHandler_Spark.prototype.messageReceived = function (a) {\n        var b;\n        var c = getInstanceType(a).typeName;\n        if (this.a.has(c)) {\n            b = this.a.get(c);\n            b(a);\n        }\n    };\n    MessageHandler_Spark.$t = markType(MessageHandler_Spark, 'MessageHandler_Spark');\n    return MessageHandler_Spark;\n}(Base));\nexport { MessageHandler_Spark };\n//# sourceMappingURL=MessageHandler_Spark.js.map\n"]},"metadata":{},"sourceType":"module"}