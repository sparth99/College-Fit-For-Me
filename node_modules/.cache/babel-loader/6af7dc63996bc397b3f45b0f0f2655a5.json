{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar string = _propTypes2.default.string;\nvar StackDataMixin = {\n  propTypes: {\n    offset: string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      offset: 'zero',\n      order: 'default'\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    this._stackData(this.props);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    this._stackData(nextProps);\n  },\n  _stackData: function _stackData(props) {\n    var offset = props.offset,\n        order = props.order,\n        x = props.x,\n        y = props.y,\n        values = props.values;\n\n    var stack = _d2.default.layout.stack().offset(offset).order(order).x(x).y(y).values(values);\n\n    this._data = stack(this._data);\n\n    for (var m = 0; m < values(this._data[0]).length; m++) {\n      var positiveBase = 0;\n      var negativeBase = 0;\n\n      for (var n = 0; n < this._data.length; n++) {\n        var value = y(values(this._data[n])[m]);\n\n        if (value < 0) {\n          values(this._data[n])[m].y0 = negativeBase;\n          negativeBase += value;\n        } else {\n          values(this._data[n])[m].y0 = positiveBase;\n          positiveBase += value;\n        }\n      }\n    }\n  }\n};\nexports.default = StackDataMixin;","map":{"version":3,"sources":["/Users/Parth/web-project/node_modules/react-d3-components/lib/StackDataMixin.js"],"names":["Object","defineProperty","exports","value","_propTypes","require","_propTypes2","_interopRequireDefault","_d","_d2","obj","__esModule","default","string","StackDataMixin","propTypes","offset","getDefaultProps","order","componentWillMount","_stackData","props","componentWillReceiveProps","nextProps","x","y","values","stack","layout","_data","m","length","positiveBase","negativeBase","n","y0"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar string = _propTypes2.default.string;\n\n\nvar StackDataMixin = {\n    propTypes: {\n        offset: string\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            offset: 'zero',\n            order: 'default'\n        };\n    },\n    componentWillMount: function componentWillMount() {\n        this._stackData(this.props);\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        this._stackData(nextProps);\n    },\n    _stackData: function _stackData(props) {\n        var offset = props.offset,\n            order = props.order,\n            x = props.x,\n            y = props.y,\n            values = props.values;\n\n\n        var stack = _d2.default.layout.stack().offset(offset).order(order).x(x).y(y).values(values);\n\n        this._data = stack(this._data);\n\n        for (var m = 0; m < values(this._data[0]).length; m++) {\n            var positiveBase = 0;\n            var negativeBase = 0;\n            for (var n = 0; n < this._data.length; n++) {\n                var value = y(values(this._data[n])[m]);\n                if (value < 0) {\n                    values(this._data[n])[m].y0 = negativeBase;\n                    negativeBase += value;\n                } else {\n                    values(this._data[n])[m].y0 = positiveBase;\n                    positiveBase += value;\n                }\n            }\n        }\n    }\n};\n\nexports.default = StackDataMixin;"]},"metadata":{},"sourceType":"script"}