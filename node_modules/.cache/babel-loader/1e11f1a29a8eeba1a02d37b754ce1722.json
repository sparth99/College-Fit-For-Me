{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { OverlayProxy } from './OverlayProxy';\nimport { TypeRegistrar } from \"igniteui-react-core\";\n\nvar IgrOverlayProxyModule =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrOverlayProxyModule() {}\n\n  IgrOverlayProxyModule.register = function () {\n    TypeRegistrar.register('OverlayProxy', OverlayProxy.$type);\n  };\n\n  return IgrOverlayProxyModule;\n}();\n\nexport { IgrOverlayProxyModule };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-overlay-proxy-module.ts"],"names":[],"mappings":"AAAA;;;;;;AAOA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,aAAT,QAA8B,qBAA9B;;AAGA,IAAA,qBAAA;AAAA;;AAAA;AAAA,YAAA;AAAA,WAAA,qBAAA,GAAA,CAKC;;AAJiB,EAAA,qBAAA,CAAA,QAAA,GAAd,YAAA;AACY,IAAA,aAAa,CAAC,QAAd,CAAuB,cAAvB,EAAwC,YAAoB,CAAC,KAA7D;AAEX,GAHa;;AAIlB,SAAA,qBAAA;AAAC,CALD,EAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { OverlayProxy } from './OverlayProxy';\nimport { TypeRegistrar } from \"igniteui-react-core\";\nvar IgrOverlayProxyModule = /** @class */ /*@__PURE__*/ (function () {\n    function IgrOverlayProxyModule() {\n    }\n    IgrOverlayProxyModule.register = function () {\n        TypeRegistrar.register('OverlayProxy', OverlayProxy.$type);\n    };\n    return IgrOverlayProxyModule;\n}());\nexport { IgrOverlayProxyModule };\n//# sourceMappingURL=igr-overlay-proxy-module.js.map\n"]},"metadata":{},"sourceType":"module"}