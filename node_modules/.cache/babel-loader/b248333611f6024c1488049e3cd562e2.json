{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { IgrRadialBase } from \"./igr-radial-base\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent anchored radial category series.\n*/\n\nvar IgrAnchoredRadialSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrAnchoredRadialSeries, _super);\n\n  function IgrAnchoredRadialSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or sets the item path that provides the values for the current series.\n    */\n    get: function () {\n      return this.i.n8;\n    },\n    set: function (v) {\n      this.i.n8 = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineType\", {\n    /**\n     * Gets or sets the trend type for the current series object.\n    */\n    get: function () {\n      return this.i.nu;\n    },\n    set: function (v) {\n      this.i.nu = ensureEnum(TrendLineType_$type, v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineBrush\", {\n    /**\n     * Gets or sets the brush that specifies how to the current series\n     * object's Trend line is drawn.\n    */\n    get: function () {\n      return brushToString(this.i.om);\n    },\n    set: function (v) {\n      this.i.om = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"actualTrendLineBrush\", {\n    /**\n     * Gets the effective TrendLineBrush for this series.\n    */\n    get: function () {\n      return brushToString(this.i.ol);\n    },\n    set: function (v) {\n      this.i.ol = stringToBrush(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineThickness\", {\n    /**\n     * Gets or sets the thickness of the current series object's trend line.\n    */\n    get: function () {\n      return this.i.n4;\n    },\n    set: function (v) {\n      this.i.n4 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLinePeriod\", {\n    /**\n     * Gets or sets the trend line period for the current series.\n     * The typical, and initial, value for bollinger band periods is 20.\n    */\n    get: function () {\n      return this.i.n5;\n    },\n    set: function (v) {\n      this.i.n5 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineZIndex\", {\n    /**\n     * Sets or Gets the Z index of the trendline.\n    */\n    get: function () {\n      return this.i.n6;\n    },\n    set: function (v) {\n      this.i.n6 = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrAnchoredRadialSeries.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.fs(item, memberPathName);\n    return iv;\n  };\n\n  IgrAnchoredRadialSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.fe(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrAnchoredRadialSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.fc(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrAnchoredRadialSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.en(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrAnchoredRadialSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.ll(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * Returns the offset value for this series if grouped on a category axis.\n  \r\n  */\n\n\n  IgrAnchoredRadialSeries.prototype.getOffsetValue = function () {\n    var iv = this.i.getOffsetValue();\n    return iv;\n  };\n  /**\n   * Returns the width of the category grouping this series is in.\n  \r\n  */\n\n\n  IgrAnchoredRadialSeries.prototype.getCategoryWidth = function () {\n    var iv = this.i.getCategoryWidth();\n    return iv;\n  };\n  /**\n   * Scrolls the specified item into the view.\n  \r\n  * @param item  * The item to scroll into view.\n  */\n\n\n  IgrAnchoredRadialSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.c9(item);\n    return iv;\n  };\n\n  return IgrAnchoredRadialSeries;\n}(IgrRadialBase);\n\nexport { IgrAnchoredRadialSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-anchored-radial-series.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { TrendLineType_$type } from \"igniteui-react-core\";\nimport { IgrRadialBase } from \"./igr-radial-base\";\nimport { ensureEnum, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent anchored radial category series.\n*/\nvar IgrAnchoredRadialSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrAnchoredRadialSeries, _super);\n    function IgrAnchoredRadialSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or sets the item path that provides the values for the current series.\n        */\n        get: function () {\n            return this.i.n8;\n        },\n        set: function (v) {\n            this.i.n8 = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineType\", {\n        /**\n         * Gets or sets the trend type for the current series object.\n        */\n        get: function () {\n            return this.i.nu;\n        },\n        set: function (v) {\n            this.i.nu = ensureEnum(TrendLineType_$type, v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineBrush\", {\n        /**\n         * Gets or sets the brush that specifies how to the current series\n         * object's Trend line is drawn.\n        */\n        get: function () {\n            return brushToString(this.i.om);\n        },\n        set: function (v) {\n            this.i.om = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"actualTrendLineBrush\", {\n        /**\n         * Gets the effective TrendLineBrush for this series.\n        */\n        get: function () {\n            return brushToString(this.i.ol);\n        },\n        set: function (v) {\n            this.i.ol = stringToBrush(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineThickness\", {\n        /**\n         * Gets or sets the thickness of the current series object's trend line.\n        */\n        get: function () {\n            return this.i.n4;\n        },\n        set: function (v) {\n            this.i.n4 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLinePeriod\", {\n        /**\n         * Gets or sets the trend line period for the current series.\n         * The typical, and initial, value for bollinger band periods is 20.\n        */\n        get: function () {\n            return this.i.n5;\n        },\n        set: function (v) {\n            this.i.n5 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrAnchoredRadialSeries.prototype, \"trendLineZIndex\", {\n        /**\n         * Sets or Gets the Z index of the trendline.\n        */\n        get: function () {\n            return this.i.n6;\n        },\n        set: function (v) {\n            this.i.n6 = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrAnchoredRadialSeries.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.fs(item, memberPathName);\n        return (iv);\n    };\n    IgrAnchoredRadialSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.fe(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrAnchoredRadialSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.fc(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrAnchoredRadialSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.en(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrAnchoredRadialSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.ll(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * Returns the offset value for this series if grouped on a category axis.\n    \r\n    */\n    IgrAnchoredRadialSeries.prototype.getOffsetValue = function () {\n        var iv = this.i.getOffsetValue();\n        return (iv);\n    };\n    /**\n     * Returns the width of the category grouping this series is in.\n    \r\n    */\n    IgrAnchoredRadialSeries.prototype.getCategoryWidth = function () {\n        var iv = this.i.getCategoryWidth();\n        return (iv);\n    };\n    /**\n     * Scrolls the specified item into the view.\n    \r\n    * @param item  * The item to scroll into view.\n    */\n    IgrAnchoredRadialSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.c9(item);\n        return (iv);\n    };\n    return IgrAnchoredRadialSeries;\n}(IgrRadialBase));\nexport { IgrAnchoredRadialSeries };\n//# sourceMappingURL=igr-anchored-radial-series.js.map\n"]},"metadata":{},"sourceType":"module"}