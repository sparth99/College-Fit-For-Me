{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar AverageTrueRangeIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(AverageTrueRangeIndicatorStrategy, _super);\n\n  function AverageTrueRangeIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AverageTrueRangeIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.o(a.trueRange.basedOn);\n    c.o(b.a.c);\n    return c;\n  };\n\n  AverageTrueRangeIndicatorStrategy.prototype.a = function (a, b) {\n    var e_1, _a;\n\n    var c = 0;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(b.a.b(a.trueRange, a.period))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var d = _c.value;\n        a.indicatorColumn.item(c, d);\n        ++c;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return true;\n  };\n\n  AverageTrueRangeIndicatorStrategy.$t = markType(AverageTrueRangeIndicatorStrategy, 'AverageTrueRangeIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return AverageTrueRangeIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { AverageTrueRangeIndicatorStrategy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/AverageTrueRangeIndicatorStrategy.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAA+K,YAA/K,EAA6L,QAA7L,EAA6M,QAA7M,QAA6N,qBAA7N;AAGA,SAAS,MAAT,QAAuB,qBAAvB;AAIA;;;;AAGA,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuD,EAAA,OAAA,CAAA,SAAA,CAAA,iCAAA,EAAA,MAAA;;AAAvD,WAAA,iCAAA,GAAA;;AAgBC;;AAdA,EAAA,iCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,SAAF,CAAY,OAAhB;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAF,CAAI,CAAR;AACA,WAAO,CAAP;AACA,GALD;;AAMA,EAAA,iCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;;;AACjF,QAAI,CAAC,GAAW,CAAhB;;;AACA,WAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAS,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAC,CAAC,SAAR,EAAmB,CAAC,CAAC,MAArB,CAAT,CAAR,CAAA,EAA8C,EAAA,GAAA,EAAA,CAAA,IAAA,EAA5D,EAA4D,CAAA,EAAA,CAAA,IAA5D,EAA4D,EAAA,GAAA,EAAA,CAAA,IAAA,EAA5D,EAA8D;AAAzD,YAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,QAAA,CAAC,CAAC,eAAF,CAAkB,IAAlB,CAAuB,CAAvB,EAA0B,CAA1B;AACA,UAAE,CAAF;AACA;;;;;;;;AACD,O,SACA;AAdM,YAAA,GAAA,EAeR,MAAA,GAAA,CAAA,KAAA;AAhBuD;AAA1C;;;GAQZ;;;;CARD,C,4BAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar AverageTrueRangeIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AverageTrueRangeIndicatorStrategy, _super);\n    function AverageTrueRangeIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AverageTrueRangeIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.o(a.trueRange.basedOn);\n        c.o(b.a.c);\n        return c;\n    };\n    AverageTrueRangeIndicatorStrategy.prototype.a = function (a, b) {\n        var e_1, _a;\n        var c = 0;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(b.a.b(a.trueRange, a.period))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var d = _c.value;\n                a.indicatorColumn.item(c, d);\n                ++c;\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return true;\n    };\n    AverageTrueRangeIndicatorStrategy.$t = markType(AverageTrueRangeIndicatorStrategy, 'AverageTrueRangeIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return AverageTrueRangeIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { AverageTrueRangeIndicatorStrategy };\n//# sourceMappingURL=AverageTrueRangeIndicatorStrategy.js.map\n"]},"metadata":{},"sourceType":"module"}