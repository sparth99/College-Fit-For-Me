{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ConfigurationMessage_Spark } from \"./ConfigurationMessage_Spark\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PropertyChangedMessage_Spark =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PropertyChangedMessage_Spark, _super);\n\n  function PropertyChangedMessage_Spark() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = null;\n    _this.c = null;\n    _this.b = null;\n    return _this;\n  }\n\n  Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"propertyName\", {\n    get: function () {\n      return this.f;\n    },\n    set: function (a) {\n      this.f = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"oldValue\", {\n    get: function () {\n      return this.c;\n    },\n    set: function (a) {\n      this.c = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"newValue\", {\n    get: function () {\n      return this.b;\n    },\n    set: function (a) {\n      this.b = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PropertyChangedMessage_Spark.prototype.toString = function () {\n    var a = \"null\";\n    var b = \"null\";\n\n    if (this.oldValue != null) {\n      a = this.oldValue.toString();\n    }\n\n    if (this.newValue != null) {\n      b = this.newValue.toString();\n    }\n\n    return \"PropertyChangedMessage[\" + this.propertyName + \", \" + a + \", \" + b + \"]\";\n  };\n\n  PropertyChangedMessage_Spark.$t = markType(PropertyChangedMessage_Spark, 'PropertyChangedMessage_Spark', ConfigurationMessage_Spark.$);\n  return PropertyChangedMessage_Spark;\n}(ConfigurationMessage_Spark);\n\nexport { PropertyChangedMessage_Spark };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PropertyChangedMessage_Spark.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,0BAAT,QAA2C,8BAA3C;AACA,SAAqB,QAArB,QAAqC,qBAArC;AAEA;;;;AAGA,IAAA,4BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,OAAA,CAAA,SAAA,CAAA,4BAAA,EAAA,MAAA;;AAAlD,WAAA,4BAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,CAAA,GAAY,IAAZ;AAOA,IAAA,KAAA,CAAA,CAAA,GAAS,IAAT;AAOA,IAAA,KAAA,CAAA,CAAA,GAAS,IAAT;;AAkBR;;AA/BA,EAAA,MAAA,CAAA,cAAA,CAAI,4BAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;SAAhB,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFe;SAGhB,UAAiB,CAAjB,EAA0B;AACzB,WAAK,CAAL,GAAS,CAAT;AACA,KALe;oBAAA;;AAAA,GAAhB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,4BAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFW;SAGZ,UAAa,CAAb,EAAmB;AAClB,WAAK,CAAL,GAAS,CAAT;AACA,KALW;oBAAA;;AAAA,GAAZ;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,4BAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFW;SAGZ,UAAa,CAAb,EAAmB;AAClB,WAAK,CAAL,GAAS,CAAT;AACA,KALW;oBAAA;;AAAA,GAAZ;;AAMA,EAAA,4BAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACC,QAAI,CAAC,GAAW,MAAhB;AACA,QAAI,CAAC,GAAW,MAAhB;;AACA,QAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AAC1B,MAAA,CAAC,GAAG,KAAK,QAAL,CAAc,QAAd,EAAJ;AACA;;AACD,QAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AAC1B,MAAA,CAAC,GAAG,KAAK,QAAL,CAAc,QAAd,EAAJ;AACA;;AACD,WAAO,4BAA4B,KAAK,YAAjC,GAAgD,IAAhD,GAAuD,CAAvD,GAA2D,IAA3D,GAAkE,CAAlE,GAAsE,GAA7E;AACA,GAVD;;AAtBO,EAAA,4BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4BAAD,EAA+B,8BAA/B,EAAqE,0BAA2B,CAAC,CAAjG,CAAnB;AAiCR,SAAA,4BAAA;AAAC,CAlCD,CAAkD,0BAAlD,CAAA;;SAAa,4B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { ConfigurationMessage_Spark } from \"./ConfigurationMessage_Spark\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PropertyChangedMessage_Spark = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PropertyChangedMessage_Spark, _super);\n    function PropertyChangedMessage_Spark() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = null;\n        _this.c = null;\n        _this.b = null;\n        return _this;\n    }\n    Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"propertyName\", {\n        get: function () {\n            return this.f;\n        },\n        set: function (a) {\n            this.f = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"oldValue\", {\n        get: function () {\n            return this.c;\n        },\n        set: function (a) {\n            this.c = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PropertyChangedMessage_Spark.prototype, \"newValue\", {\n        get: function () {\n            return this.b;\n        },\n        set: function (a) {\n            this.b = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PropertyChangedMessage_Spark.prototype.toString = function () {\n        var a = \"null\";\n        var b = \"null\";\n        if (this.oldValue != null) {\n            a = this.oldValue.toString();\n        }\n        if (this.newValue != null) {\n            b = this.newValue.toString();\n        }\n        return \"PropertyChangedMessage[\" + this.propertyName + \", \" + a + \", \" + b + \"]\";\n    };\n    PropertyChangedMessage_Spark.$t = markType(PropertyChangedMessage_Spark, 'PropertyChangedMessage_Spark', ConfigurationMessage_Spark.$);\n    return PropertyChangedMessage_Spark;\n}(ConfigurationMessage_Spark));\nexport { PropertyChangedMessage_Spark };\n//# sourceMappingURL=PropertyChangedMessage_Spark.js.map\n"]},"metadata":{},"sourceType":"module"}