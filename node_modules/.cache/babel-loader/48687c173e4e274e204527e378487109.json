{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar IndicatorPane =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IndicatorPane, _super);\n\n  function IndicatorPane() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.c = null;\n    _this.d = null;\n    _this.a = null;\n    return _this;\n  }\n\n  IndicatorPane.prototype.h = function (a) {\n    this.c = a;\n\n    if (this.c == null) {\n      return;\n    }\n\n    this.d = this.c.createElement(\"div\");\n    this.d.setStyleProperty(\"height\", \"100%\");\n    this.d.setStyleProperty(\"width\", \"100%\");\n    this.d.setStyleProperty(\"display\", \"grid\");\n    this.d.setStyleProperty(\"display\", \"-ms-grid\");\n    this.d.setStyleProperty(\"-ms-grid-columns\", \"100%\");\n    this.c.append(this.d);\n    this.i();\n  };\n\n  IndicatorPane.prototype.i = function () {\n    if (this.d == null) {\n      return;\n    }\n\n    this.d.removeChildren();\n\n    if (this.b == null) {\n      return;\n    }\n\n    var a = \"\";\n\n    for (var b = 0; b < this.b.count; b++) {\n      var c = this.b._inner[b];\n      var d = this.c.createElement(\"div\");\n      d.setStyleProperty(\"grid-row\", (b + 1).toString());\n      d.setStyleProperty(\"grid-column\", 1 .toString());\n      d.setStyleProperty(\"-ms-grid-row\", (b + 1).toString());\n      d.setStyleProperty(\"-ms-grid-column\", 1 .toString());\n      this.d.append(d);\n      var e = this.c.getSubRenderer(d);\n      c.provideContainer(e);\n      a += \" 1fr\";\n    }\n\n    a = a.trim();\n    this.d.setStyleProperty(\"-ms-grid-rows\", a);\n  };\n\n  Object.defineProperty(IndicatorPane.prototype, \"b\", {\n    get: function () {\n      return this.a;\n    },\n    set: function (a) {\n      var b = this.b;\n\n      if (a != b) {\n        this.a = a;\n        this.g(\"IndicatorCharts\", b, this.b);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IndicatorPane.prototype.g = function (a, b, c) {\n    switch (a) {\n      case \"IndicatorCharts\":\n        this.i();\n        break;\n    }\n  };\n\n  IndicatorPane.prototype.f = function () {\n    var e_1, _a;\n\n    if (this.b == null || this.c == null) {\n      return;\n    }\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.notifyContainerResized();\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IndicatorPane.$t = markType(IndicatorPane, 'IndicatorPane');\n  return IndicatorPane;\n}(Base);\n\nexport { IndicatorPane };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/IndicatorPane.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar IndicatorPane = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IndicatorPane, _super);\n    function IndicatorPane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.c = null;\n        _this.d = null;\n        _this.a = null;\n        return _this;\n    }\n    IndicatorPane.prototype.h = function (a) {\n        this.c = a;\n        if (this.c == null) {\n            return;\n        }\n        this.d = this.c.createElement(\"div\");\n        this.d.setStyleProperty(\"height\", \"100%\");\n        this.d.setStyleProperty(\"width\", \"100%\");\n        this.d.setStyleProperty(\"display\", \"grid\");\n        this.d.setStyleProperty(\"display\", \"-ms-grid\");\n        this.d.setStyleProperty(\"-ms-grid-columns\", \"100%\");\n        this.c.append(this.d);\n        this.i();\n    };\n    IndicatorPane.prototype.i = function () {\n        if (this.d == null) {\n            return;\n        }\n        this.d.removeChildren();\n        if (this.b == null) {\n            return;\n        }\n        var a = \"\";\n        for (var b = 0; b < this.b.count; b++) {\n            var c = this.b._inner[b];\n            var d = this.c.createElement(\"div\");\n            d.setStyleProperty(\"grid-row\", (b + 1).toString());\n            d.setStyleProperty(\"grid-column\", (1).toString());\n            d.setStyleProperty(\"-ms-grid-row\", (b + 1).toString());\n            d.setStyleProperty(\"-ms-grid-column\", (1).toString());\n            this.d.append(d);\n            var e = this.c.getSubRenderer(d);\n            c.provideContainer(e);\n            a += \" 1fr\";\n        }\n        a = a.trim();\n        this.d.setStyleProperty(\"-ms-grid-rows\", a);\n    };\n    Object.defineProperty(IndicatorPane.prototype, \"b\", {\n        get: function () {\n            return this.a;\n        },\n        set: function (a) {\n            var b = this.b;\n            if (a != b) {\n                this.a = a;\n                this.g(\"IndicatorCharts\", b, this.b);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IndicatorPane.prototype.g = function (a, b, c) {\n        switch (a) {\n            case \"IndicatorCharts\":\n                this.i();\n                break;\n        }\n    };\n    IndicatorPane.prototype.f = function () {\n        var e_1, _a;\n        if (this.b == null || this.c == null) {\n            return;\n        }\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.b)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.notifyContainerResized();\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IndicatorPane.$t = markType(IndicatorPane, 'IndicatorPane');\n    return IndicatorPane;\n}(Base));\nexport { IndicatorPane };\n//# sourceMappingURL=IndicatorPane.js.map\n"]},"metadata":{},"sourceType":"module"}