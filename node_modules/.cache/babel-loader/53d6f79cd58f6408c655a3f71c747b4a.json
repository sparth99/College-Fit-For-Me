{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { TRIXIndicator } from \"./TRIXIndicator\";\n/**\n * Represents a IgxDataChartComponent TRIX indicator series.\n * Default required members: Close\n*\n* The `IgrTRIXIndicator` class specify the series as Trix Indicator series.\n*\n* ```ts\n*   <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n* <IgrTRIXIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrTRIXIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrTRIXIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrTRIXIndicator, _super);\n\n  function IgrTRIXIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrTRIXIndicator.prototype.createImplementation = function () {\n    return new TRIXIndicator();\n  };\n\n  Object.defineProperty(IgrTRIXIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrTRIXIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current TRIXIndicator object.\n     * The typical, and initial, value for TRIX periods is 15.\n    *\n    * The `period` property is used for moving average period of the current TRIXIndicator object.\n    *\n    * ```ts\n    *   <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    * <IgrTRIXIndicator\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod=\"7\"  />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 30;\n    * ```\n    */\n    get: function () {\n      return this.i.qx;\n    },\n    set: function (v) {\n      this.i.qx = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrTRIXIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrTRIXIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-trix-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,aAAT,QAA8B,iBAA9B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAA,gBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAA,MAAA;;AAarC,WAAA,gBAAA,CAAY,KAAZ,EAAyC;WACxC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,gBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,aAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAkD5B,EAAA,MAAA,CAAA,cAAA,CAAI,gBAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AA5CV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA4CA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFS;SAGV,UAAW,CAAX,EAAoB;AACnB,WAAK,CAAL,CAAO,EAAP,GAAY,CAAC,CAAb;AACA,KALS;oBAAA;;AAAA,GAAV;AAMD,SAAA,gBAAA;AAAC,CAlED,CAAsC,yBAAtC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { TRIXIndicator } from \"./TRIXIndicator\";\n/**\n * Represents a IgxDataChartComponent TRIX indicator series.\n * Default required members: Close\n*\n* The `IgrTRIXIndicator` class specify the series as Trix Indicator series.\n*\n* ```ts\n*   <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n* <IgrTRIXIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrTRIXIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrTRIXIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrTRIXIndicator, _super);\n    function IgrTRIXIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrTRIXIndicator.prototype.createImplementation = function () {\n        return new TRIXIndicator();\n    };\n    Object.defineProperty(IgrTRIXIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrTRIXIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current TRIXIndicator object.\n         * The typical, and initial, value for TRIX periods is 15.\n        *\n        * The `period` property is used for moving average period of the current TRIXIndicator object.\n        *\n        * ```ts\n        *   <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        * <IgrTRIXIndicator\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod=\"7\"  />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 30;\n        * ```\n        */\n        get: function () {\n            return this.i.qx;\n        },\n        set: function (v) {\n            this.i.qx = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrTRIXIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrTRIXIndicator };\n//# sourceMappingURL=igr-trix-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}