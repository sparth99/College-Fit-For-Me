{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { TrendLineManagerBase$1 } from \"./TrendLineManagerBase$1\";\nimport { Point_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { TrendFitCalculator } from \"./TrendFitCalculator\";\nimport { TrendAverageCalculator } from \"./TrendAverageCalculator\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ScatterTrendLineManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ScatterTrendLineManager, _super);\n\n  function ScatterTrendLineManager() {\n    return _super.call(this, Point_$type) || this;\n  }\n\n  ScatterTrendLineManager.prototype.get_g$a = function () {\n    return 4;\n  };\n\n  Object.defineProperty(ScatterTrendLineManager.prototype, \"g$a\", {\n    get: function () {\n      return this.get_g$a();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ScatterTrendLineManager.prototype.p = function (a, b, c, d, e, f, g, h, i, j, k) {\n    var e_1, _a;\n\n    var l = j;\n    var m = k;\n    var n = new List$1(Point_$type, 0);\n    var o = 0;\n\n    if (c != null) {\n      o = c.count;\n    }\n\n    if (d != null) {\n      o = Math.min(o, d.count);\n    }\n\n    if (!h.g.isEmpty && !h.f.isEmpty) {\n      if (b == 0) {\n        this.a = null;\n        this.d.clear();\n      } else if (this.c(b)) {\n        this.d.clear();\n        this.a = TrendFitCalculator.a(n, b, h, this.a, o, function (p) {\n          return c.item(p);\n        }, function (p) {\n          return d.item(p);\n        }, f, g, l, m);\n      } else if (this.b(b)) {\n        this.a = null;\n        this.d.clear();\n        TrendAverageCalculator.c(b, this.d, c, d, e);\n\n        try {\n          for (var _b = tslib_1.__values(fromEnum(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var p = _c.value;\n            var q = f(p.x);\n            var r = g(p.y);\n\n            if (!isNaN_(q) && !isNaN_(r)) {\n              n.add({\n                $type: Point_$type,\n                x: q,\n                y: r\n              });\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n\n      this.n(n, h, a, i);\n    }\n  };\n\n  ScatterTrendLineManager.$t = markType(ScatterTrendLineManager, 'ScatterTrendLineManager', TrendLineManagerBase$1.$.specialize(Point_$type));\n  return ScatterTrendLineManager;\n}(TrendLineManagerBase$1);\n\nexport { ScatterTrendLineManager };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ScatterTrendLineManager.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,sBAAT,QAAuC,0BAAvC;AACA,SAAsL,WAAtL,EAAmM,QAAnM,EAAmN,QAAnN,QAA8O,qBAA9O;AAEA,SAAS,MAAT,QAAuB,qBAAvB;AAKA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AACA,SAAS,MAAT,QAAuB,qBAAvB;AAEA;;;;AAGA,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAE5C,WAAA,uBAAA,GAAA;WACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAN,KAAkB,I;AAClB;;AACS,EAAA,uBAAA,CAAA,SAAA,CAAA,OAAA,GAAV,YAAA;AACC,WAAO,CAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAI,uBAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;SAAP,YAAA;AACC,aAAO,KAAK,OAAL,EAAP;AACA,KAFM;oBAAA;;AAAA,GAAP;;AAGA,EAAA,uBAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAoB,CAApB,EAAsC,CAAtC,EAA0D,CAA1D,EAA8E,CAA9E,EAAyF,CAAzF,EAAsH,CAAtH,EAAmJ,CAAnJ,EAA6K,CAA7K,EAAyL,CAAzL,EAAoM,CAApM,EAA6M;;;AAC5M,QAAI,CAAC,GAAW,CAAhB;AACA,QAAI,CAAC,GAAW,CAAhB;AACA,QAAI,CAAC,GAAkB,IAAI,MAAJ,CAAkB,WAAlB,EAA+B,CAA/B,CAAvB;AACA,QAAI,CAAC,GAAW,CAAhB;;AACA,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,MAAA,CAAC,GAAG,CAAC,CAAC,KAAN;AACA;;AACD,QAAI,CAAC,IAAI,IAAT,EAAe;AACd,MAAA,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,CAAC,KAAd,CAAJ;AACA;;AACD,QAAI,CAAC,CAAC,CAAC,CAAF,CAAI,OAAL,IAAgB,CAAC,CAAC,CAAC,CAAF,CAAI,OAAzB,EAAkC;AACjC,UAAI,CAAC,IAAI,CAAT,EAAY;AACX,aAAK,CAAL,GAAS,IAAT;AACA,aAAK,CAAL,CAAO,KAAP;AACA,OAHD,MAGO,IAAI,KAAK,CAAL,CAAO,CAAP,CAAJ,EAAe;AACrB,aAAK,CAAL,CAAO,KAAP;AACA,aAAK,CAAL,GAAS,kBAAkB,CAAC,CAAnB,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,CAAtC,EAAyC,UAAC,CAAD,EAAU;AAAK,iBAAA,CAAC,CAAC,IAAF,CAAA,CAAA,CAAA;AAAS,SAAjE,EAAmE,UAAC,CAAD,EAAU;AAAK,iBAAA,CAAC,CAAC,IAAF,CAAA,CAAA,CAAA;AAAS,SAA3F,EAA6F,CAA7F,EAAgG,CAAhG,EAAmG,CAAnG,EAAsG,CAAtG,CAAT;AACA,OAHM,MAGA,IAAI,KAAK,CAAL,CAAO,CAAP,CAAJ,EAAe;AACrB,aAAK,CAAL,GAAS,IAAT;AACA,aAAK,CAAL,CAAO,KAAP;AACA,QAAA,sBAAsB,CAAC,CAAvB,CAAyB,CAAzB,EAA4B,KAAK,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C;;;AACA,eAAc,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,CAAA,QAAQ,CAAQ,KAAK,CAAb,CAAR,CAAA,EAAuB,EAAA,GAAA,EAAA,CAAA,IAAA,EAArC,EAAqC,CAAA,EAAA,CAAA,IAArC,EAAqC,EAAA,GAAA,EAAA,CAAA,IAAA,EAArC,EAAuC;AAAlC,gBAAI,CAAC,GAAA,EAAA,CAAA,KAAL;AACJ,gBAAI,CAAC,GAAW,CAAC,CAAC,CAAC,CAAC,CAAH,CAAjB;AACA,gBAAI,CAAC,GAAW,CAAC,CAAC,CAAC,CAAC,CAAH,CAAjB;;AACA,gBAAI,CAAC,MAAM,CAAC,CAAD,CAAP,IAAc,CAAC,MAAM,CAAC,CAAD,CAAzB,EAA8B;AAC7B,cAAA,CAAC,CAAC,GAAF,CAAa;AAAE,gBAAA,KAAK,EAAE,WAAT;AAAsB,gBAAA,CAAC,EAAE,CAAzB;AAA4B,gBAAA,CAAC,EAAE;AAA/B,eAAb;AACA;AACD;;;;;;;;AACD,W,SACe;AAChB,gBAAA,GAAA,EACD,MAAA,GAAA,CAAA,KAAA;AA1CM;AA2CR;AA5C6C;;AAAhC,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;GAWZ;;;;CAXD,C,sBAAA,CAAA","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { TrendLineManagerBase$1 } from \"./TrendLineManagerBase$1\";\nimport { Point_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { TrendFitCalculator } from \"./TrendFitCalculator\";\nimport { TrendAverageCalculator } from \"./TrendAverageCalculator\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ScatterTrendLineManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScatterTrendLineManager, _super);\n    function ScatterTrendLineManager() {\n        return _super.call(this, Point_$type) || this;\n    }\n    ScatterTrendLineManager.prototype.get_g$a = function () {\n        return 4;\n    };\n    Object.defineProperty(ScatterTrendLineManager.prototype, \"g$a\", {\n        get: function () {\n            return this.get_g$a();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScatterTrendLineManager.prototype.p = function (a, b, c, d, e, f, g, h, i, j, k) {\n        var e_1, _a;\n        var l = j;\n        var m = k;\n        var n = new List$1(Point_$type, 0);\n        var o = 0;\n        if (c != null) {\n            o = c.count;\n        }\n        if (d != null) {\n            o = Math.min(o, d.count);\n        }\n        if (!h.g.isEmpty && !h.f.isEmpty) {\n            if (b == 0) {\n                this.a = null;\n                this.d.clear();\n            }\n            else if (this.c(b)) {\n                this.d.clear();\n                this.a = TrendFitCalculator.a(n, b, h, this.a, o, function (p) { return c.item(p); }, function (p) { return d.item(p); }, f, g, l, m);\n            }\n            else if (this.b(b)) {\n                this.a = null;\n                this.d.clear();\n                TrendAverageCalculator.c(b, this.d, c, d, e);\n                try {\n                    for (var _b = tslib_1.__values(fromEnum(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var p = _c.value;\n                        var q = f(p.x);\n                        var r = g(p.y);\n                        if (!isNaN_(q) && !isNaN_(r)) {\n                            n.add({ $type: Point_$type, x: q, y: r });\n                        }\n                    }\n                }\n                catch (e_1_1) {\n                    e_1 = { error: e_1_1 };\n                }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return))\n                            _a.call(_b);\n                    }\n                    finally {\n                        if (e_1)\n                            throw e_1.error;\n                    }\n                }\n            }\n            this.n(n, h, a, i);\n        }\n    };\n    ScatterTrendLineManager.$t = markType(ScatterTrendLineManager, 'ScatterTrendLineManager', TrendLineManagerBase$1.$.specialize(Point_$type));\n    return ScatterTrendLineManager;\n}(TrendLineManagerBase$1));\nexport { ScatterTrendLineManager };\n//# sourceMappingURL=ScatterTrendLineManager.js.map\n"]},"metadata":{},"sourceType":"module"}