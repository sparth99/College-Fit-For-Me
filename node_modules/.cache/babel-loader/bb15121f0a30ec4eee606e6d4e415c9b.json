{"ast":null,"code":"var _jsxFileName = \"/usr/python/src/Components/ProfileCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-bootstrap';\nconst styles = {};\nexport default function ProfileCard(props) {\n  const {\n    member\n  } = props;\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: member.photoURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, member.name), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, member.role), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, member.bio), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Commits: \", member.commitCount), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Issues: \", member.issueCount), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Unit Tests: \", member.testCount)));\n}\nProfileCard.propTypes = {\n  member: PropTypes.shape({\n    photoURL: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    commitCount: PropTypes.number.isRequired,\n    issueCount: PropTypes.number.isRequired,\n    testCount: PropTypes.number.isRequired\n  })\n};","map":{"version":3,"sources":["/usr/python/src/Components/ProfileCard.js"],"names":["React","PropTypes","Card","styles","ProfileCard","props","member","photoURL","name","role","bio","commitCount","issueCount","testCount","propTypes","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,KAAlB;AAAwB,IAAA,GAAG,EAAEC,MAAM,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,MAAM,CAACE,IAApB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,MAAM,CAACG,IAAnB,CAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,MAAM,CAACI,GAAnB,CAHF,EAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqBJ,MAAM,CAACK,WAA5B,CAJF,EAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoBL,MAAM,CAACM,UAA3B,CALF,EAME,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAwBN,MAAM,CAACO,SAA/B,CANF,CAFF,CADF;AAaD;AAEDT,WAAW,CAACU,SAAZ,GAAwB;AACtBR,EAAAA,MAAM,EAAEL,SAAS,CAACc,KAAV,CAAgB;AACtBR,IAAAA,QAAQ,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADL;AAEtBT,IAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UAFD;AAGtBR,IAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAHD;AAItBP,IAAAA,GAAG,EAAET,SAAS,CAACe,MAAV,CAAiBC,UAJA;AAKtBN,IAAAA,WAAW,EAAEV,SAAS,CAACiB,MAAV,CAAiBD,UALR;AAMtBL,IAAAA,UAAU,EAAEX,SAAS,CAACiB,MAAV,CAAiBD,UANP;AAOtBJ,IAAAA,SAAS,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD;AAPN,GAAhB;AADc,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card } from 'react-bootstrap';\n\nconst styles = {};\n\nexport default function ProfileCard(props) {\n  const { member } = props;\n  return (\n    <Card>\n      <Card.Img variant=\"top\" src={member.photoURL} />\n      <Card.Body>\n        <Card.Title>{member.name}</Card.Title>\n        <Card.Text>{member.role}</Card.Text>\n        <Card.Text>{member.bio}</Card.Text>\n        <Card.Text>Commits: {member.commitCount}</Card.Text>\n        <Card.Text>Issues: {member.issueCount}</Card.Text>\n        <Card.Text>Unit Tests: {member.testCount}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nProfileCard.propTypes = {\n  member: PropTypes.shape({\n    photoURL: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    commitCount: PropTypes.number.isRequired,\n    issueCount: PropTypes.number.isRequired,\n    testCount: PropTypes.number.isRequired,\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}