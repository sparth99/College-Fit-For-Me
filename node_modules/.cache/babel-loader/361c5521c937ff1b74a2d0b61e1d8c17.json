{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, delegateCombine, delegateRemove, runOn, markType } from \"igniteui-react-core\";\nimport { Message_Spark } from \"./Message_Spark\";\nimport { Queue$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar MessageChannel_Spark =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(MessageChannel_Spark, _super);\n\n  function MessageChannel_Spark() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.c = new Queue$1(Message_Spark.$);\n    _this.messageSent = null;\n    _this.a = null;\n    return _this;\n  }\n\n  MessageChannel_Spark.prototype.sendMessage = function (a) {\n    if (this.messageSent != null) {\n      this.messageSent(a);\n    } else {\n      this.c.g(a);\n    }\n  };\n\n  MessageChannel_Spark.prototype.attachTarget = function (a) {\n    this.messageSent = delegateCombine(this.messageSent, a);\n\n    while (this.c.count > 0) {\n      var b = this.c.b();\n      this.messageSent(b);\n    }\n  };\n\n  MessageChannel_Spark.prototype.detachTarget = function (a) {\n    this.messageSent = delegateRemove(this.messageSent, a);\n  };\n\n  MessageChannel_Spark.prototype.connectTo = function (a) {\n    this.a = a;\n    this.attachTarget(runOn(this, this.sendToNext));\n  };\n\n  MessageChannel_Spark.prototype.detachFromNext = function () {\n    if (this.a == null) {\n      return;\n    }\n\n    this.detachTarget(runOn(this, this.sendToNext));\n    this.a = null;\n  };\n\n  MessageChannel_Spark.prototype.sendToNext = function (a) {\n    if (this.a != null) {\n      this.a.sendMessage(a);\n    }\n  };\n\n  MessageChannel_Spark.prototype.toString = function () {\n    return \"MessageQueue\";\n  };\n\n  MessageChannel_Spark.$t = markType(MessageChannel_Spark, 'MessageChannel_Spark');\n  return MessageChannel_Spark;\n}(Base);\n\nexport { MessageChannel_Spark };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/MessageChannel_Spark.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAe,eAAf,EAAgC,cAAhC,EAAgD,KAAhD,EAA6D,QAA7D,QAA6E,qBAA7E;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,OAAT,QAAwB,qBAAxB;AAEA;;;;AAGA,IAAA,oBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,OAAA,CAAA,SAAA,CAAA,oBAAA,EAAA,MAAA;;AAA1C,WAAA,oBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAES,IAAA,KAAA,CAAA,CAAA,GAA4B,IAAI,OAAJ,CAAiC,aAAc,CAAC,CAAhD,CAA5B;AAeR,IAAA,KAAA,CAAA,WAAA,GAAgD,IAAhD;AAIQ,IAAA,KAAA,CAAA,CAAA,GAA0B,IAA1B;;AAoBR;;AAtCA,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,CAAZ,EAA4B;AAC3B,QAAI,KAAK,WAAL,IAAoB,IAAxB,EAA8B;AAC7B,WAAK,WAAL,CAAiB,CAAjB;AACA,KAFD,MAEO;AACN,WAAK,CAAL,CAAO,CAAP,CAAS,CAAT;AACA;AACD,GAND;;AAOA,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAgD;AAC/C,SAAK,WAAL,GAAmB,eAAe,CAAC,KAAK,WAAN,EAAmB,CAAnB,CAAlC;;AACA,WAAO,KAAK,CAAL,CAAO,KAAP,GAAe,CAAtB,EAAyB;AACxB,UAAI,CAAC,GAAiC,KAAK,CAAL,CAAO,CAAP,EAAtC;AACA,WAAK,WAAL,CAAiB,CAAjB;AACA;AACD,GAND;;AAQA,EAAA,oBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAgD;AAC/C,SAAK,WAAL,GAAmB,cAAc,CAAC,KAAK,WAAN,EAAmB,CAAnB,CAAjC;AACA,GAFD;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,CAAV,EAAiC;AAChC,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,YAAL,CAAkB,KAAK,CAAC,IAAD,EAAO,KAAK,UAAZ,CAAvB;AACA,GAHD;;AAIA,EAAA,oBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACC,QAAI,KAAK,CAAL,IAAU,IAAd,EAAoB;AACnB;AACA;;AACD,SAAK,YAAL,CAAkB,KAAK,CAAC,IAAD,EAAO,KAAK,UAAZ,CAAvB;AACA,SAAK,CAAL,GAAS,IAAT;AACA,GAND;;AAOA,EAAA,oBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAA2B;AAC1B,QAAI,KAAK,CAAL,IAAU,IAAd,EAAoB;AACnB,WAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB;AACA;AACD,GAJD;;AAKA,EAAA,oBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACC,WAAO,cAAP;AACA,GAFD;;AArCO,EAAA,oBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,oBAAD,EAAuB,sBAAvB,CAAnB;AAwCR,SAAA,oBAAA;AAAC,CAzCD,CAA0C,IAA1C,CAAA;;SAAa,oB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, delegateCombine, delegateRemove, runOn, markType } from \"igniteui-react-core\";\nimport { Message_Spark } from \"./Message_Spark\";\nimport { Queue$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar MessageChannel_Spark = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MessageChannel_Spark, _super);\n    function MessageChannel_Spark() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.c = new Queue$1(Message_Spark.$);\n        _this.messageSent = null;\n        _this.a = null;\n        return _this;\n    }\n    MessageChannel_Spark.prototype.sendMessage = function (a) {\n        if (this.messageSent != null) {\n            this.messageSent(a);\n        }\n        else {\n            this.c.g(a);\n        }\n    };\n    MessageChannel_Spark.prototype.attachTarget = function (a) {\n        this.messageSent = delegateCombine(this.messageSent, a);\n        while (this.c.count > 0) {\n            var b = this.c.b();\n            this.messageSent(b);\n        }\n    };\n    MessageChannel_Spark.prototype.detachTarget = function (a) {\n        this.messageSent = delegateRemove(this.messageSent, a);\n    };\n    MessageChannel_Spark.prototype.connectTo = function (a) {\n        this.a = a;\n        this.attachTarget(runOn(this, this.sendToNext));\n    };\n    MessageChannel_Spark.prototype.detachFromNext = function () {\n        if (this.a == null) {\n            return;\n        }\n        this.detachTarget(runOn(this, this.sendToNext));\n        this.a = null;\n    };\n    MessageChannel_Spark.prototype.sendToNext = function (a) {\n        if (this.a != null) {\n            this.a.sendMessage(a);\n        }\n    };\n    MessageChannel_Spark.prototype.toString = function () {\n        return \"MessageQueue\";\n    };\n    MessageChannel_Spark.$t = markType(MessageChannel_Spark, 'MessageChannel_Spark');\n    return MessageChannel_Spark;\n}(Base));\nexport { MessageChannel_Spark };\n//# sourceMappingURL=MessageChannel_Spark.js.map\n"]},"metadata":{},"sourceType":"module"}