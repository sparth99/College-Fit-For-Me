{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Number_$type, Point_$type, markType } from \"igniteui-react-core\";\nimport { PointCollection } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { PathFigureCollection } from \"igniteui-react-core\";\nimport { FastFlattener } from \"igniteui-react-core\";\nimport { ArrayAccessHelper } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar CategoryLineRasterizer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(CategoryLineRasterizer, _super);\n\n  function CategoryLineRasterizer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.a = false;\n    _this.n = new PointCollection(0);\n    return _this;\n  }\n\n  Object.defineProperty(CategoryLineRasterizer.prototype, \"o\", {\n    get: function () {\n      return this.n;\n    },\n    set: function (a) {\n      this.n = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CategoryLineRasterizer.prototype.m = function (a, b, c, d, e, f, g, h, i, j) {\n    var k = new PathGeometry();\n    var l = new PathGeometry();\n    var m = new PathGeometry();\n    a.ak = k;\n    b.ak = l;\n    c.ak = m;\n    k.c = new PathFigureCollection();\n    l.c = new PathFigureCollection();\n    m.c = new PathFigureCollection();\n    var n = new List$1(PolyLineSegment.$, 0);\n    var o = new List$1(PolyLineSegment.$, 0);\n    var p = new List$1(PolyLineSegment.$, 0);\n    var q = new List$1(PolyLineSegment.$, 0);\n\n    if (g == 0 || g == 1) {\n      var r = g == 1 ? h : null;\n      var s = 0;\n\n      for (var t = 0; t < d; t++) {\n        if (isNaN_(e._inner[t][1])) {\n          var u = t - s;\n          var v = g == 0 && u > 0 || g == 1 && u > 1;\n\n          if (v) {\n            if (g == 1 || n.count == 0) {\n              var w = new PolyLineSegment();\n              var x = new PolyLineSegment();\n              var y = new PolyLineSegment();\n              var z = new PolyLineSegment();\n              n.add(w);\n              o.add(x);\n              p.add(y);\n              q.add(z);\n            }\n\n            this.l(n._inner[n.count - 1]._points, o._inner[o.count - 1]._points, p._inner[p.count - 1]._points, q._inner[q.count - 1]._points, s, t - 1, e, f, r, i, j);\n          }\n\n          s = t + 1;\n        }\n      }\n\n      if (g == 1 || n.count == 0) {\n        var aa = new PolyLineSegment();\n        var ab = new PolyLineSegment();\n        var ac = new PolyLineSegment();\n        var ad = new PolyLineSegment();\n        n.add(aa);\n        o.add(ad);\n        p.add(ab);\n        q.add(ac);\n      }\n\n      this.l(n._inner[n.count - 1]._points, o._inner[o.count - 1]._points, p._inner[p.count - 1]._points, q._inner[q.count - 1]._points, s, d - 1, e, f, r, i, j);\n\n      if (r == null && n.count == 1 && h != null) {\n        this.d(n._inner[0], h);\n\n        if (o.count == 1) {\n          this.d(o._inner[0], h);\n        }\n      }\n    } else {\n      n.add(new PolyLineSegment());\n      o.add(new PolyLineSegment());\n      p.add(new PolyLineSegment());\n      q.add(new PolyLineSegment());\n      this.k(n._inner[0]._points, o._inner[0]._points, p._inner[0]._points, q._inner[0]._points, d, e, f, h, i, j);\n    }\n\n    var _loop_1 = function (ae) {\n      var e_1, _a;\n\n      var af = n._inner[ae];\n      var ag = o._inner[ae];\n      var ah = p._inner[ae];\n      var ai = q._inner[ae];\n\n      if (af._points.count > 0) {\n        var aj = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = af._points._inner[0];\n          return $ret;\n        }();\n\n        aj._segments.add(af);\n\n        k.c.add(aj);\n      }\n\n      if (ag._points.count > 0) {\n        var ak = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = ag._points._inner[0];\n          return $ret;\n        }();\n\n        ak._segments.add(ag);\n\n        m.c.add(ak);\n      }\n\n      if (ah._points.count > 0 && ai._points.count > 0) {\n        var al_1 = new PolyLineSegment();\n\n        if (h != null) {\n          var am = h.f;\n          h.f = true;\n          h.i = al_1._points;\n          h.k(ah._points, false);\n          h.k(ai._points, true);\n          h.i = null;\n          h.f = am;\n        } else {\n          try {\n            for (var _b = (e_1 = void 0, tslib_1.__values(fromEnum(ah._points))), _c = _b.next(); !_c.done; _c = _b.next()) {\n              var an = _c.value;\n\n              al_1._points.add(an);\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n\n          for (var ao = ai._points.count - 1; ao >= 0; ao--) {\n            al_1._points.add(ai._points._inner[ao]);\n          }\n        }\n\n        if (al_1._points.count > 0) {\n          var ap = function () {\n            var $ret = new PathFigure();\n            $ret.startPoint = al_1._points._inner[0];\n            return $ret;\n          }();\n\n          ap._segments.add(al_1);\n\n          l.c.add(ap);\n        }\n      }\n    };\n\n    for (var ae = 0; ae < n.count; ae++) {\n      _loop_1(ae);\n    }\n  };\n\n  CategoryLineRasterizer.prototype.d = function (a, b) {\n    var c = a._points;\n    b.i = a._points = new PointCollection(0);\n    b.k(c, false);\n    b.i = null;\n  };\n\n  CategoryLineRasterizer.prototype.k = function (a, b, c, d, e, f, g, h, i, j) {\n    this.l(a, b, c, d, 0, e - 1, f, g, h, i, j);\n  };\n\n  CategoryLineRasterizer.prototype.e = function (a, b, c, d, e, f, g) {\n    var h = FastFlattener.a(new List$1(Number_$type, 0), d, e, f, b, c, g);\n    var i = ArrayAccessHelper.c(h);\n    var j = ArrayAccessHelper.a(d);\n    var k = i != null;\n    var l = j != null;\n    var m = 0;\n    var n = h.count;\n    var o;\n    var p;\n    var q;\n\n    if (e) {\n      for (var r = 0; r < n; r++) {\n        m = k ? i[r] : h.item(r);\n        o = l ? j[m] : d._inner[m];\n        p = o[0];\n        q = o[1];\n        var s = {\n          $type: Point_$type,\n          x: p,\n          y: q\n        };\n        a.add(s);\n      }\n    } else if (f) {\n      for (var t = 0; t < n; t++) {\n        m = k ? i[t] : h.item(t);\n        o = l ? j[m] : d._inner[m];\n        p = o[0];\n        q = o[2];\n        var u = {\n          $type: Point_$type,\n          x: p,\n          y: q\n        };\n        a.add(u);\n      }\n    } else {\n      for (var v = 0; v < n; v++) {\n        m = k ? i[v] : h.item(v);\n        o = l ? j[m] : d._inner[m];\n        p = o[2];\n        q = o[3];\n        var w = {\n          $type: Point_$type,\n          x: p,\n          y: q\n        };\n        a.add(w);\n      }\n    }\n  };\n\n  CategoryLineRasterizer.prototype.b = function (a, b, c, d) {\n    c.i = a;\n    c.k(b, false);\n    c.i = null;\n  };\n\n  CategoryLineRasterizer.prototype.c = function (a, b, c, d, e) {\n    var f = c.f;\n    c.f = e;\n    this.b(a, b, c, d);\n    c.f = f;\n  };\n\n  CategoryLineRasterizer.prototype.l = function (a, b, c, d, e, f, g, h, i, j, k) {\n    if (f > -1) {\n      if (j == 1 && !this.a) {\n        var l = new PointCollection(0);\n        this.e(l, e, f, g, true, h, k);\n\n        if (i != null) {\n          this.b(a, l, i, k);\n        } else {\n          this.f(a, l);\n        }\n      } else {\n        var m = new PointCollection(0);\n        var n = new PointCollection(0);\n        this.e(m, e, f, g, true, h, k);\n        this.e(n, e, f, g, false, h, k);\n        this.f(c, m);\n        this.f(d, n);\n\n        if (i != null) {\n          this.b(a, m, i, k);\n          this.b(b, n, i, k);\n        } else {\n          this.f(a, m);\n          this.f(b, n);\n        }\n      }\n    }\n  };\n\n  CategoryLineRasterizer.prototype.i = function (a, b, c, d, e, f, g, h, i, j, k) {\n    this.j(a, b, c, d, e, f, g, h, i, j, k, null);\n  };\n\n  CategoryLineRasterizer.prototype.j = function (a, b, c, d, e, f, g, h, i, j, k, l) {\n    var m = new PathGeometry();\n    var n = new PathGeometry();\n    var o = new PathGeometry();\n    var p = new PathGeometry();\n    a.ak = m;\n    b.ak = n;\n    c.ak = o;\n    d.ak = p;\n    m.c = new PathFigureCollection();\n    n.c = new PathFigureCollection();\n    o.c = new PathFigureCollection();\n    p.c = new PathFigureCollection();\n    var q = new List$1(PolyLineSegment.$, 0);\n    var r = new List$1(PolyLineSegment.$, 0);\n    var s = new List$1(PolyLineSegment.$, 0);\n    var t = new List$1(PolyLineSegment.$, 0);\n\n    if (k == 0 || k == 1) {\n      var u = k == 1 ? l : null;\n      var v = 0;\n\n      for (var w = 0; w < e; w++) {\n        if (isNaN_(f._inner[w][1])) {\n          var x = w - v;\n          var y = k == 0 && x > 0 || k == 1 && x > 1;\n\n          if (y) {\n            if (k == 1 || r.count == 0) {\n              var z = new PolyLineSegment();\n              var aa = new PolyLineSegment();\n              var ab = new PolyLineSegment();\n              var ac = new PolyLineSegment();\n              q.add(z);\n              r.add(aa);\n              s.add(ab);\n              t.add(ac);\n            }\n\n            var ad = void 0;\n            var ae = void 0;\n            var af = void 0;\n            var ag = void 0;\n\n            if (l != null && k == 1) {\n              ad = new PointCollection(0);\n              ae = new PointCollection(0);\n              af = new PointCollection(0);\n              ag = new PointCollection(0);\n            } else {\n              ad = q._inner[q.count - 1]._points;\n              ae = r._inner[r.count - 1]._points;\n              af = s._inner[s.count - 1]._points;\n              ag = t._inner[t.count - 1]._points;\n            }\n\n            this.g(ad, ae, af, ag, v, w - 1, f, g, null, h, i);\n\n            if (k == 1) {\n              j(ad, ae, af, ag, false);\n\n              if (l != null) {\n                this.c(q._inner[q.count - 1]._points, ad, l, i, true);\n                this.c(r._inner[r.count - 1]._points, ae, l, i, false);\n                this.c(s._inner[s.count - 1]._points, af, l, i, true);\n                this.c(t._inner[t.count - 1]._points, ag, l, i, false);\n              }\n            }\n          }\n\n          v = w + 1;\n        }\n      }\n\n      if (k == 1 || r.count == 0) {\n        var ah = new PolyLineSegment();\n        var ai = new PolyLineSegment();\n        var aj = new PolyLineSegment();\n        var ak = new PolyLineSegment();\n        q.add(ah);\n        r.add(ai);\n        s.add(aj);\n        t.add(ak);\n      }\n\n      var al = void 0;\n      var am = void 0;\n      var an = void 0;\n      var ao = void 0;\n\n      if (l != null) {\n        al = new PointCollection(0);\n        this.f(al, q._inner[q.count - 1]._points);\n        am = new PointCollection(0);\n        this.f(am, r._inner[r.count - 1]._points);\n        an = new PointCollection(0);\n        this.f(an, s._inner[s.count - 1]._points);\n        ao = new PointCollection(0);\n        this.f(ao, t._inner[t.count - 1]._points);\n\n        q._inner[q.count - 1]._points.clear();\n\n        r._inner[r.count - 1]._points.clear();\n\n        s._inner[s.count - 1]._points.clear();\n\n        t._inner[t.count - 1]._points.clear();\n      } else {\n        al = q._inner[q.count - 1]._points;\n        am = r._inner[r.count - 1]._points;\n        an = s._inner[s.count - 1]._points;\n        ao = t._inner[t.count - 1]._points;\n      }\n\n      this.g(al, am, an, ao, v, e - 1, f, g, null, h, i);\n      j(al, am, an, ao, true);\n\n      if (l != null) {\n        this.c(q._inner[q.count - 1]._points, al, l, i, true);\n        this.c(r._inner[r.count - 1]._points, am, l, i, false);\n        this.c(s._inner[s.count - 1]._points, an, l, i, true);\n        this.c(t._inner[t.count - 1]._points, ao, l, i, false);\n      }\n    } else {\n      q.add(new PolyLineSegment());\n      r.add(new PolyLineSegment());\n      s.add(new PolyLineSegment());\n      t.add(new PolyLineSegment());\n      this.h(q._inner[0]._points, r._inner[0]._points, s._inner[0]._points, t._inner[0]._points, 0, e - 1, f, g, h, i);\n      j(q._inner[0]._points, r._inner[0]._points, s._inner[0]._points, t._inner[0]._points, true);\n    }\n\n    var _loop_2 = function (ap) {\n      var aq = q._inner[ap];\n      var ar = r._inner[ap];\n      var as = s._inner[ap];\n      var at = t._inner[ap];\n\n      if (aq._points.count > 0) {\n        var au = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = aq._points._inner[0];\n          return $ret;\n        }();\n\n        au._segments.add(aq);\n\n        m.c.add(au);\n      }\n\n      if (ar._points.count > 0) {\n        var av = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = ar._points._inner[0];\n          return $ret;\n        }();\n\n        av._segments.add(ar);\n\n        n.c.add(av);\n      }\n\n      if (as._points.count > 0) {\n        var aw = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = as._points._inner[0];\n          return $ret;\n        }();\n\n        aw._segments.add(as);\n\n        o.c.add(aw);\n      }\n\n      if (at._points.count > 0) {\n        var ax = function () {\n          var $ret = new PathFigure();\n          $ret.startPoint = at._points._inner[0];\n          return $ret;\n        }();\n\n        ax._segments.add(at);\n\n        p.c.add(ax);\n      }\n    };\n\n    for (var ap = 0; ap < r.count; ap++) {\n      _loop_2(ap);\n    }\n  };\n\n  CategoryLineRasterizer.prototype.h = function (a, b, c, d, e, f, g, h, i, j) {\n    this.g(a, b, c, d, e, f, g, h, null, i, j);\n  };\n\n  CategoryLineRasterizer.prototype.g = function (a, b, c, d, e, f, g, h, i, j, k) {\n    this.o.clear();\n\n    if (j == 1 && !this.a) {\n      var l = FastFlattener.a(new List$1(Number_$type, 0), g, true, h, e, f, k);\n      var m = l.count;\n      var n = 0;\n      var o = void 0;\n      var p = void 0;\n      var q = void 0;\n      var r = new PointCollection(0);\n\n      for (var s = 0; s < m; s++) {\n        n = l.item(s);\n        o = g._inner[n];\n        p = o[0];\n        q = o[1];\n        r.add({\n          $type: Point_$type,\n          x: p,\n          y: q\n        });\n      }\n\n      if (i != null) {\n        this.c(a, r, i, k, true);\n        this.c(d, r, i, k, false);\n        this.c(this.o, r, i, k, false);\n      } else {\n        this.f(a, r);\n        this.f(d, r);\n        this.f(this.o, r);\n      }\n    } else {\n      var t = FastFlattener.a(new List$1(Number_$type, 0), g, true, h, e, f, k);\n      var u = FastFlattener.a(new List$1(Number_$type, 0), g, false, h, e, f, k);\n      var v = t.count;\n      var w = u.count;\n      var x = 0;\n      var y = void 0;\n      var z = void 0;\n      var aa = void 0;\n      var ab = new PointCollection(0);\n      var ac = new PointCollection(0);\n\n      for (var ad = 0; ad < v; ad++) {\n        x = t.item(ad);\n        y = g._inner[x];\n        z = y[0];\n        aa = y[1];\n        ab.add({\n          $type: Point_$type,\n          x: z,\n          y: aa\n        });\n        ac.add({\n          $type: Point_$type,\n          x: z,\n          y: aa\n        });\n      }\n\n      var ae = new PointCollection(0);\n      var af = void 0;\n      var ag = void 0;\n\n      for (var ah = w - 1; ah >= 0; ah--) {\n        x = u.item(ah);\n        y = g._inner[x];\n\n        if (h) {\n          af = y[0];\n          ag = y[2];\n        } else {\n          af = y[2];\n          ag = y[3];\n        }\n\n        ae.add({\n          $type: Point_$type,\n          x: af,\n          y: ag\n        });\n        ac.add({\n          $type: Point_$type,\n          x: af,\n          y: ag\n        });\n      }\n\n      if (i != null) {\n        this.c(a, ab, i, k, true);\n        this.c(b, ab, i, k, false);\n        this.c(d, ae, i, k, false);\n        this.c(c, ac, i, k, true);\n      } else {\n        this.f(a, ab);\n        this.f(b, ab);\n        this.f(d, ae);\n        this.f(c, ac);\n      }\n    }\n  };\n\n  CategoryLineRasterizer.prototype.f = function (a, b) {\n    var c = b.count;\n\n    for (var d = 0; d < c; d++) {\n      a.add(b._inner[d]);\n    }\n  };\n\n  CategoryLineRasterizer.$t = markType(CategoryLineRasterizer, 'CategoryLineRasterizer');\n  return CategoryLineRasterizer;\n}(Base);\n\nexport { CategoryLineRasterizer };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/CategoryLineRasterizer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Number_$type, Point_$type, markType } from \"igniteui-react-core\";\nimport { PointCollection } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { PathGeometry } from \"igniteui-react-core\";\nimport { PolyLineSegment } from \"igniteui-react-core\";\nimport { PathFigure } from \"igniteui-react-core\";\nimport { PathFigureCollection } from \"igniteui-react-core\";\nimport { FastFlattener } from \"igniteui-react-core\";\nimport { ArrayAccessHelper } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar CategoryLineRasterizer = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CategoryLineRasterizer, _super);\n    function CategoryLineRasterizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.a = false;\n        _this.n = new PointCollection(0);\n        return _this;\n    }\n    Object.defineProperty(CategoryLineRasterizer.prototype, \"o\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            this.n = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoryLineRasterizer.prototype.m = function (a, b, c, d, e, f, g, h, i, j) {\n        var k = new PathGeometry();\n        var l = new PathGeometry();\n        var m = new PathGeometry();\n        a.ak = k;\n        b.ak = l;\n        c.ak = m;\n        k.c = new PathFigureCollection();\n        l.c = new PathFigureCollection();\n        m.c = new PathFigureCollection();\n        var n = new List$1(PolyLineSegment.$, 0);\n        var o = new List$1(PolyLineSegment.$, 0);\n        var p = new List$1(PolyLineSegment.$, 0);\n        var q = new List$1(PolyLineSegment.$, 0);\n        if (g == 0 || g == 1) {\n            var r = g == 1 ? h : null;\n            var s = 0;\n            for (var t = 0; t < d; t++) {\n                if (isNaN_(e._inner[t][1])) {\n                    var u = t - s;\n                    var v = (g == 0 && u > 0) || (g == 1 && u > 1);\n                    if (v) {\n                        if (g == 1 || n.count == 0) {\n                            var w = new PolyLineSegment();\n                            var x = new PolyLineSegment();\n                            var y = new PolyLineSegment();\n                            var z = new PolyLineSegment();\n                            n.add(w);\n                            o.add(x);\n                            p.add(y);\n                            q.add(z);\n                        }\n                        this.l(n._inner[n.count - 1]._points, o._inner[o.count - 1]._points, p._inner[p.count - 1]._points, q._inner[q.count - 1]._points, s, t - 1, e, f, r, i, j);\n                    }\n                    s = t + 1;\n                }\n            }\n            if (g == 1 || n.count == 0) {\n                var aa = new PolyLineSegment();\n                var ab = new PolyLineSegment();\n                var ac = new PolyLineSegment();\n                var ad = new PolyLineSegment();\n                n.add(aa);\n                o.add(ad);\n                p.add(ab);\n                q.add(ac);\n            }\n            this.l(n._inner[n.count - 1]._points, o._inner[o.count - 1]._points, p._inner[p.count - 1]._points, q._inner[q.count - 1]._points, s, d - 1, e, f, r, i, j);\n            if (r == null && n.count == 1 && h != null) {\n                this.d(n._inner[0], h);\n                if (o.count == 1) {\n                    this.d(o._inner[0], h);\n                }\n            }\n        }\n        else {\n            n.add(new PolyLineSegment());\n            o.add(new PolyLineSegment());\n            p.add(new PolyLineSegment());\n            q.add(new PolyLineSegment());\n            this.k(n._inner[0]._points, o._inner[0]._points, p._inner[0]._points, q._inner[0]._points, d, e, f, h, i, j);\n        }\n        var _loop_1 = function (ae) {\n            var e_1, _a;\n            var af = n._inner[ae];\n            var ag = o._inner[ae];\n            var ah = p._inner[ae];\n            var ai = q._inner[ae];\n            if (af._points.count > 0) {\n                var aj = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = af._points._inner[0];\n                    return $ret;\n                })());\n                aj._segments.add(af);\n                k.c.add(aj);\n            }\n            if (ag._points.count > 0) {\n                var ak = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = ag._points._inner[0];\n                    return $ret;\n                })());\n                ak._segments.add(ag);\n                m.c.add(ak);\n            }\n            if (ah._points.count > 0 && ai._points.count > 0) {\n                var al_1 = new PolyLineSegment();\n                if (h != null) {\n                    var am = h.f;\n                    h.f = true;\n                    h.i = al_1._points;\n                    h.k(ah._points, false);\n                    h.k(ai._points, true);\n                    h.i = null;\n                    h.f = am;\n                }\n                else {\n                    try {\n                        for (var _b = (e_1 = void 0, tslib_1.__values(fromEnum(ah._points))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var an = _c.value;\n                            al_1._points.add(an);\n                        }\n                    }\n                    catch (e_1_1) {\n                        e_1 = { error: e_1_1 };\n                    }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return))\n                                _a.call(_b);\n                        }\n                        finally {\n                            if (e_1)\n                                throw e_1.error;\n                        }\n                    }\n                    for (var ao = ai._points.count - 1; ao >= 0; ao--) {\n                        al_1._points.add(ai._points._inner[ao]);\n                    }\n                }\n                if (al_1._points.count > 0) {\n                    var ap = ((function () {\n                        var $ret = new PathFigure();\n                        $ret.startPoint = al_1._points._inner[0];\n                        return $ret;\n                    })());\n                    ap._segments.add(al_1);\n                    l.c.add(ap);\n                }\n            }\n        };\n        for (var ae = 0; ae < n.count; ae++) {\n            _loop_1(ae);\n        }\n    };\n    CategoryLineRasterizer.prototype.d = function (a, b) {\n        var c = a._points;\n        b.i = a._points = new PointCollection(0);\n        b.k(c, false);\n        b.i = null;\n    };\n    CategoryLineRasterizer.prototype.k = function (a, b, c, d, e, f, g, h, i, j) {\n        this.l(a, b, c, d, 0, e - 1, f, g, h, i, j);\n    };\n    CategoryLineRasterizer.prototype.e = function (a, b, c, d, e, f, g) {\n        var h = FastFlattener.a(new List$1(Number_$type, 0), d, e, f, b, c, g);\n        var i = ArrayAccessHelper.c(h);\n        var j = ArrayAccessHelper.a(d);\n        var k = i != null;\n        var l = j != null;\n        var m = 0;\n        var n = h.count;\n        var o;\n        var p;\n        var q;\n        if (e) {\n            for (var r = 0; r < n; r++) {\n                m = k ? i[r] : h.item(r);\n                o = l ? j[m] : d._inner[m];\n                p = o[0];\n                q = o[1];\n                var s = { $type: Point_$type, x: p, y: q };\n                a.add(s);\n            }\n        }\n        else if (f) {\n            for (var t = 0; t < n; t++) {\n                m = k ? i[t] : h.item(t);\n                o = l ? j[m] : d._inner[m];\n                p = o[0];\n                q = o[2];\n                var u = { $type: Point_$type, x: p, y: q };\n                a.add(u);\n            }\n        }\n        else {\n            for (var v = 0; v < n; v++) {\n                m = k ? i[v] : h.item(v);\n                o = l ? j[m] : d._inner[m];\n                p = o[2];\n                q = o[3];\n                var w = { $type: Point_$type, x: p, y: q };\n                a.add(w);\n            }\n        }\n    };\n    CategoryLineRasterizer.prototype.b = function (a, b, c, d) {\n        c.i = a;\n        c.k(b, false);\n        c.i = null;\n    };\n    CategoryLineRasterizer.prototype.c = function (a, b, c, d, e) {\n        var f = c.f;\n        c.f = e;\n        this.b(a, b, c, d);\n        c.f = f;\n    };\n    CategoryLineRasterizer.prototype.l = function (a, b, c, d, e, f, g, h, i, j, k) {\n        if (f > -1) {\n            if (j == 1 && !this.a) {\n                var l = new PointCollection(0);\n                this.e(l, e, f, g, true, h, k);\n                if (i != null) {\n                    this.b(a, l, i, k);\n                }\n                else {\n                    this.f(a, l);\n                }\n            }\n            else {\n                var m = new PointCollection(0);\n                var n = new PointCollection(0);\n                this.e(m, e, f, g, true, h, k);\n                this.e(n, e, f, g, false, h, k);\n                this.f(c, m);\n                this.f(d, n);\n                if (i != null) {\n                    this.b(a, m, i, k);\n                    this.b(b, n, i, k);\n                }\n                else {\n                    this.f(a, m);\n                    this.f(b, n);\n                }\n            }\n        }\n    };\n    CategoryLineRasterizer.prototype.i = function (a, b, c, d, e, f, g, h, i, j, k) {\n        this.j(a, b, c, d, e, f, g, h, i, j, k, null);\n    };\n    CategoryLineRasterizer.prototype.j = function (a, b, c, d, e, f, g, h, i, j, k, l) {\n        var m = new PathGeometry();\n        var n = new PathGeometry();\n        var o = new PathGeometry();\n        var p = new PathGeometry();\n        a.ak = m;\n        b.ak = n;\n        c.ak = o;\n        d.ak = p;\n        m.c = new PathFigureCollection();\n        n.c = new PathFigureCollection();\n        o.c = new PathFigureCollection();\n        p.c = new PathFigureCollection();\n        var q = new List$1(PolyLineSegment.$, 0);\n        var r = new List$1(PolyLineSegment.$, 0);\n        var s = new List$1(PolyLineSegment.$, 0);\n        var t = new List$1(PolyLineSegment.$, 0);\n        if (k == 0 || k == 1) {\n            var u = k == 1 ? l : null;\n            var v = 0;\n            for (var w = 0; w < e; w++) {\n                if (isNaN_(f._inner[w][1])) {\n                    var x = w - v;\n                    var y = (k == 0 && x > 0) || (k == 1 && x > 1);\n                    if (y) {\n                        if (k == 1 || r.count == 0) {\n                            var z = new PolyLineSegment();\n                            var aa = new PolyLineSegment();\n                            var ab = new PolyLineSegment();\n                            var ac = new PolyLineSegment();\n                            q.add(z);\n                            r.add(aa);\n                            s.add(ab);\n                            t.add(ac);\n                        }\n                        var ad = void 0;\n                        var ae = void 0;\n                        var af = void 0;\n                        var ag = void 0;\n                        if (l != null && k == 1) {\n                            ad = new PointCollection(0);\n                            ae = new PointCollection(0);\n                            af = new PointCollection(0);\n                            ag = new PointCollection(0);\n                        }\n                        else {\n                            ad = q._inner[q.count - 1]._points;\n                            ae = r._inner[r.count - 1]._points;\n                            af = s._inner[s.count - 1]._points;\n                            ag = t._inner[t.count - 1]._points;\n                        }\n                        this.g(ad, ae, af, ag, v, w - 1, f, g, null, h, i);\n                        if (k == 1) {\n                            j(ad, ae, af, ag, false);\n                            if (l != null) {\n                                this.c(q._inner[q.count - 1]._points, ad, l, i, true);\n                                this.c(r._inner[r.count - 1]._points, ae, l, i, false);\n                                this.c(s._inner[s.count - 1]._points, af, l, i, true);\n                                this.c(t._inner[t.count - 1]._points, ag, l, i, false);\n                            }\n                        }\n                    }\n                    v = w + 1;\n                }\n            }\n            if (k == 1 || r.count == 0) {\n                var ah = new PolyLineSegment();\n                var ai = new PolyLineSegment();\n                var aj = new PolyLineSegment();\n                var ak = new PolyLineSegment();\n                q.add(ah);\n                r.add(ai);\n                s.add(aj);\n                t.add(ak);\n            }\n            var al = void 0;\n            var am = void 0;\n            var an = void 0;\n            var ao = void 0;\n            if (l != null) {\n                al = new PointCollection(0);\n                this.f(al, q._inner[q.count - 1]._points);\n                am = new PointCollection(0);\n                this.f(am, r._inner[r.count - 1]._points);\n                an = new PointCollection(0);\n                this.f(an, s._inner[s.count - 1]._points);\n                ao = new PointCollection(0);\n                this.f(ao, t._inner[t.count - 1]._points);\n                q._inner[q.count - 1]._points.clear();\n                r._inner[r.count - 1]._points.clear();\n                s._inner[s.count - 1]._points.clear();\n                t._inner[t.count - 1]._points.clear();\n            }\n            else {\n                al = q._inner[q.count - 1]._points;\n                am = r._inner[r.count - 1]._points;\n                an = s._inner[s.count - 1]._points;\n                ao = t._inner[t.count - 1]._points;\n            }\n            this.g(al, am, an, ao, v, e - 1, f, g, null, h, i);\n            j(al, am, an, ao, true);\n            if (l != null) {\n                this.c(q._inner[q.count - 1]._points, al, l, i, true);\n                this.c(r._inner[r.count - 1]._points, am, l, i, false);\n                this.c(s._inner[s.count - 1]._points, an, l, i, true);\n                this.c(t._inner[t.count - 1]._points, ao, l, i, false);\n            }\n        }\n        else {\n            q.add(new PolyLineSegment());\n            r.add(new PolyLineSegment());\n            s.add(new PolyLineSegment());\n            t.add(new PolyLineSegment());\n            this.h(q._inner[0]._points, r._inner[0]._points, s._inner[0]._points, t._inner[0]._points, 0, e - 1, f, g, h, i);\n            j(q._inner[0]._points, r._inner[0]._points, s._inner[0]._points, t._inner[0]._points, true);\n        }\n        var _loop_2 = function (ap) {\n            var aq = q._inner[ap];\n            var ar = r._inner[ap];\n            var as = s._inner[ap];\n            var at = t._inner[ap];\n            if (aq._points.count > 0) {\n                var au = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = aq._points._inner[0];\n                    return $ret;\n                })());\n                au._segments.add(aq);\n                m.c.add(au);\n            }\n            if (ar._points.count > 0) {\n                var av = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = ar._points._inner[0];\n                    return $ret;\n                })());\n                av._segments.add(ar);\n                n.c.add(av);\n            }\n            if (as._points.count > 0) {\n                var aw = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = as._points._inner[0];\n                    return $ret;\n                })());\n                aw._segments.add(as);\n                o.c.add(aw);\n            }\n            if (at._points.count > 0) {\n                var ax = ((function () {\n                    var $ret = new PathFigure();\n                    $ret.startPoint = at._points._inner[0];\n                    return $ret;\n                })());\n                ax._segments.add(at);\n                p.c.add(ax);\n            }\n        };\n        for (var ap = 0; ap < r.count; ap++) {\n            _loop_2(ap);\n        }\n    };\n    CategoryLineRasterizer.prototype.h = function (a, b, c, d, e, f, g, h, i, j) {\n        this.g(a, b, c, d, e, f, g, h, null, i, j);\n    };\n    CategoryLineRasterizer.prototype.g = function (a, b, c, d, e, f, g, h, i, j, k) {\n        this.o.clear();\n        if (j == 1 && !this.a) {\n            var l = FastFlattener.a(new List$1(Number_$type, 0), g, true, h, e, f, k);\n            var m = l.count;\n            var n = 0;\n            var o = void 0;\n            var p = void 0;\n            var q = void 0;\n            var r = new PointCollection(0);\n            for (var s = 0; s < m; s++) {\n                n = l.item(s);\n                o = g._inner[n];\n                p = o[0];\n                q = o[1];\n                r.add({ $type: Point_$type, x: p, y: q });\n            }\n            if (i != null) {\n                this.c(a, r, i, k, true);\n                this.c(d, r, i, k, false);\n                this.c(this.o, r, i, k, false);\n            }\n            else {\n                this.f(a, r);\n                this.f(d, r);\n                this.f(this.o, r);\n            }\n        }\n        else {\n            var t = FastFlattener.a(new List$1(Number_$type, 0), g, true, h, e, f, k);\n            var u = FastFlattener.a(new List$1(Number_$type, 0), g, false, h, e, f, k);\n            var v = t.count;\n            var w = u.count;\n            var x = 0;\n            var y = void 0;\n            var z = void 0;\n            var aa = void 0;\n            var ab = new PointCollection(0);\n            var ac = new PointCollection(0);\n            for (var ad = 0; ad < v; ad++) {\n                x = t.item(ad);\n                y = g._inner[x];\n                z = y[0];\n                aa = y[1];\n                ab.add({ $type: Point_$type, x: z, y: aa });\n                ac.add({ $type: Point_$type, x: z, y: aa });\n            }\n            var ae = new PointCollection(0);\n            var af = void 0;\n            var ag = void 0;\n            for (var ah = w - 1; ah >= 0; ah--) {\n                x = u.item(ah);\n                y = g._inner[x];\n                if (h) {\n                    af = y[0];\n                    ag = y[2];\n                }\n                else {\n                    af = y[2];\n                    ag = y[3];\n                }\n                ae.add({ $type: Point_$type, x: af, y: ag });\n                ac.add({ $type: Point_$type, x: af, y: ag });\n            }\n            if (i != null) {\n                this.c(a, ab, i, k, true);\n                this.c(b, ab, i, k, false);\n                this.c(d, ae, i, k, false);\n                this.c(c, ac, i, k, true);\n            }\n            else {\n                this.f(a, ab);\n                this.f(b, ab);\n                this.f(d, ae);\n                this.f(c, ac);\n            }\n        }\n    };\n    CategoryLineRasterizer.prototype.f = function (a, b) {\n        var c = b.count;\n        for (var d = 0; d < c; d++) {\n            a.add(b._inner[d]);\n        }\n    };\n    CategoryLineRasterizer.$t = markType(CategoryLineRasterizer, 'CategoryLineRasterizer');\n    return CategoryLineRasterizer;\n}(Base));\nexport { CategoryLineRasterizer };\n//# sourceMappingURL=CategoryLineRasterizer.js.map\n"]},"metadata":{},"sourceType":"module"}