{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ChaikinVolatilityIndicator } from \"./ChaikinVolatilityIndicator\";\n/**\n * Represents a IgxDataChartComponent Chaikin Volatility indicator series.\n * The ChaikinVolatility indicator attempts to show volatility by displaying the spread between\n * the high and low values.\n * Default required members: High, Low\n*\n* `IgrChaikinVolatilityIndicator` class specify the series as Chaikin Volitility Indicator series.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrCategoryXAxis name=\"xAxis\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*     <IgrChaikinVolatilityIndicator\n*      name=\"series1\"\n*     xAxisName=\"xAxis\"\n* \tyAxisName=\"yAxis\"\n* \topenMemberPath=\"open\"\n*     highMemberPath=\"high\"\n*     lowMemberPath=\"low\"\n*     closeMemberPath=\"close\"\n*     volumeMemberPath=\"volume\" />\n*  </IgrDataChart>\n* ```\n*/\n\nvar IgrChaikinVolatilityIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrChaikinVolatilityIndicator, _super);\n\n  function IgrChaikinVolatilityIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrChaikinVolatilityIndicator.prototype.createImplementation = function () {\n    return new ChaikinVolatilityIndicator();\n  };\n\n  Object.defineProperty(IgrChaikinVolatilityIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrChaikinVolatilityIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current ChaikinVolatilityIndicator object.\n     * The typical, and initial, value for ChaikinVolatilityIndicator periods is 10.\n    *\n    * Set the `period` property if you wish to change the moving average period for the indicator.\n    *\n    * ```ts\n    * this.series.longPeriod = 30;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrChaikinVolatilityIndicator\n    *      name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    * \tyAxisName=\"yAxis\"\n    * \topenMemberPath=\"open\"\n    *     highMemberPath=\"high\"\n    *     lowMemberPath=\"low\"\n    *     closeMemberPath=\"close\"\n    *     volumeMemberPath=\"volume\"\n    *     period={30} />\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.qx;\n    },\n    set: function (v) {\n      this.i.qx = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrChaikinVolatilityIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrChaikinVolatilityIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-chaikin-volatility-indicator.ts"],"names":[],"mappings":";AAKA,SAAS,yBAAT,QAA2E,gCAA3E;AAIA,SAAS,0BAAT,QAA2C,8BAA3C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAA,6BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AAalD,WAAA,6BAAA,CAAY,KAAZ,EAAsD;WACrD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,6BAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,0BAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,6BAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAoC5B,EAAA,MAAA,CAAA,cAAA,CAAI,6BAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AA9BV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA8BA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFS;SAGV,UAAW,CAAX,EAAoB;AACnB,WAAK,CAAL,CAAO,EAAP,GAAY,CAAC,CAAb;AACA,KALS;oBAAA;;AAAA,GAAV;AAMD,SAAA,6BAAA;AAAC,CApDD,CAAmD,yBAAnD,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ChaikinVolatilityIndicator } from \"./ChaikinVolatilityIndicator\";\n/**\n * Represents a IgxDataChartComponent Chaikin Volatility indicator series.\n * The ChaikinVolatility indicator attempts to show volatility by displaying the spread between\n * the high and low values.\n * Default required members: High, Low\n*\n* `IgrChaikinVolatilityIndicator` class specify the series as Chaikin Volitility Indicator series.\n*\n* ```ts\n*  <IgrDataChart\n*     dataSource={this.state.dataSource} >\n*\n*     <IgrCategoryXAxis name=\"xAxis\" />\n*     <IgrNumericYAxis name=\"yAxis\" />\n*\n*     <IgrChaikinVolatilityIndicator\n*      name=\"series1\"\n*     xAxisName=\"xAxis\"\n* \tyAxisName=\"yAxis\"\n* \topenMemberPath=\"open\"\n*     highMemberPath=\"high\"\n*     lowMemberPath=\"low\"\n*     closeMemberPath=\"close\"\n*     volumeMemberPath=\"volume\" />\n*  </IgrDataChart>\n* ```\n*/\nvar IgrChaikinVolatilityIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrChaikinVolatilityIndicator, _super);\n    function IgrChaikinVolatilityIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrChaikinVolatilityIndicator.prototype.createImplementation = function () {\n        return new ChaikinVolatilityIndicator();\n    };\n    Object.defineProperty(IgrChaikinVolatilityIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrChaikinVolatilityIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current ChaikinVolatilityIndicator object.\n         * The typical, and initial, value for ChaikinVolatilityIndicator periods is 10.\n        *\n        * Set the `period` property if you wish to change the moving average period for the indicator.\n        *\n        * ```ts\n        * this.series.longPeriod = 30;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrChaikinVolatilityIndicator\n        *      name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        * \tyAxisName=\"yAxis\"\n        * \topenMemberPath=\"open\"\n        *     highMemberPath=\"high\"\n        *     lowMemberPath=\"low\"\n        *     closeMemberPath=\"close\"\n        *     volumeMemberPath=\"volume\"\n        *     period={30} />\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.qx;\n        },\n        set: function (v) {\n            this.i.qx = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrChaikinVolatilityIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrChaikinVolatilityIndicator };\n//# sourceMappingURL=igr-chaikin-volatility-indicator.js.map\n"]},"metadata":{},"sourceType":"module"}