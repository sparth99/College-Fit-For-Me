{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { AxisVisualDataList } from \"./AxisVisualDataList\";\nimport { SeriesVisualDataList } from \"./SeriesVisualDataList\";\nimport { RectData } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\nimport { PointData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ChartVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ChartVisualData, _super);\n\n  function ChartVisualData() {\n    var _this = _super.call(this) || this;\n\n    _this._axes = null;\n    _this._series = null;\n    _this._title = null;\n    _this._subtitle = null;\n    _this._width = 0;\n    _this._height = 0;\n    _this._contentArea = null;\n    _this._centralArea = null;\n    _this._plotArea = null;\n    _this._name = null;\n    _this._isViewportScaled = false;\n    _this._dipScalingRatio = 0;\n    _this.dipScalingRatio = 1;\n    _this.axes = new AxisVisualDataList();\n    _this.series = new SeriesVisualDataList();\n    return _this;\n  }\n\n  Object.defineProperty(ChartVisualData.prototype, \"axes\", {\n    get: function () {\n      return this._axes;\n    },\n    set: function (a) {\n      this._axes = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"series\", {\n    get: function () {\n      return this._series;\n    },\n    set: function (a) {\n      this._series = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"title\", {\n    get: function () {\n      return this._title;\n    },\n    set: function (a) {\n      this._title = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"subtitle\", {\n    get: function () {\n      return this._subtitle;\n    },\n    set: function (a) {\n      this._subtitle = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    set: function (a) {\n      this._width = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    set: function (a) {\n      this._height = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"contentArea\", {\n    get: function () {\n      return this._contentArea;\n    },\n    set: function (a) {\n      this._contentArea = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"centralArea\", {\n    get: function () {\n      return this._centralArea;\n    },\n    set: function (a) {\n      this._centralArea = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"plotArea\", {\n    get: function () {\n      return this._plotArea;\n    },\n    set: function (a) {\n      this._plotArea = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"name\", {\n    get: function () {\n      return this._name;\n    },\n    set: function (a) {\n      this._name = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChartVisualData.prototype, \"isViewportScaled\", {\n    get: function () {\n      return this._isViewportScaled;\n    },\n    set: function (a) {\n      this._isViewportScaled = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ChartVisualData.prototype.scaleByViewport = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(this.axes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var a = _d.value;\n        a.p();\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(this.series)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var b = _f.value;\n        b.m();\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    if (this.title != null) {\n      this.title.g();\n    }\n\n    if (this.subtitle != null) {\n      this.subtitle.g();\n    }\n  };\n\n  ChartVisualData.prototype.getBounds = function () {\n    return new RectData(0, 0, this.width, this.height);\n  };\n\n  ChartVisualData.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.u(\"{\");\n    a.u(\"name: '\" + this.name + \"',\");\n    a.u(\"width: \" + this.width + \",\");\n    a.u(\"height: \" + this.height + \",\");\n    a.u(\"plotArea: { left: \" + this.plotArea.left + \", top: \" + this.plotArea.top + \", width: \" + this.plotArea.width + \", height: \" + this.plotArea.height + \"}, \");\n    a.u(\"contentArea: { left: \" + this.contentArea.left + \", top: \" + this.contentArea.top + \", width: \" + this.contentArea.width + \", height: \" + this.contentArea.height + \"}, \");\n    a.u(\"centralArea: { left: \" + this.centralArea.left + \", top: \" + this.centralArea.top + \", width: \" + this.centralArea.width + \", height: \" + this.centralArea.height + \"}, \");\n    a.u(\"isViewportScaled: \" + (this.isViewportScaled ? \"true\" : \"false\") + \", \");\n    a.u(\"axes: [\");\n\n    for (var b = 0; b < this.axes.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this.axes._inner[b].serialize());\n    }\n\n    a.u(\"],\");\n    a.u(\"series: [\");\n\n    for (var c = 0; c < this.series.count; c++) {\n      if (c != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this.series._inner[c].serialize());\n    }\n\n    a.u(\"]\");\n\n    if (this.title != null) {\n      a.u(\", title: \" + this.title.serialize());\n    }\n\n    if (this.subtitle != null) {\n      a.u(\", subtitle: \" + this.subtitle.serialize());\n    }\n\n    a.l(\", dipScalingRatio: \" + this.dipScalingRatio.toString());\n    a.u(\"}\");\n    return a.toString();\n  };\n\n  ChartVisualData.prototype.getSerializedSeriesPoints = function (a, b, c) {\n    var d = new List$1(List$1.$.specialize(PointData.$), 0);\n\n    for (var e = 0; e < this.series.count; e++) {\n      if (this.series._inner[e].name == a) {\n        var f = this.series._inner[e].shapes.containingTag(b);\n\n        for (var g = 0; g < f.count; g++) {\n          var h = f._inner[e];\n          h.getPointsOverride(d, c);\n        }\n      }\n    }\n\n    var i = new StringBuilder(0);\n    i.u(\"[\");\n\n    for (var j = 0; j < d.count; j++) {\n      var k = d._inner[j];\n      i.u(\"[\");\n\n      for (var l = 0; l < k.count; l++) {\n        if (l != 0) {\n          i.l(\", \");\n        }\n\n        i.l(\"{ x: \" + k._inner[l].x + \", y: \" + k._inner[l].y + \"}\");\n      }\n\n      i.u(\"]\");\n    }\n\n    i.u(\"]\");\n    return i.toString();\n  };\n\n  Object.defineProperty(ChartVisualData.prototype, \"dipScalingRatio\", {\n    get: function () {\n      return this._dipScalingRatio;\n    },\n    set: function (a) {\n      this._dipScalingRatio = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ChartVisualData.$t = markType(ChartVisualData, 'ChartVisualData');\n  return ChartVisualData;\n}(Base);\n\nexport { ChartVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ChartVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { AxisVisualDataList } from \"./AxisVisualDataList\";\nimport { SeriesVisualDataList } from \"./SeriesVisualDataList\";\nimport { RectData } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\nimport { PointData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ChartVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ChartVisualData, _super);\n    function ChartVisualData() {\n        var _this = _super.call(this) || this;\n        _this._axes = null;\n        _this._series = null;\n        _this._title = null;\n        _this._subtitle = null;\n        _this._width = 0;\n        _this._height = 0;\n        _this._contentArea = null;\n        _this._centralArea = null;\n        _this._plotArea = null;\n        _this._name = null;\n        _this._isViewportScaled = false;\n        _this._dipScalingRatio = 0;\n        _this.dipScalingRatio = 1;\n        _this.axes = new AxisVisualDataList();\n        _this.series = new SeriesVisualDataList();\n        return _this;\n    }\n    Object.defineProperty(ChartVisualData.prototype, \"axes\", {\n        get: function () {\n            return this._axes;\n        },\n        set: function (a) {\n            this._axes = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"series\", {\n        get: function () {\n            return this._series;\n        },\n        set: function (a) {\n            this._series = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"title\", {\n        get: function () {\n            return this._title;\n        },\n        set: function (a) {\n            this._title = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"subtitle\", {\n        get: function () {\n            return this._subtitle;\n        },\n        set: function (a) {\n            this._subtitle = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (a) {\n            this._width = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (a) {\n            this._height = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"contentArea\", {\n        get: function () {\n            return this._contentArea;\n        },\n        set: function (a) {\n            this._contentArea = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"centralArea\", {\n        get: function () {\n            return this._centralArea;\n        },\n        set: function (a) {\n            this._centralArea = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"plotArea\", {\n        get: function () {\n            return this._plotArea;\n        },\n        set: function (a) {\n            this._plotArea = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (a) {\n            this._name = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChartVisualData.prototype, \"isViewportScaled\", {\n        get: function () {\n            return this._isViewportScaled;\n        },\n        set: function (a) {\n            this._isViewportScaled = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartVisualData.prototype.scaleByViewport = function () {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = tslib_1.__values(fromEnum(this.axes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var a = _d.value;\n                a.p();\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        try {\n            for (var _e = tslib_1.__values(fromEnum(this.series)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var b = _f.value;\n                b.m();\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        if (this.title != null) {\n            this.title.g();\n        }\n        if (this.subtitle != null) {\n            this.subtitle.g();\n        }\n    };\n    ChartVisualData.prototype.getBounds = function () {\n        return new RectData(0, 0, this.width, this.height);\n    };\n    ChartVisualData.prototype.serialize = function () {\n        var a = new StringBuilder(0);\n        a.u(\"{\");\n        a.u(\"name: '\" + this.name + \"',\");\n        a.u(\"width: \" + this.width + \",\");\n        a.u(\"height: \" + this.height + \",\");\n        a.u(\"plotArea: { left: \" + this.plotArea.left + \", top: \" + this.plotArea.top + \", width: \" + this.plotArea.width + \", height: \" + this.plotArea.height + \"}, \");\n        a.u(\"contentArea: { left: \" + this.contentArea.left + \", top: \" + this.contentArea.top + \", width: \" + this.contentArea.width + \", height: \" + this.contentArea.height + \"}, \");\n        a.u(\"centralArea: { left: \" + this.centralArea.left + \", top: \" + this.centralArea.top + \", width: \" + this.centralArea.width + \", height: \" + this.centralArea.height + \"}, \");\n        a.u(\"isViewportScaled: \" + (this.isViewportScaled ? \"true\" : \"false\") + \", \");\n        a.u(\"axes: [\");\n        for (var b = 0; b < this.axes.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(this.axes._inner[b].serialize());\n        }\n        a.u(\"],\");\n        a.u(\"series: [\");\n        for (var c = 0; c < this.series.count; c++) {\n            if (c != 0) {\n                a.l(\", \");\n            }\n            a.l(this.series._inner[c].serialize());\n        }\n        a.u(\"]\");\n        if (this.title != null) {\n            a.u(\", title: \" + this.title.serialize());\n        }\n        if (this.subtitle != null) {\n            a.u(\", subtitle: \" + this.subtitle.serialize());\n        }\n        a.l(\", dipScalingRatio: \" + this.dipScalingRatio.toString());\n        a.u(\"}\");\n        return a.toString();\n    };\n    ChartVisualData.prototype.getSerializedSeriesPoints = function (a, b, c) {\n        var d = new List$1(List$1.$.specialize(PointData.$), 0);\n        for (var e = 0; e < this.series.count; e++) {\n            if (this.series._inner[e].name == a) {\n                var f = this.series._inner[e].shapes.containingTag(b);\n                for (var g = 0; g < f.count; g++) {\n                    var h = f._inner[e];\n                    h.getPointsOverride(d, c);\n                }\n            }\n        }\n        var i = new StringBuilder(0);\n        i.u(\"[\");\n        for (var j = 0; j < d.count; j++) {\n            var k = d._inner[j];\n            i.u(\"[\");\n            for (var l = 0; l < k.count; l++) {\n                if (l != 0) {\n                    i.l(\", \");\n                }\n                i.l(\"{ x: \" + k._inner[l].x + \", y: \" + k._inner[l].y + \"}\");\n            }\n            i.u(\"]\");\n        }\n        i.u(\"]\");\n        return i.toString();\n    };\n    Object.defineProperty(ChartVisualData.prototype, \"dipScalingRatio\", {\n        get: function () {\n            return this._dipScalingRatio;\n        },\n        set: function (a) {\n            this._dipScalingRatio = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChartVisualData.$t = markType(ChartVisualData, 'ChartVisualData');\n    return ChartVisualData;\n}(Base));\nexport { ChartVisualData };\n//# sourceMappingURL=ChartVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}