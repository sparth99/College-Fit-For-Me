{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { INumberAbbreviator_$type } from \"./INumberAbbreviator\";\nimport { numberToString2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar NumberAbbreviator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(NumberAbbreviator, _super);\n\n  function NumberAbbreviator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumberAbbreviator.prototype.abbreviate = function (a) {\n    var b = \"0.#\";\n    var c = Math.abs(a);\n    var d = ['Q', 'T', 'B', 'M', 'K'];\n    var e = [1E+15, 1000000000000, 1000000000, 1000000, 1000];\n\n    for (var f = 0; f < d.length; f++) {\n      if (c >= e[f]) {\n        return numberToString2(a / e[f], b) + d[f];\n      }\n    }\n\n    return a.toString();\n  };\n\n  NumberAbbreviator.$t = markType(NumberAbbreviator, 'NumberAbbreviator', Base.$, [INumberAbbreviator_$type]);\n  return NumberAbbreviator;\n}(Base);\n\nexport { NumberAbbreviator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/NumberAbbreviator.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAgC,QAAhC,QAAgD,qBAAhD;AACA,SAA6B,wBAA7B,QAA6D,sBAA7D;AACA,SAAS,eAAT,QAAgC,qBAAhC;AAEA;;;;AAGA,IAAA,iBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAAvC,WAAA,iBAAA,GAAA;;AAcC;;AAZA,EAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAAoB;AACnB,QAAI,CAAC,GAAW,KAAhB;AACA,QAAI,CAAC,GAAW,IAAI,CAAC,GAAL,CAAS,CAAT,CAAhB;AACA,QAAI,CAAC,GAAuB,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,CAA5B;AACA,QAAI,CAAC,GAAuB,CAAE,KAAF,EAAS,aAAT,EAAwB,UAAxB,EAAoC,OAApC,EAA6C,IAA7C,CAA5B;;AACA,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AAC1C,UAAI,CAAC,IAAI,CAAC,CAAC,CAAD,CAAV,EAAe;AACd,eAAO,eAAe,CAAE,CAAC,GAAG,CAAC,CAAC,CAAD,CAAP,EAAa,CAAb,CAAf,GAAiC,CAAC,CAAC,CAAD,CAAzC;AACA;AACD;;AACD,WAAO,CAAC,CAAC,QAAF,EAAP;AACA,GAXD;;AADO,EAAA,iBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iBAAD,EAAoB,mBAApB,EAA+C,IAAK,CAAC,CAArD,EAAwD,CAAC,wBAAD,CAAxD,CAAnB;AAaR,SAAA,iBAAA;AAAC,CAdD,CAAuC,IAAvC,CAAA;;SAAa,iB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { INumberAbbreviator_$type } from \"./INumberAbbreviator\";\nimport { numberToString2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar NumberAbbreviator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(NumberAbbreviator, _super);\n    function NumberAbbreviator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberAbbreviator.prototype.abbreviate = function (a) {\n        var b = \"0.#\";\n        var c = Math.abs(a);\n        var d = ['Q', 'T', 'B', 'M', 'K'];\n        var e = [1E+15, 1000000000000, 1000000000, 1000000, 1000];\n        for (var f = 0; f < d.length; f++) {\n            if (c >= e[f]) {\n                return numberToString2((a / e[f]), b) + d[f];\n            }\n        }\n        return a.toString();\n    };\n    NumberAbbreviator.$t = markType(NumberAbbreviator, 'NumberAbbreviator', Base.$, [INumberAbbreviator_$type]);\n    return NumberAbbreviator;\n}(Base));\nexport { NumberAbbreviator };\n//# sourceMappingURL=NumberAbbreviator.js.map\n"]},"metadata":{},"sourceType":"module"}