{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses value-based brush selection.\n*/\n\nvar IgrValueBrushScale =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrValueBrushScale, _super);\n\n  function IgrValueBrushScale(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrValueBrushScale.prototype.createImplementation = function () {\n    return new ValueBrushScale();\n  };\n\n  Object.defineProperty(IgrValueBrushScale.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"minimumValue\", {\n    /**\n     * Gets or sets the minimum value for this scale.\n    */\n    get: function () {\n      return this.i.minimumValue;\n    },\n    set: function (v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"maximumValue\", {\n    /**\n     * Gets or sets the maximum value for this scale.\n    */\n    get: function () {\n      return this.i.maximumValue;\n    },\n    set: function (v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"isLogarithmic\", {\n    /**\n     * Gets or sets whether the scale is logarithmic.\n    */\n    get: function () {\n      return this.i.isLogarithmic;\n    },\n    set: function (v) {\n      this.i.isLogarithmic = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"logarithmBase\", {\n    /**\n     * Gets or sets the logarithm base for this scale.\n    */\n    get: function () {\n      return this.i.logarithmBase;\n    },\n    set: function (v) {\n      this.i.logarithmBase = +v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueBrushScale.prototype, \"isReady\", {\n    /**\n     * Checks if the value brush scale is ready for usage in the chart\n    */\n    get: function () {\n      return this.i.isReady;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrValueBrushScale;\n}(IgrBrushScale);\n\nexport { IgrValueBrushScale };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-value-brush-scale.ts"],"names":[],"mappings":";AAKA,SAAS,aAAT,QAAmD,mBAAnD;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,UAAT,QAA2B,qBAA3B;AAEA;;;;AAGA,IAAA,kBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,EAAA,MAAA;;AAavC,WAAA,kBAAA,CAAY,KAAZ,EAA2C;WAC1C,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,kBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,eAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAS5B,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,YAAf;AACA,KAFe;SAGhB,UAAiB,CAAjB,EAA0B;AACzB,WAAK,CAAL,CAAO,YAAP,GAAsB,CAAC,CAAvB;AACA,KALe;oBAAA;;AAAA,GAAhB;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,YAAf;AACA,KAFe;SAGhB,UAAiB,CAAjB,EAA0B;AACzB,WAAK,CAAL,CAAO,YAAP,GAAsB,CAAC,CAAvB;AACA,KALe;oBAAA;;AAAA,GAAhB;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;AAHjB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,aAAf;AACA,KAFgB;SAGjB,UAAkB,CAAlB,EAA4B;AAC3B,WAAK,CAAL,CAAO,aAAP,GAAuB,UAAU,CAAC,CAAD,CAAjC;AACA,KALgB;oBAAA;;AAAA,GAAjB;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;AAHjB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,aAAf;AACA,KAFgB;SAGjB,UAAkB,CAAlB,EAA2B;AAC1B,WAAK,CAAL,CAAO,aAAP,GAAuB,CAAC,CAAxB;AACA,KALgB;oBAAA;;AAAA,GAAjB;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,OAAf;AACA,KAFU;oBAAA;;AAAA,GAAX;AAGD,SAAA,kBAAA;AAAC,CA1DD,CAAwC,aAAxC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrBrushScale } from \"./igr-brush-scale\";\nimport { ValueBrushScale } from \"./ValueBrushScale\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents a brush scale that uses value-based brush selection.\n*/\nvar IgrValueBrushScale = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrValueBrushScale, _super);\n    function IgrValueBrushScale(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrValueBrushScale.prototype.createImplementation = function () {\n        return new ValueBrushScale();\n    };\n    Object.defineProperty(IgrValueBrushScale.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"minimumValue\", {\n        /**\n         * Gets or sets the minimum value for this scale.\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"maximumValue\", {\n        /**\n         * Gets or sets the maximum value for this scale.\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"isLogarithmic\", {\n        /**\n         * Gets or sets whether the scale is logarithmic.\n        */\n        get: function () {\n            return this.i.isLogarithmic;\n        },\n        set: function (v) {\n            this.i.isLogarithmic = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"logarithmBase\", {\n        /**\n         * Gets or sets the logarithm base for this scale.\n        */\n        get: function () {\n            return this.i.logarithmBase;\n        },\n        set: function (v) {\n            this.i.logarithmBase = +v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueBrushScale.prototype, \"isReady\", {\n        /**\n         * Checks if the value brush scale is ready for usage in the chart\n        */\n        get: function () {\n            return this.i.isReady;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrValueBrushScale;\n}(IgrBrushScale));\nexport { IgrValueBrushScale };\n//# sourceMappingURL=igr-value-brush-scale.js.map\n"]},"metadata":{},"sourceType":"module"}