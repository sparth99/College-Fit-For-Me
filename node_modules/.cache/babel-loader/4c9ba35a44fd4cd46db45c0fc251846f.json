{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PolylineBuilder } from \"./PolylineBuilder\";\nimport { Number_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar ContourBuilder =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ContourBuilder, _super);\n\n  function ContourBuilder() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.f = new Dictionary$2(Number_$type, Number_$type, 0);\n    _this.i = new List$1(Number_$type, 0);\n    _this.j = new List$1(Number_$type, 0);\n    return _this;\n  }\n\n  ContourBuilder.prototype.e = function () {\n    _super.prototype.e.call(this);\n\n    this.f.clear();\n    this.i.clear();\n    this.j.clear();\n  };\n\n  Object.defineProperty(ContourBuilder.prototype, \"g\", {\n    get: function () {\n      return this.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ContourBuilder.prototype, \"h\", {\n    get: function () {\n      return this.j;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ContourBuilder.prototype.k = function (a, b, c, d, e, f, g, h, i) {\n    var _this = this;\n\n    var j = Math.min(a, e) + 0x100000000 * Math.max(a, e);\n    var k = -1;\n\n    if (!function () {\n      var l = _this.f.tryGetValue(j, k);\n\n      k = l.p1;\n      return l.ret;\n    }()) {\n      k = this.i.count;\n      var l = (i - d) / (h - d);\n      this.f.addItem(j, k);\n      this.i.add(b + l * (f - b));\n      this.j.add(c + l * (g - c));\n    }\n\n    return k;\n  };\n\n  ContourBuilder.$t = markType(ContourBuilder, 'ContourBuilder', PolylineBuilder.$);\n  return ContourBuilder;\n}(PolylineBuilder);\n\nexport { ContourBuilder };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/ContourBuilder.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAuC,YAAvC,EAA2D,QAA3D,QAA2E,qBAA3E;AACA,SAAS,MAAT,QAAuB,qBAAvB;AACA,SAAS,YAAT,QAA6B,qBAA7B;AAEA;;;;AAGA,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAApC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA0BS,IAAA,KAAA,CAAA,CAAA,GAAkC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlC;AACA,IAAA,KAAA,CAAA,CAAA,GAAoB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAApB;AACA,IAAA,KAAA,CAAA,CAAA,GAAoB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAApB;;AACR;;AA3BA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,CAAN,CAAO,IAAP,CAAO,IAAP;;AACA,SAAK,CAAL,CAAO,KAAP;AACA,SAAK,CAAL,CAAO,KAAP;AACA,SAAK,CAAL,CAAO,KAAP;AACA,GALD;;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;SAAL,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFI;oBAAA;;AAAA,GAAL;AAGA,EAAA,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;SAAL,YAAA;AACC,aAAO,KAAK,CAAZ;AACA,KAFI;oBAAA;;AAAA,GAAL;;AAGA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAa,CAAb,EAAwB,CAAxB,EAAmC,CAAnC,EAA8C,CAA9C,EAAyD,CAAzD,EAAoE,CAApE,EAA+E,CAA/E,EAA0F,CAA1F,EAAmG;AAAnG,QAAA,KAAA,GAAA,IAAA;;AACC,QAAI,CAAC,GAAW,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,IAAiB,cAAc,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAA/C;AACA,QAAI,CAAC,GAAW,CAAC,CAAjB;;AACA,QAAI,CAAG,YAAA;AAAQ,UAAI,CAAC,GAAG,KAAI,CAAC,CAAL,CAAO,WAAP,CAAmB,CAAnB,EAAsB,CAAtB,CAAR;;AAAkC,MAAA,CAAC,GAAG,CAAC,CAAC,EAAN;AAAU,aAAO,CAAC,CAAC,GAAT;AAAe,KAApE,EAAN,EAAgF;AAC/E,MAAA,CAAC,GAAG,KAAK,CAAL,CAAO,KAAX;AACA,UAAI,CAAC,GAAW,CAAC,CAAC,GAAG,CAAL,KAAW,CAAC,GAAG,CAAf,CAAhB;AACA,WAAK,CAAL,CAAO,OAAP,CAAe,CAAf,EAAkB,CAAlB;AACA,WAAK,CAAL,CAAO,GAAP,CAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAR,CAAzB;AACA,WAAK,CAAL,CAAO,GAAP,CAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAR,CAAzB;AACA;;AACD,WAAO,CAAP;AACA,GAXD;;AAbO,EAAA,cAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,cAAD,EAAiB,gBAAjB,EAAyC,eAAgB,CAAC,CAA1D,CAAnB;AA4BR,SAAA,cAAA;AAAC,CA7BD,CAAoC,eAApC,CAAA;;SAAa,c","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PolylineBuilder } from \"./PolylineBuilder\";\nimport { Number_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar ContourBuilder = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ContourBuilder, _super);\n    function ContourBuilder() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.f = new Dictionary$2(Number_$type, Number_$type, 0);\n        _this.i = new List$1(Number_$type, 0);\n        _this.j = new List$1(Number_$type, 0);\n        return _this;\n    }\n    ContourBuilder.prototype.e = function () {\n        _super.prototype.e.call(this);\n        this.f.clear();\n        this.i.clear();\n        this.j.clear();\n    };\n    Object.defineProperty(ContourBuilder.prototype, \"g\", {\n        get: function () {\n            return this.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContourBuilder.prototype, \"h\", {\n        get: function () {\n            return this.j;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContourBuilder.prototype.k = function (a, b, c, d, e, f, g, h, i) {\n        var _this = this;\n        var j = Math.min(a, e) + 0x100000000 * Math.max(a, e);\n        var k = -1;\n        if (!((function () { var l = _this.f.tryGetValue(j, k); k = l.p1; return l.ret; })())) {\n            k = this.i.count;\n            var l = (i - d) / (h - d);\n            this.f.addItem(j, k);\n            this.i.add((b + l * (f - b)));\n            this.j.add((c + l * (g - c)));\n        }\n        return k;\n    };\n    ContourBuilder.$t = markType(ContourBuilder, 'ContourBuilder', PolylineBuilder.$);\n    return ContourBuilder;\n}(PolylineBuilder));\nexport { ContourBuilder };\n//# sourceMappingURL=ContourBuilder.js.map\n"]},"metadata":{},"sourceType":"module"}