{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { PointSeries } from \"./PointSeries\";\n/**\n * Represents a IgxDataChartComponent point series.\n*\n* You can use the `IgrPointSeries` plot a value along a category or date.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPointSeries\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* const series1 = new IgrPointSeries({ name: \"series1\" });\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* series1.markerType = MarkerType.Circle;\n* series1.valueMemberPath = \"USA\";\n* ```\n*/\n\nvar IgrPointSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrPointSeries, _super);\n\n  function IgrPointSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrPointSeries.prototype.createImplementation = function () {\n    return new PointSeries();\n  };\n\n  Object.defineProperty(IgrPointSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrPointSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when markerless display is preferred or not.\n    */\n    get: function () {\n      return this.i.cy;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrPointSeries;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrPointSeries };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-point-series.ts"],"names":[],"mappings":";AAKA,SAAS,mCAAT,QAA+F,2CAA/F;AAKA,SAAS,WAAT,QAA4B,eAA5B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAanC,WAAA,cAAA,CAAY,KAAZ,EAAuC;WACtC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,cAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,WAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,cAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAS5B,EAAA,MAAA,CAAA,cAAA,CAAI,cAAA,CAAA,SAAJ,EAAI,8BAAJ,EAAgC;AAHhC;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAF+B;oBAAA;;AAAA,GAAhC;AAGD,SAAA,cAAA;AAAC,CAtBD,CAAoC,mCAApC,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { PointSeries } from \"./PointSeries\";\n/**\n * Represents a IgxDataChartComponent point series.\n*\n* You can use the `IgrPointSeries` plot a value along a category or date.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPointSeries\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* const series1 = new IgrPointSeries({ name: \"series1\" });\n* series1.xAxisName = \"xAxis\";\n* series1.yAxisName = \"yAxis\";\n* series1.markerType = MarkerType.Circle;\n* series1.valueMemberPath = \"USA\";\n* ```\n*/\nvar IgrPointSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrPointSeries, _super);\n    function IgrPointSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrPointSeries.prototype.createImplementation = function () {\n        return new PointSeries();\n    };\n    Object.defineProperty(IgrPointSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrPointSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when markerless display is preferred or not.\n        */\n        get: function () {\n            return this.i.cy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrPointSeries;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrPointSeries };\n//# sourceMappingURL=igr-point-series.js.map\n"]},"metadata":{},"sourceType":"module"}