{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CategoryToolTipLayer } from \"./CategoryToolTipLayer\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays grouped tooltips for series that use a category axis.\n*/\n\nvar IgrCategoryToolTipLayer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrCategoryToolTipLayer, _super);\n\n  function IgrCategoryToolTipLayer(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrCategoryToolTipLayer.prototype.createImplementation = function () {\n    return new CategoryToolTipLayer();\n  };\n\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isDefaultTooltipBehaviorDisabled\", {\n    /**\n     * Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.\n    */\n    get: function () {\n      return this.i.cn;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"useInterpolation\", {\n    /**\n     * Gets or sets whether to use value interpolation when drawing the tooltips.\n    */\n    get: function () {\n      return this.i.m8;\n    },\n    set: function (v) {\n      this.i.m8 = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Hides any tooltips presented by the layer, if any.\n  \r\n  */\n\n  IgrCategoryToolTipLayer.prototype.hideToolTips = function () {\n    this.i.ia();\n  };\n\n  return IgrCategoryToolTipLayer;\n}(IgrAnnotationLayer);\n\nexport { IgrCategoryToolTipLayer };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-category-tool-tip-layer.ts"],"names":[],"mappings":";AAKA,SAAS,kBAAT,QAA6D,wBAA7D;AAEA,SAAS,oBAAT,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,qBAA3B;AAEA;;;;AAGA,IAAA,uBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAa5C,WAAA,uBAAA,CAAY,KAAZ,EAAgD;WAC/C,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACZ;;AAZQ,EAAA,uBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AAEC,WAAO,IAAI,oBAAJ,EAAP;AACA,GAHS;;AAOmB,EAAA,MAAA,CAAA,cAAA,CAAW,uBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHxC;;;SAG4B,YAAA;AAC3B,aAAO,KAAK,eAAZ;AACA,KAFuC;oBAAA;;AAAA,GAAZ;AAS5B,EAAA,MAAA,CAAA,cAAA,CAAI,uBAAA,CAAA,SAAJ,EAAI,kCAAJ,EAAoC;AAHpC;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFmC;oBAAA;;AAAA,GAApC;AAMA,EAAA,MAAA,CAAA,cAAA,CAAI,uBAAA,CAAA,SAAJ,EAAI,kBAAJ,EAAoB;AAHpB;;;SAGA,YAAA;AACC,aAAQ,KAAK,CAAL,CAAO,EAAf;AACA,KAFmB;SAGpB,UAAqB,CAArB,EAA+B;AAC9B,WAAK,CAAL,CAAO,EAAP,GAAY,UAAU,CAAC,CAAD,CAAtB;AACA,KALmB;oBAAA;;AAAA,GAApB;AAMA;;;;;AAIO,EAAA,uBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACC,SAAK,CAAL,CAAO,EAAP;AACA,GAFM;;AAGR,SAAA,uBAAA;AAAC,CAtCD,CAA6C,kBAA7C,CAAA","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { IgrAnnotationLayer } from \"./igr-annotation-layer\";\nimport { CategoryToolTipLayer } from \"./CategoryToolTipLayer\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents an annotation layer that displays grouped tooltips for series that use a category axis.\n*/\nvar IgrCategoryToolTipLayer = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrCategoryToolTipLayer, _super);\n    function IgrCategoryToolTipLayer(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrCategoryToolTipLayer.prototype.createImplementation = function () {\n        return new CategoryToolTipLayer();\n    };\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"isDefaultTooltipBehaviorDisabled\", {\n        /**\n         * Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.\n        */\n        get: function () {\n            return this.i.cn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryToolTipLayer.prototype, \"useInterpolation\", {\n        /**\n         * Gets or sets whether to use value interpolation when drawing the tooltips.\n        */\n        get: function () {\n            return this.i.m8;\n        },\n        set: function (v) {\n            this.i.m8 = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Hides any tooltips presented by the layer, if any.\n    \r\n    */\n    IgrCategoryToolTipLayer.prototype.hideToolTips = function () {\n        this.i.ia();\n    };\n    return IgrCategoryToolTipLayer;\n}(IgrAnnotationLayer));\nexport { IgrCategoryToolTipLayer };\n//# sourceMappingURL=igr-category-tool-tip-layer.js.map\n"]},"metadata":{},"sourceType":"module"}