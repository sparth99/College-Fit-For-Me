{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { ItemLegend } from \"./ItemLegend\";\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\n/**\n * Represents a legend that displays an item for each point in the series.\n*\n* You can use the `IgrItemLegend` to display a legend item for each data member bound to the `IgrBubbleSeries`\n*\n* ```ts\n*   <IgrItemLegend ref={this.onLegendRef} />\n* ```\n*\n* ```ts\n* this.onLegendRef = this.onLegendRef.bind(this);\n* public onLegendRef(legend: IgrItemLegend) {\n*         this.legend = legend;\n*         if (this.chart) {\n*             this.chart.actualSeries[0].legend = this.legend;\n*         }\n*     }\n* ```\n*/\n\nvar IgrItemLegend =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(IgrItemLegend, _super);\n\n  function IgrItemLegend(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._getMainRef = _this._getMainRef.bind(_this);\n    var container;\n\n    if (document) {\n      container = document.createElement(\"div\");\n      container.style.display = \"block\";\n      container.style.width = \"100%\";\n      container.style.height = \"100%\";\n    }\n\n    var root;\n    root = container;\n    var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n    _this.container = ren.getWrapper(container);\n    _this._wrapper = ren;\n\n    _this.i.provideContainer(ren);\n\n    return _this;\n  }\n\n  IgrItemLegend.prototype.render = function () {\n    var div = React.createElement(\"div\", {\n      className: \"ig-item-legend igr-item-legend\",\n      ref: this._getMainRef\n    });\n    return div;\n  };\n\n  IgrItemLegend.prototype._getMainRef = function (div) {\n    this._elRef = div;\n  };\n\n  IgrItemLegend.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    this.initializeContent();\n  };\n\n  IgrItemLegend.prototype.initializeContent = function () {\n    this._elRef.appendChild(this.container.getNativeElement());\n  };\n\n  IgrItemLegend.prototype.destroy = function () {\n    this._wrapper.destroy();\n\n    this.i.provideContainer(null);\n  };\n\n  IgrItemLegend.prototype.createImplementation = function () {\n    return new ItemLegend();\n  };\n\n  Object.defineProperty(IgrItemLegend.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrItemLegend.prototype.createItemwiseLegendItems = function (legendItems, series) {\n    this.i.createItemwiseLegendItems(legendItems, series);\n  };\n\n  IgrItemLegend.prototype.exportVisualData = function () {\n    return this.i.exportVisualData();\n  };\n\n  IgrItemLegend.prototype.exportSerializedVisualData = function () {\n    return this.i.exportSerializedVisualData();\n  };\n\n  Object.defineProperty(IgrItemLegend.prototype, \"isItemwise\", {\n    /**\n    * Gets whether or not this legend supports itemwise visuals\n    */\n    get: function () {\n      return this.i.isItemwise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IgrItemLegend;\n}(IgrLegendBase);\n\nexport { IgrItemLegend };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-item-legend.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { ItemLegend } from \"./ItemLegend\";\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\n/**\n * Represents a legend that displays an item for each point in the series.\n*\n* You can use the `IgrItemLegend` to display a legend item for each data member bound to the `IgrBubbleSeries`\n*\n* ```ts\n*   <IgrItemLegend ref={this.onLegendRef} />\n* ```\n*\n* ```ts\n* this.onLegendRef = this.onLegendRef.bind(this);\n* public onLegendRef(legend: IgrItemLegend) {\n*         this.legend = legend;\n*         if (this.chart) {\n*             this.chart.actualSeries[0].legend = this.legend;\n*         }\n*     }\n* ```\n*/\nvar IgrItemLegend = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgrItemLegend, _super);\n    function IgrItemLegend(props) {\n        var _this = _super.call(this, props) || this;\n        _this._getMainRef = _this._getMainRef.bind(_this);\n        var container;\n        if (document) {\n            container = document.createElement(\"div\");\n            container.style.display = \"block\";\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n        }\n        var root;\n        root = container;\n        var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n        _this.container = ren.getWrapper(container);\n        _this._wrapper = ren;\n        _this.i.provideContainer(ren);\n        return _this;\n    }\n    IgrItemLegend.prototype.render = function () {\n        var div = React.createElement(\"div\", {\n            className: \"ig-item-legend igr-item-legend\",\n            ref: this._getMainRef\n        });\n        return div;\n    };\n    IgrItemLegend.prototype._getMainRef = function (div) {\n        this._elRef = div;\n    };\n    IgrItemLegend.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.initializeContent();\n    };\n    IgrItemLegend.prototype.initializeContent = function () {\n        this._elRef.appendChild(this.container.getNativeElement());\n    };\n    IgrItemLegend.prototype.destroy = function () {\n        this._wrapper.destroy();\n        this.i.provideContainer(null);\n    };\n    IgrItemLegend.prototype.createImplementation = function () {\n        return new ItemLegend();\n    };\n    Object.defineProperty(IgrItemLegend.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrItemLegend.prototype.createItemwiseLegendItems = function (legendItems, series) {\n        this.i.createItemwiseLegendItems(legendItems, series);\n    };\n    IgrItemLegend.prototype.exportVisualData = function () {\n        return this.i.exportVisualData();\n    };\n    IgrItemLegend.prototype.exportSerializedVisualData = function () {\n        return this.i.exportSerializedVisualData();\n    };\n    Object.defineProperty(IgrItemLegend.prototype, \"isItemwise\", {\n        /**\n     * Gets whether or not this legend supports itemwise visuals\n    */\n        get: function () {\n            return this.i.isItemwise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IgrItemLegend;\n}(IgrLegendBase));\nexport { IgrItemLegend };\n//# sourceMappingURL=igr-item-legend.js.map\n"]},"metadata":{},"sourceType":"module"}