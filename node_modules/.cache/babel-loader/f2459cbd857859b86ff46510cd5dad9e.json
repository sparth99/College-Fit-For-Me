{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PolarBase } from \"./PolarBase\";\nimport { markType } from \"igniteui-react-core\";\nimport { PolarBaseView } from \"./PolarBaseView\";\nimport { Color } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PolarScatterSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarScatterSeries, _super);\n\n  function PolarScatterSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.ab = PolarScatterSeries.$;\n    return _this;\n  }\n\n  PolarScatterSeries.prototype.bf = function () {\n    return new PolarScatterSeriesView(this);\n  };\n\n  PolarScatterSeries.prototype.iu = function (a) {\n    _super.prototype.iu.call(this, a);\n\n    this.oz = a;\n  };\n\n  PolarScatterSeries.$t = markType(PolarScatterSeries, 'PolarScatterSeries', PolarBase.$);\n  return PolarScatterSeries;\n}(PolarBase);\n\nexport { PolarScatterSeries };\n/**\n * @hidden\n */\n\nvar PolarScatterSeriesView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PolarScatterSeriesView, _super);\n\n  function PolarScatterSeriesView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.cy = null;\n    _this.cy = a;\n    return _this;\n  }\n\n  PolarScatterSeriesView.prototype.ap = function () {\n    _super.prototype.ap.call(this);\n\n    if (!this.n) {\n      this.e.bj = 1;\n    }\n  };\n\n  PolarScatterSeriesView.prototype.ac = function () {\n    var a = new Color();\n    a.colorString = \"rgba(95,95,95,0.5)\";\n    this.e.la = a;\n    this.e.ev = 3;\n    this.e.ew = 2;\n    this.e.ex = 2;\n    this.e.du = false;\n  };\n\n  PolarScatterSeriesView.$t = markType(PolarScatterSeriesView, 'PolarScatterSeriesView', PolarBaseView.$);\n  return PolarScatterSeriesView;\n}(PolarBaseView);\n\nexport { PolarScatterSeriesView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PolarScatterSeries_combined.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,SAAT,QAA0B,aAA1B;AAEA,SAAqB,QAArB,QAAqC,qBAArC;AAEA,SAAS,aAAT,QAA8B,iBAA9B;AAEA,SAAS,KAAT,QAAsB,qBAAtB;AAGA;;;;AAGA,IAAA,kBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,EAAA,MAAA;;AAUvC,WAAA,kBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,EAAL,GAAgB,kBAAmB,CAAC,CAApC;;AACA;;AAXS,EAAA,kBAAA,CAAA,SAAA,CAAA,EAAA,GAAV,YAAA;AACC,WAAO,IAAI,sBAAJ,CAA2B,IAA3B,CAAP;AACA,GAFS;;AAGV,EAAA,kBAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,CAAH,EAAgB;AACf,IAAA,MAAA,CAAA,SAAA,CAAM,EAAN,CAAQ,IAAR,CAAQ,IAAR,EAAS,CAAT;;AACA,SAAK,EAAL,GAAkC,CAAlC;AACA,GAHD;;AAJO,EAAA,kBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,kBAAD,EAAqB,oBAArB,EAAiD,SAAU,CAAC,CAA5D,CAAnB;AAaR,SAAA,kBAAA;AAAC,CAdD,CAAwC,SAAxC,CAAA;;SAAa,kB;AAgBb;;;;AAGA,IAAA,sBAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,OAAA,CAAA,SAAA,CAAA,sBAAA,EAAA,MAAA;;AAG3C,WAAA,sBAAA,CAAY,CAAZ,EAAiC;AAAjC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,KAAQ,IADT;;AADU,IAAA,KAAA,CAAA,EAAA,GAAyB,IAAzB;AAGT,IAAA,KAAI,CAAC,EAAL,GAAU,CAAV;;AACA;;AACD,EAAA,sBAAA,CAAA,SAAA,CAAA,EAAA,GAAA,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,EAAN,CAAQ,IAAR,CAAQ,IAAR;;AACA,QAAI,CAAC,KAAK,CAAV,EAAa;AACZ,WAAK,CAAL,CAAO,EAAP,GAAY,CAAZ;AACA;AACD,GALD;;AAMU,EAAA,sBAAA,CAAA,SAAA,CAAA,EAAA,GAAV,YAAA;AACC,QAAI,CAAC,GAAG,IAAI,KAAJ,EAAR;AACA,IAAA,CAAC,CAAC,WAAF,GAAgB,oBAAhB;AACA,SAAK,CAAL,CAAO,EAAP,GAAY,CAAZ;AACA,SAAK,CAAL,CAAO,EAAP,GAAY,CAAZ;AACA,SAAK,CAAL,CAAO,EAAP,GAAY,CAAZ;AACA,SAAK,CAAL,CAAO,EAAP,GAAY,CAAZ;AACA,SAAK,CAAL,CAAO,EAAP,GAAY,KAAZ;AACA,GARS;;AAZH,EAAA,sBAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,sBAAD,EAAyB,wBAAzB,EAAyD,aAAc,CAAC,CAAxE,CAAnB;AAqBR,SAAA,sBAAA;AAAC,CAtBD,CAA4C,aAA5C,CAAA;;SAAa,sB","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PolarBase } from \"./PolarBase\";\nimport { markType } from \"igniteui-react-core\";\nimport { PolarBaseView } from \"./PolarBaseView\";\nimport { Color } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PolarScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarScatterSeries, _super);\n    function PolarScatterSeries() {\n        var _this = _super.call(this) || this;\n        _this.ab = PolarScatterSeries.$;\n        return _this;\n    }\n    PolarScatterSeries.prototype.bf = function () {\n        return new PolarScatterSeriesView(this);\n    };\n    PolarScatterSeries.prototype.iu = function (a) {\n        _super.prototype.iu.call(this, a);\n        this.oz = a;\n    };\n    PolarScatterSeries.$t = markType(PolarScatterSeries, 'PolarScatterSeries', PolarBase.$);\n    return PolarScatterSeries;\n}(PolarBase));\nexport { PolarScatterSeries };\n/**\n * @hidden\n */\nvar PolarScatterSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PolarScatterSeriesView, _super);\n    function PolarScatterSeriesView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.cy = null;\n        _this.cy = a;\n        return _this;\n    }\n    PolarScatterSeriesView.prototype.ap = function () {\n        _super.prototype.ap.call(this);\n        if (!this.n) {\n            this.e.bj = 1;\n        }\n    };\n    PolarScatterSeriesView.prototype.ac = function () {\n        var a = new Color();\n        a.colorString = \"rgba(95,95,95,0.5)\";\n        this.e.la = a;\n        this.e.ev = 3;\n        this.e.ew = 2;\n        this.e.ex = 2;\n        this.e.du = false;\n    };\n    PolarScatterSeriesView.$t = markType(PolarScatterSeriesView, 'PolarScatterSeriesView', PolarBaseView.$);\n    return PolarScatterSeriesView;\n}(PolarBaseView));\nexport { PolarScatterSeriesView };\n//# sourceMappingURL=PolarScatterSeries_combined.js.map\n"]},"metadata":{},"sourceType":"module"}