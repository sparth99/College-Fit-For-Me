{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar WilliamsPercentRIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(WilliamsPercentRIndicatorStrategy, _super);\n\n  function WilliamsPercentRIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WilliamsPercentRIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.add(\"HighColumn\");\n    c.add(\"LowColumn\");\n    c.add(\"CloseColumn\");\n    return c;\n  };\n\n  WilliamsPercentRIndicatorStrategy.prototype.a = function (a, b) {\n    var c = a.period;\n    var d = a.highColumn;\n    var e = a.lowColumn;\n\n    for (var f = 0; f < a.count; f++) {\n      var g = Math.min(c, f);\n      var h = -1.7976931348623157E+308;\n      var i = 1.7976931348623157E+308;\n\n      for (var j = 0; j < g; j++) {\n        if (!isNaN_(d.item(f - j))) {\n          h = Math.max(h, d.item(f - j));\n        }\n\n        if (!isNaN_(e.item(f - j))) {\n          i = Math.min(i, e.item(f - j));\n        }\n      }\n\n      a.indicatorColumn.item(f, b.i((a.closeColumn.item(f) - h) / (h - i) * 100));\n    }\n\n    return true;\n  };\n\n  WilliamsPercentRIndicatorStrategy.$t = markType(WilliamsPercentRIndicatorStrategy, 'WilliamsPercentRIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return WilliamsPercentRIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { WilliamsPercentRIndicatorStrategy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/WilliamsPercentRIndicatorStrategy.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAAuC,YAAvC,EAA2D,QAA3D,QAA2E,qBAA3E;AAGA,SAAS,MAAT,QAAuB,qBAAvB;AAEA,SAAS,MAAT,QAAuB,qBAAvB;AAEA;;;;AAGA,IAAA,iCAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuD,EAAA,OAAA,CAAA,SAAA,CAAA,iCAAA,EAAA,MAAA;;AAAvD,WAAA,iCAAA,GAAA;;AA6BC;;AA3BA,EAAA,iCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,YAAN;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,WAAN;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,aAAN;AACA,WAAO,CAAP;AACA,GAND;;AAOA,EAAA,iCAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAW,CAAC,CAAC,MAAlB;AACA,QAAI,CAAC,GAAoB,CAAC,CAAC,UAA3B;AACA,QAAI,CAAC,GAAoB,CAAC,CAAC,SAA3B;;AACA,SAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAAC,CAAC,KAA9B,EAAqC,CAAC,EAAtC,EAA0C;AACzC,UAAI,CAAC,GAAW,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAhB;AACA,UAAI,CAAC,GAAW,CAAC,uBAAjB;AACA,UAAI,CAAC,GAAW,uBAAhB;;AACA,WAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAA5B,EAA+B,CAAC,EAAhC,EAAoC;AACnC,YAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAX,CAAD,CAAX,EAA4B;AAC3B,UAAA,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAX,CAAZ,CAAJ;AACA;;AACD,YAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAX,CAAD,CAAX,EAA4B;AAC3B,UAAA,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,CAAC,IAAF,CAAO,CAAC,GAAG,CAAX,CAAZ,CAAJ;AACA;AACD;;AACD,MAAA,CAAC,CAAC,eAAF,CAAkB,IAAlB,CAAuB,CAAvB,EAA0B,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAC,WAAF,CAAc,IAAd,CAAmB,CAAnB,IAAwB,CAAzB,KAA+B,CAAC,GAAG,CAAnC,IAAwC,GAA5C,CAA1B;AACA;;AACD,WAAO,IAAP;AACA,GAnBD;;AARO,EAAA,iCAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,iCAAD,EAAoC,mCAApC,EAA+E,4BAA6B,CAAC,CAA7G,CAAnB;AA4BR,SAAA,iCAAA;AAAC,CA7BD,CAAuD,4BAAvD,CAAA;;SAAa,iC","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { isNaN_ } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar WilliamsPercentRIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WilliamsPercentRIndicatorStrategy, _super);\n    function WilliamsPercentRIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WilliamsPercentRIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.add(\"HighColumn\");\n        c.add(\"LowColumn\");\n        c.add(\"CloseColumn\");\n        return c;\n    };\n    WilliamsPercentRIndicatorStrategy.prototype.a = function (a, b) {\n        var c = a.period;\n        var d = a.highColumn;\n        var e = a.lowColumn;\n        for (var f = 0; f < a.count; f++) {\n            var g = Math.min(c, f);\n            var h = -1.7976931348623157E+308;\n            var i = 1.7976931348623157E+308;\n            for (var j = 0; j < g; j++) {\n                if (!isNaN_(d.item(f - j))) {\n                    h = Math.max(h, d.item(f - j));\n                }\n                if (!isNaN_(e.item(f - j))) {\n                    i = Math.min(i, e.item(f - j));\n                }\n            }\n            a.indicatorColumn.item(f, b.i((a.closeColumn.item(f) - h) / (h - i) * 100));\n        }\n        return true;\n    };\n    WilliamsPercentRIndicatorStrategy.$t = markType(WilliamsPercentRIndicatorStrategy, 'WilliamsPercentRIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return WilliamsPercentRIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { WilliamsPercentRIndicatorStrategy };\n//# sourceMappingURL=WilliamsPercentRIndicatorStrategy.js.map\n"]},"metadata":{},"sourceType":"module"}