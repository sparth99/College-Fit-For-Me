{"ast":null,"code":"import { IgrSeries } from \"./igr-series\";\nimport { ensureBool, fromPoint } from \"igniteui-react-core\";\n/**\n * Provides data for IgxDataChartComponent mouse button related events.\n*\n* `DataChartMouseButtonEventHandler` class represents the method that will handle IgxDataChartComponent mouse button related events.\n*\n* ```ts\n* this.chart.seriesMouseLeftButtonDown.subscribe(this.chart_seriesMouseLeftButtonDown);\n* chart_seriesMouseLeftButtonDown(sender :any,args: DataChartMouseButtonEventArgs )\n*   {\n*   }\n* ```\n*/\n\nvar IgrDataChartMouseButtonEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrDataChartMouseButtonEventArgs() {}\n\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  IgrDataChartMouseButtonEventArgs.prototype.onImplementationCreated = function () {};\n\n  IgrDataChartMouseButtonEventArgs.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"handled\", {\n    /**\n     * Gets or sets a value that indicates the present state of the event handling for a routed\n     * event as it travels the route.\n     * ChartMouseButton events are not routed events; setting this property effects the underlying\n     * MouseButtonEvent.\n    *\n    * Use the `handled` property to indicates the present state of the event handling for a routed event.\n    */\n    get: function () {\n      return this.i.handled;\n    },\n    set: function (v) {\n      this.i.handled = ensureBool(v);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"originalSource\", {\n    /**\n     * Gets a reference to the object that raised the event.\n    *\n    * Use the `originalSource` property for the raised object event.\n    *\n    * ```ts\n    * args.originalSource;\n    * ```\n    */\n    get: function () {\n      return this.i.originalSource;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"item\", {\n    /**\n     * Gets the ItemsSource item associated with the current event.\n    *\n    * Use the `item` property to get the ItemsSource item associated with the current event.\n    *\n    * ```ts\n    * var item1= args.item;\n    * ```\n    */\n    get: function () {\n      return this.i.item;\n    },\n    set: function (v) {\n      this.i.item = v;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"series\", {\n    /**\n     * Gets the series associated with the current event.\n    *\n    * Use the `series` property for the associated current event.\n    *\n    * ```ts\n    *  var DataSeries= args.series;\n    * ```\n    */\n    get: function () {\n      if (this.i.series == null) {\n        return null;\n      }\n\n      if (!this.i.series.externalObject) {\n        var e = IgrSeries._createFromInternal(this.i.series);\n\n        if (e) {\n          e._implementation = this.i.series;\n        }\n\n        this.i.series.externalObject = e;\n      }\n\n      return this.i.series.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.series = null : this.i.series = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"chart\", {\n    /**\n     * Gets the Chart associated with the current event.\n    *\n    * Use the `chart` property to get the chart associated with the current event.\n    *\n    * ```ts\n    * var dataChart=  args.chart;\n    * ```\n    */\n    get: function () {\n      if (this.i.chart == null) {\n        return null;\n      }\n\n      return this.i.chart.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.chart = null : this.i.chart = v.i;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Provides a human readable description of the mouse button event.\n  \r\n  *\n  * Use the `toString` property to provides a human readable discription.\n  *\n  * ```ts\n  *   var item= args.item.label.toString();\n  * ```\n  */\n\n  IgrDataChartMouseButtonEventArgs.prototype.toString = function () {\n    var iv = this.i.toString();\n    return iv;\n  };\n  /**\n   * Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated\n   * against the origin of a supplied UIElement.\n  \r\n  * @param relativeTo  * Any UIElement derived object that is contained by the the engine plug-in\n   * and connected to the object tree. To specify the object relative to the overall the engine\n   * coordinate system, use a relativeTo value of null.\n  *\n  * To get mouse X and Y position.\n  *\n  * ```ts\n  *    var args.getPosition;\n  * ```\n  */\n\n\n  IgrDataChartMouseButtonEventArgs.prototype.getPosition = function (relativeTo) {\n    var iv = this.i.getPosition(relativeTo);\n    return fromPoint(iv);\n  };\n\n  return IgrDataChartMouseButtonEventArgs;\n}();\n\nexport { IgrDataChartMouseButtonEventArgs };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/igr-data-chart-mouse-button-event-args.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { IgrSeries } from \"./igr-series\";\nimport { ensureBool, fromPoint } from \"igniteui-react-core\";\n/**\n * Provides data for IgxDataChartComponent mouse button related events.\n*\n* `DataChartMouseButtonEventHandler` class represents the method that will handle IgxDataChartComponent mouse button related events.\n*\n* ```ts\n* this.chart.seriesMouseLeftButtonDown.subscribe(this.chart_seriesMouseLeftButtonDown);\n* chart_seriesMouseLeftButtonDown(sender :any,args: DataChartMouseButtonEventArgs )\n*   {\n*   }\n* ```\n*/\nvar IgrDataChartMouseButtonEventArgs = /** @class */ /*@__PURE__*/ (function () {\n    function IgrDataChartMouseButtonEventArgs() {\n    }\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IgrDataChartMouseButtonEventArgs.prototype.onImplementationCreated = function () {\n    };\n    IgrDataChartMouseButtonEventArgs.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"handled\", {\n        /**\n         * Gets or sets a value that indicates the present state of the event handling for a routed\n         * event as it travels the route.\n         * ChartMouseButton events are not routed events; setting this property effects the underlying\n         * MouseButtonEvent.\n        *\n        * Use the `handled` property to indicates the present state of the event handling for a routed event.\n        */\n        get: function () {\n            return this.i.handled;\n        },\n        set: function (v) {\n            this.i.handled = ensureBool(v);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"originalSource\", {\n        /**\n         * Gets a reference to the object that raised the event.\n        *\n        * Use the `originalSource` property for the raised object event.\n        *\n        * ```ts\n        * args.originalSource;\n        * ```\n        */\n        get: function () {\n            return this.i.originalSource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"item\", {\n        /**\n         * Gets the ItemsSource item associated with the current event.\n        *\n        * Use the `item` property to get the ItemsSource item associated with the current event.\n        *\n        * ```ts\n        * var item1= args.item;\n        * ```\n        */\n        get: function () {\n            return this.i.item;\n        },\n        set: function (v) {\n            this.i.item = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"series\", {\n        /**\n         * Gets the series associated with the current event.\n        *\n        * Use the `series` property for the associated current event.\n        *\n        * ```ts\n        *  var DataSeries= args.series;\n        * ```\n        */\n        get: function () {\n            if (this.i.series == null) {\n                return null;\n            }\n            if (!this.i.series.externalObject) {\n                var e = IgrSeries._createFromInternal(this.i.series);\n                if (e) {\n                    e._implementation = this.i.series;\n                }\n                this.i.series.externalObject = e;\n            }\n            return this.i.series.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.series = null : this.i.series = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataChartMouseButtonEventArgs.prototype, \"chart\", {\n        /**\n         * Gets the Chart associated with the current event.\n        *\n        * Use the `chart` property to get the chart associated with the current event.\n        *\n        * ```ts\n        * var dataChart=  args.chart;\n        * ```\n        */\n        get: function () {\n            if (this.i.chart == null) {\n                return null;\n            }\n            return this.i.chart.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.chart = null : this.i.chart = v.i;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Provides a human readable description of the mouse button event.\n    \r\n    *\n    * Use the `toString` property to provides a human readable discription.\n    *\n    * ```ts\n    *   var item= args.item.label.toString();\n    * ```\n    */\n    IgrDataChartMouseButtonEventArgs.prototype.toString = function () {\n        var iv = this.i.toString();\n        return (iv);\n    };\n    /**\n     * Returns the x- and y- coordinates of the mouse pointer position, optionally evaluated\n     * against the origin of a supplied UIElement.\n    \r\n    * @param relativeTo  * Any UIElement derived object that is contained by the the engine plug-in\n     * and connected to the object tree. To specify the object relative to the overall the engine\n     * coordinate system, use a relativeTo value of null.\n    *\n    * To get mouse X and Y position.\n    *\n    * ```ts\n    *    var args.getPosition;\n    * ```\n    */\n    IgrDataChartMouseButtonEventArgs.prototype.getPosition = function (relativeTo) {\n        var iv = this.i.getPosition(relativeTo);\n        return fromPoint(iv);\n    };\n    return IgrDataChartMouseButtonEventArgs;\n}());\nexport { IgrDataChartMouseButtonEventArgs };\n//# sourceMappingURL=igr-data-chart-mouse-button-event-args.js.map\n"]},"metadata":{},"sourceType":"module"}