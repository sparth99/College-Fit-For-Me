{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/SearchResults.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner, Button, Card, ButtonGroup } from 'react-bootstrap';\nimport { api } from '../instance.js';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Highlighter from \"react-highlight-words\";\nexport default class SearchResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      models: [],\n      loading: true,\n      routeModelType: 'cities',\n      apiModelType: 'cities',\n      searchQuery: ''\n    };\n\n    this.fetchModels = (modelType = '') => {\n      console.log(modelType);\n      let urlSplit = String(window.location.href).split('/');\n      let searchInfo = urlSplit[urlSplit.length - 1];\n      let routeModelType = modelType === '' ? searchInfo.substring(0, searchInfo.indexOf('?')) : modelType;\n      let apiModelType = routeModelType;\n\n      if (routeModelType === 'attractions') {\n        apiModelType = 'restaurants';\n      }\n\n      let searchQuery = searchInfo.substring(searchInfo.indexOf('=') + 1).replace(/%20/g, ' ');\n      this.setState({\n        searchQuery,\n        routeModelType,\n        apiModelType\n      });\n      api.get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery\n        }\n      }).then(res => res.data).then(models => {\n        this.setState({\n          models,\n          loading: false\n        });\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.formatPercent = value => {\n      return value === 0 ? 'N/A' : value.toFixed(2).toString() + '%';\n    };\n\n    this.formatString = value => {\n      return value === '' ? 'N/A' : value;\n    };\n\n    this.displayModels = () => {\n      const models = this.state.models;\n      let rows = [];\n\n      for (let r = 0; r < Infinity; r++) {\n        let children = [];\n\n        for (let c = 0; c < 4; c++) {\n          if (models.length <= c + 4 * r) {\n            break;\n          }\n\n          var model = models[c + 4 * r];\n\n          if (this.state.routeModelType === 'cities') {\n            let city_name = model.city_name + \", \" + model.state_name;\n            let population = \"Population: \" + parseInt(model.population);\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              className: \"cities-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"city-instance\",\n              href: '/cities/' + String(model.city_state_name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              src: model.image_url,\n              variant: \"top\",\n              height: \"200\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Title, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: city_name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(Card.Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: population.toLocaleString(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }\n            }))))));\n          } else if (this.state.routeModelType === 'universities') {\n            let university = model.name;\n            let city = \"City: \" + model.city_name + \", \" + model.state_name;\n            let acceptance_rate = \"Acceptance Rate: \" + this.formatPercent(parseInt(model.admission_rate));\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              className: \"universities-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"university-instance\",\n              href: '/universities/' + String(model.name).replace(/ /g, '_'),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              src: model.image_url,\n              variant: \"top\",\n              height: \"200\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: university,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(Card.Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: city,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(Card.Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: acceptance_rate,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }\n            }))))));\n          } else {\n            let attraction = model.restaurant_name;\n            let category = \"Category: \" + this.formatString(model.categories);\n            children.push(\n            /*#__PURE__*/\n            React.createElement(Card, {\n              className: \"attractions-card\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 13\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Nav.Link, {\n              className: \"attraction-instance\",\n              href: '/attractions/' + String(model.restaurant_name + '*' + model.id).replace(/ /g, '_').toLowerCase(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Img, {\n              src: model.image_url,\n              variant: \"top\",\n              height: \"200\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }\n            }),\n            /*#__PURE__*/\n            React.createElement(Card.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Card.Title, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: attraction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }\n            })),\n            /*#__PURE__*/\n            React.createElement(Card.Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }\n            },\n            /*#__PURE__*/\n            React.createElement(Highlighter, {\n              searchWords: [this.state.searchQuery],\n              autoEscape: true,\n              textToHighlight: category,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }\n            }))))));\n          }\n        }\n\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }\n        }));\n        rows.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }\n        }, children));\n        if (models.length < 4 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.modelSelectionRow = () =>\n    /*#__PURE__*/\n    React.createElement(ButtonGroup, {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outline-seconday\",\n      id: \"dropdown-btn\",\n      onClick: () => this.searchModels('cities'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, \"Cities\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outline-seconday\",\n      id: \"dropdown-btn\",\n      onClick: () => this.searchModels('universities'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, \"Universities\"),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      variant: \"outline-seconday\",\n      id: \"dropdown-btn\",\n      onClick: () => this.searchModels('restaurants'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, \"Restaurants\"));\n  }\n\n  componentDidMount() {\n    this.fetchModels();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Navigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, \"Search Results for \\\"\", this.state.searchQuery, \"\\\"\"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"btn-group d-flex\",\n        role: \"group\",\n        \"aria-label\": \"...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        id: \"dropdown-btn\",\n        onClick: () => this.fetchModels('cities'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, \"Cities\"),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        id: \"dropdown-btn\",\n        onClick: () => this.fetchModels('universities'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"Universities\"),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        id: \"dropdown-btn\",\n        onClick: () => this.fetchModels('attractions'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, \"Attractions\")), this.state.loading ?\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        className: \"Spinner-custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(CardDeck, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, this.displayModels()),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/SearchResults.js"],"names":["React","Component","Nav","CardDeck","Spinner","Button","Card","ButtonGroup","api","Navigation","Footer","Highlighter","SearchResults","state","models","loading","routeModelType","apiModelType","searchQuery","fetchModels","modelType","console","log","urlSplit","String","window","location","href","split","searchInfo","length","substring","indexOf","replace","setState","get","params","search_query","then","res","data","catch","formatPercent","value","toFixed","toString","formatString","displayModels","rows","r","Infinity","children","c","model","city_name","state_name","population","parseInt","push","city_state_name","image_url","toLocaleString","university","name","city","acceptance_rate","admission_rate","attraction","restaurant_name","category","categories","id","toLowerCase","modelSelectionRow","searchModels","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Nav,\n  CardDeck,\n  Spinner,\n  Button,\n  Card,\n  ButtonGroup,\n} from 'react-bootstrap';\nimport { api } from '../instance.js';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Highlighter from \"react-highlight-words\";\n\nexport default class SearchResults extends Component {\n  state = {\n    models: [],\n    loading: true,\n    routeModelType: 'cities',\n    apiModelType: 'cities',\n    searchQuery: '',\n  };\n\n  componentDidMount() {\n    this.fetchModels();\n  }\n\n  fetchModels = (modelType = '') => {\n    console.log(modelType)\n    let urlSplit = String(window.location.href).split('/');\n    let searchInfo = urlSplit[urlSplit.length - 1];\n    let routeModelType = modelType === '' ? searchInfo.substring(0, searchInfo.indexOf('?')) : modelType;\n    let apiModelType = routeModelType;\n    if (routeModelType === 'attractions') {\n      apiModelType = 'restaurants';\n    }\n    let searchQuery = searchInfo\n      .substring(searchInfo.indexOf('=') + 1)\n      .replace(/%20/g, ' ');\n    this.setState({ searchQuery, routeModelType, apiModelType });\n\n    api\n      .get(`${apiModelType}/search/`, {\n        params: {\n          search_query: searchQuery,\n        },\n      })\n      .then((res) => res.data)\n      .then((models) => {\n        this.setState({ models, loading: false });\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  formatPercent = (value) => {\n    return value === 0 ? 'N/A' : value.toFixed(2).toString() + '%';\n  };\n\n  formatString = (value) => {\n    return value === '' ? 'N/A' : value;\n  };\n\n  displayModels = () => {\n    const models = this.state.models;\n    let rows = [];\n    for (let r = 0; r < Infinity; r++) {\n      let children = [];\n      for (let c = 0; c < 4; c++) {\n        if (models.length <= c + 4 * r) {\n          break;\n        }\n        var model = models[c + 4 * r];\n        if (this.state.routeModelType === 'cities') {\n          let city_name = model.city_name + \", \" + model.state_name\n          let population = \"Population: \" + parseInt(model.population)\n          children.push(\n            <Card className=\"cities-card\">\n              <Nav.Link\n                className=\"city-instance\"\n                href={'/cities/' + String(model.city_state_name)}\n              >\n                <Card.Img src={model.image_url} variant=\"top\" height=\"200\" />\n                <Card.Body>\n                  <Card.Title>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={city_name}\n                    />\n                  </Card.Title>\n                  <Card.Text>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={population.toLocaleString()}\n                    />\n                  </Card.Text>\n                </Card.Body>\n              </Nav.Link>\n            </Card>\n          );\n        } else if (this.state.routeModelType === 'universities') {\n          let university = model.name\n          let city = \"City: \" + model.city_name + \", \" + model.state_name\n          let acceptance_rate = \"Acceptance Rate: \" + this.formatPercent(parseInt(model.admission_rate))\n          children.push(\n            <Card className=\"universities-card\">\n              <Nav.Link\n                className=\"university-instance\"\n                href={'/universities/' + String(model.name).replace(/ /g, '_')}\n              >\n                <Card.Img src={model.image_url} variant=\"top\" height=\"200\" />\n                <Card.Body>\n                  <Card.Text>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={university}\n                    />\n                  </Card.Text>\n                  <Card.Text>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={city}\n                    />\n                  </Card.Text>\n                  <Card.Text>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={acceptance_rate}\n                    />\n                  </Card.Text>\n                </Card.Body>\n              </Nav.Link>\n            </Card>\n          );\n        } else {\n          let attraction = model.restaurant_name\n          let category = \"Category: \" + this.formatString(model.categories)\n          children.push(\n            <Card className=\"attractions-card\">\n              <Nav.Link\n                className=\"attraction-instance\"\n                href={\n                  '/attractions/' +\n                  String(model.restaurant_name + '*' + model.id)\n                    .replace(/ /g, '_')\n                    .toLowerCase()\n                }\n              >\n                <Card.Img src={model.image_url} variant=\"top\" height=\"200\" />\n                <Card.Body>\n                  <Card.Title>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={attraction}\n                    />\n                  </Card.Title>\n                  <Card.Text>\n                    <Highlighter\n                      searchWords={[this.state.searchQuery]}\n                      autoEscape={true}\n                      textToHighlight={category}\n                    />\n                  </Card.Text>\n                </Card.Body>\n              </Nav.Link>\n            </Card>\n          );\n        }\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (models.length < 4 * r) break;\n    }\n    return rows;\n  };\n\n  modelSelectionRow = () => (\n    <ButtonGroup className=\"d-flex\">\n      <Button\n        variant=\"outline-seconday\"\n        id=\"dropdown-btn\"\n        onClick={() => this.searchModels('cities')}\n      >\n        Cities\n      </Button>\n      <Button\n        variant=\"outline-seconday\"\n        id=\"dropdown-btn\"\n        onClick={() => this.searchModels('universities')}\n      >\n        Universities\n      </Button>\n      <Button\n        variant=\"outline-seconday\"\n        id=\"dropdown-btn\"\n        onClick={() => this.searchModels('restaurants')}\n      >\n        Restaurants\n      </Button>\n    </ButtonGroup>\n  );\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <p></p>\n        <h1>Search Results for \"{this.state.searchQuery}\"</h1>\n        {/* <Row of buttons to models/> */}\n        <div className=\"btn-group d-flex\" role=\"group\" aria-label=\"...\">\n          <button type=\"button\" className=\"btn btn-primary\" id='dropdown-btn' onClick={() => this.fetchModels('cities')}>Cities\n          </button>\n          <button type=\"button\" className=\"btn btn-primary\" id='dropdown-btn' onClick={() => this.fetchModels('universities')}>Universities\n          </button>\n          <button type=\"button\" className=\"btn btn-primary\" id='dropdown-btn' onClick={() => this.fetchModels('attractions')}>Attractions\n          </button>\n        </div>\n\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <CardDeck>{this.displayModels()}</CardDeck>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}