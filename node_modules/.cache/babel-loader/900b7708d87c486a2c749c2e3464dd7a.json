{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Universities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck } from 'react-bootstrap';\nimport '../Styles/Universities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport { api } from '../instance';\nexport default class Universities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      universities: null,\n      page: 1\n    };\n\n    this.fetchUniversities = () => {\n      api.get('/universities', {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(universities => {\n        this.setState({\n          universities\n        });\n      });\n    };\n\n    this.displayUniversities = () => {\n      const {\n        universities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 3; c++) {\n          if (universities.length <= c + 3 * r) {\n            break;\n          }\n\n          var university = universities[c + 3 * r];\n          children.push(React.createElement(Card, {\n            className: \"universities-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(Nav.Link, {\n            href: '/universities/' + String(university.name).replace(/ /g, '_').toLowerCase(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(Card.Img, {\n            src: university.image_url,\n            variant: \"top\",\n            height: \"300\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, university.name), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"City: \", university.city_name, \", \", university.state_name), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Acceptance Rate: \", university.admission_rate.toFixed(2), \"%\")))));\n        }\n\n        rows.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n        rows.push(React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, children));\n        if (universities.length < 3 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page\n      }, () => this.fetchUniversities());\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUniversities();\n  }\n\n  render() {\n    if (this.state.universities === null) {\n      return React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" Loading ... \");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        className: \"universities-jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Find the University that's the best fit for you. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \"Explore information on over 5,000 Universities across the country.\"), React.createElement(CardDeck, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.displayUniversities(this.state.universities)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        className: \"center-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        class: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"page-link\",\n        href: \"#\",\n        onClick: () => this.changePage(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"1\")), React.createElement(\"li\", {\n        class: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"page-link\",\n        href: \"#\",\n        onClick: () => this.changePage(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"2\")), React.createElement(\"li\", {\n        class: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"page-link\",\n        href: \"#\",\n        onClick: () => this.changePage(3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"3\")), React.createElement(\"li\", {\n        class: \"page-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"page-link\",\n        href: \"#\",\n        onClick: () => this.changePage(4),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"4\")))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Universities.js"],"names":["React","Component","Nav","CardDeck","Navigation","Footer","Jumbotron","Card","api","Universities","state","universities","page","fetchUniversities","get","params","then","res","data","setState","displayUniversities","rows","r","children","c","length","university","push","String","name","replace","toLowerCase","image_url","city_name","state_name","admission_rate","toFixed","changePage","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, CardDeck } from 'react-bootstrap';\nimport '../Styles/Universities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport { api } from '../instance';\n\nexport default class Universities extends Component {\n  state = {\n    universities: null,\n    page: 1,\n  };\n\n  componentDidMount() {\n    this.fetchUniversities();\n  }\n\n  fetchUniversities = () => {\n    api\n      .get('/universities', {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((universities) => {\n        this.setState({ universities });\n      });\n  };\n\n  displayUniversities = () => {\n    const { universities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 3; c++) {\n        if (universities.length <= c + 3 * r) {\n          break;\n        }\n        var university = universities[c + 3 * r];\n        children.push(\n          <Card className=\"universities-card\">\n            <Nav.Link\n              href={\n                '/universities/' +\n                String(university.name)\n                  .replace(/ /g, '_')\n                  .toLowerCase()\n              }\n            >\n              <Card.Img src={university.image_url} variant=\"top\" height=\"300\" />\n              <Card.Body>\n                <Card.Title>{university.name}</Card.Title>\n                <Card.Text>\n                  City: {university.city_name}, {university.state_name}\n                </Card.Text>\n                <Card.Text>\n                  Acceptance Rate: {university.admission_rate.toFixed(2)}%\n                </Card.Text>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (universities.length < 3 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n      },\n      () => this.fetchUniversities()\n    );\n  };\n\n  render() {\n    if (this.state.universities === null) {\n      return <b> Loading ... </b>;\n    } else {\n      return (\n        <div>\n          <Navigation />\n          <Jumbotron className=\"universities-jumbotron\"></Jumbotron>\n          <p>\n            Find the University that's the best fit for you. <br />\n            Explore information on over 5,000 Universities across the country.\n          </p>\n          <CardDeck>\n            {this.displayUniversities(this.state.universities)}\n          </CardDeck>\n          <p></p>\n          <nav className=\"center-nav\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\">\n                <a\n                  class=\"page-link\"\n                  href=\"#\"\n                  onClick={() => this.changePage(1)}\n                >\n                  1\n                </a>\n              </li>\n              <li class=\"page-item\">\n                <a\n                  class=\"page-link\"\n                  href=\"#\"\n                  onClick={() => this.changePage(2)}\n                >\n                  2\n                </a>\n              </li>\n              <li class=\"page-item\">\n                <a\n                  class=\"page-link\"\n                  href=\"#\"\n                  onClick={() => this.changePage(3)}\n                >\n                  3\n                </a>\n              </li>\n              <li class=\"page-item\">\n                <a\n                  class=\"page-link\"\n                  href=\"#\"\n                  onClick={() => this.changePage(4)}\n                >\n                  4\n                </a>\n              </li>\n            </ul>\n          </nav>\n          <Footer />\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}