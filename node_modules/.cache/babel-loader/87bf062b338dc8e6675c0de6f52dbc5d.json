{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PieChartBase } from \"./PieChartBase\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { PieChartBaseView } from \"./PieChartBaseView\";\nimport { Base, Number_$type, typeCast, fromEnum, markType, markDep, IEnumerable_$type, INotifyPropertyChanged_$type, PropertyChangedEventArgs, Point_$type, delegateCombine, enumGetBox, EnumUtil, Delegate_$type, Boolean_$type, delegateRemove, runOn, fromEn, toEnum } from \"igniteui-react-core\";\nimport { Control } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-react-core\";\nimport { Pool$1 } from \"igniteui-react-core\";\nimport { FastItemsSource } from \"igniteui-react-core\";\nimport { IChartLegend_$type } from \"igniteui-react-core\";\nimport { ContentControl } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { PieSliceDataContext } from \"./PieSliceDataContext\";\nimport { UIElement } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity, intDivide } from \"igniteui-react-core\";\nimport { ILegendSeries_$type } from \"igniteui-react-core\";\nimport { ILegendTemplateProvider_$type } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Style } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { DataTemplate } from \"igniteui-react-core\";\nimport { ILegendOwner_$type } from \"igniteui-react-core\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { ObservableCollection$1 } from \"igniteui-react-core\";\nimport { DomRenderer_$type } from \"igniteui-react-core\";\nimport { DeviceUtils } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { HoleDimensionsChangedEventArgs } from \"./HoleDimensionsChangedEventArgs\";\nimport { DoughnutChartVisualData } from \"./DoughnutChartVisualData\";\nimport { RingSeriesVisualDataList } from \"./RingSeriesVisualDataList\";\nimport { RectData } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { PieLegendTemplates } from \"./PieLegendTemplates\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { FontUtil } from \"igniteui-react-core\";\nimport { DOMEventProxy } from \"igniteui-react-core\";\nimport { SliceVisualData } from \"./SliceVisualData\";\nimport { RingSeriesVisualData } from \"./RingSeriesVisualData\";\nimport { RingVisualDataList } from \"./RingVisualDataList\";\nimport { RingVisualData } from \"./RingVisualData\";\nimport { ArcVisualDataList } from \"./ArcVisualDataList\";\nimport { ArcVisualData } from \"./ArcVisualData\";\nimport { SliceVisualDataList } from \"./SliceVisualDataList\";\nimport { PointData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { DoughnutChartLabelVisualData } from \"./DoughnutChartLabelVisualData\";\nimport { RectUtil } from \"igniteui-react-core\";\nimport { SizeData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar Arc =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Arc, _super);\n\n  function Arc() {\n    var _this = _super.call(this) || this;\n\n    _this.hd = null;\n    _this.hb = null;\n    _this.hg = 0;\n    _this.ab = Arc.$;\n    return _this;\n  }\n\n  Arc.prototype.ar = function () {\n    return new ArcView(this);\n  };\n\n  Arc.prototype.e6 = function (a) {\n    _super.prototype.e6.call(this, a);\n\n    this.hc = a;\n  };\n\n  Object.defineProperty(Arc.prototype, \"he\", {\n    get: function () {\n      return this.hd;\n    },\n    set: function (a) {\n      var b = this.hd;\n      this.hd = a;\n      this.hc.b6(b, this.hd);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Arc.prototype, \"hh\", {\n    get: function () {\n      if (this.he != null) {\n        return this.he.i;\n      }\n\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Arc.prototype.e5 = function (a, b) {\n    _super.prototype.e5.call(this, a, b);\n\n    if (this.he != null) {\n      this.he.c.at.bu(a, b);\n    }\n  };\n\n  Arc.prototype.ek = function (a, b) {\n    if (this.he != null && this.he.d != null) {\n      _super.prototype.ek.call(this, a, b);\n\n      var c = this.hf(a);\n\n      if (c != null) {\n        this.he.d.bj(c, b);\n      }\n    }\n  };\n\n  Arc.prototype.fk = function (a, b) {\n    if (this.he != null && this.he.d != null) {\n      _super.prototype.fk.call(this, a, b);\n\n      var c = this.hf(a);\n\n      if (c != null) {\n        this.he.d.b5(c, b);\n      }\n    }\n  };\n\n  Arc.prototype.hf = function (a) {\n    var e_1, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.hb.g)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n\n        if (b.b == a) {\n          return b;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return null;\n  };\n\n  Arc.prototype.fj = function (a) {\n    if (this.bq) {\n      this.e9();\n      this.fh();\n      this.fg();\n    }\n  };\n\n  Arc.prototype.e9 = function () {\n    if (this.itemsSource == null || this.a5 == null) {\n      this.bg.count = 0;\n      return;\n    }\n\n    var a = this.b2.count;\n    var b = this.b1.count > 0;\n    var c = PieChartBase.cs(this.cf);\n    var d = PieChartBase.cs(this.cf);\n    this.cx = a;\n\n    if (b) {\n      a++;\n    }\n\n    for (var e = 0; e < a; e++) {\n      var f = false;\n      var g = void 0;\n\n      if (e == a - 1 && b) {\n        g = this.cp;\n        f = true;\n      } else {\n        g = this.be.item(this.b2._inner[e]);\n      }\n\n      if (this.gz == 1) {\n        d += PieChartBase.cs(Math.abs(g) * this.hi / this.cu);\n      } else {\n        d -= PieChartBase.cs(Math.abs(g) * this.hi / this.cu);\n      }\n\n      var h = this.bg.item(e);\n\n      if (this.cc >= 100) {\n        h._visibility = 1;\n      } else {\n        h._visibility = 0;\n      }\n\n      h.aw = true;\n      h.a3 = c;\n      h.ax = d;\n      h.a1 = h.a0 = this.cc;\n      h.isOthersSlice = f;\n      h.ay = this.cb;\n      h.a5 = e;\n      h.dataContext = f ? this.b0 : this.a5.item(this.b2._inner[e]);\n      h.isExploded = this.explodedSlices.contains(e);\n      h.isSelected = this.selectedSlices.contains(e);\n      c = d;\n      h.aw = false;\n    }\n\n    this.bg.count = a;\n\n    if (this.hb != null) {\n      this.hb.q(this);\n    }\n  };\n\n  Arc.prototype.fg = function () {\n    var e_2, _a;\n\n    var _this = this;\n\n    var a = typeCast(IChartLegend_$type, this.legend);\n\n    if (a == null) {\n      return;\n    }\n\n    if (this.ba == null || this.ba.count == 0 || this.he != null && this.he.c != null && this.he.d != null && !this.he.d.series.contains(this.he.c)) {\n      a.clearLegendItemsForSeries(this.he.c);\n      return;\n    }\n\n    this.bz = new List$1(UIElement.$, 0);\n\n    var _loop_1 = function (b) {\n      var c = new ContentControl();\n      var d = this_1.cy(b);\n      var e = b.b0;\n      var f = b.isOthersSlice ? this_1.dz : this_1.bb != null && this_1.bb.count > 0 ? this_1.bb.item(this_1.b2._inner[b.a5]) : null;\n      f = f == null && this_1.ba.count > 0 ? this_1.ba.item(this_1.b2._inner[b.a5]) : f;\n\n      c.content = function () {\n        var $ret = new PieSliceDataContext();\n        $ret.series = _this.he.c;\n        $ret.slice = b;\n        $ret.item = b.dataContext;\n        $ret.itemBrush = e;\n        $ret.legendLabel = f != null ? f.toString() : null;\n        $ret.itemLabel = d != null ? d.toString() : null;\n        $ret.percentValue = _this.ck(b);\n        $ret.isOthersSlice = b.isOthersSlice;\n        return $ret;\n      }();\n\n      var g = c.content;\n\n      if (this_1.au != null) {\n        var h = this_1.au(g);\n\n        if (h != null) {\n          g.legendLabel = h.toString();\n        }\n      }\n\n      if (this_1.legendItemTemplate != null) {\n        c.ah = this_1.legendItemTemplate;\n      }\n\n      this_1.bz.add(c);\n    };\n\n    var this_1 = this;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.bg.a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var b = _c.value;\n\n        _loop_1(b);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    if (a.isItemwise) {\n      var i = a;\n      i.createLegendItemsInsert(this.bz, this.he.c);\n    }\n  };\n\n  Arc.prototype.fa = function (a, b, c, d) {\n    _super.prototype.fa.call(this, a, b, c, d);\n\n    switch (b) {\n      case Arc.$$p[0]:\n        this.hg = d;\n        this.e9();\n        this.e8();\n        this.fh();\n        this.ff();\n        break;\n\n      case \"RadiusFactor\":\n        if (this.he != null && this.he.d != null) {\n          this.he.d.bw();\n        }\n\n        break;\n\n      case \"Legend\":\n        var e = typeCast(IChartLegend_$type, c);\n\n        if (e != null && this.he != null && this.he.c != null) {\n          e.clearLegendItemsForSeries(this.he.c);\n        }\n\n        break;\n    }\n  };\n\n  Arc.prototype.hj = function () {\n    return this.as.ac();\n  };\n\n  Arc.$t = markType(Arc, 'Arc', PieChartBase.$);\n  Arc.$$p = markDep(DependencyProperty, PropertyMetadata, Arc, 'fc', ['EndAngle:hi:hl', [1, 360]]);\n  return Arc;\n}(PieChartBase);\n\nexport { Arc };\n/**\n * @hidden\n */\n\nvar ArcItem =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ArcItem, _super);\n\n  function ArcItem() {\n    var _this = _super.call(this) || this;\n\n    _this.d = null;\n    _this.b = null;\n    _this.n = null;\n    _this.l = 0;\n    _this.m = 0;\n    _this.k = 0;\n    _this.i = 0;\n    _this.j = 0;\n    _this.c = 0;\n    _this.a = null;\n    _this.g = null;\n    _this.e = null;\n    _this.h = null;\n    _this.k = 0;\n    _this.i = 360;\n    _this.g = new List$1(SliceItem.$, 0);\n    return _this;\n  }\n\n  ArcItem.prototype.o = function (a, b) {\n    var e_3, _a;\n\n    var c = 0;\n    var d = 0;\n    var e = new List$1(Number_$type, 0);\n    var f = new List$1(Number_$type, 0);\n    var g = new List$1(Base.$, 0);\n    this.g.clear();\n\n    if (this.h == null) {\n      return;\n    }\n\n    var h = new FastItemsSource();\n    h.e = this.h;\n    var i = this.f(h, this.n);\n\n    if (i == null || i.count == 0) {\n      h.deregisterColumn(i);\n      h.m();\n      return;\n    }\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(i)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var j = _c.value;\n\n        if (isNaN_(j) || isInfinity(j) || j <= 0) {\n          continue;\n        }\n\n        c = c + j;\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    for (var k = 0; k < i.count; k++) {\n      var l = i.item(k);\n\n      if (isNaN_(l) || isInfinity(l) || l <= 0) {\n        continue;\n      }\n\n      var m = this.c == 1 ? l / c : l;\n      var n = this.c == 1 ? this.j / 100 : this.j;\n\n      if (m <= n) {\n        d = d + l;\n        f.add(k);\n        g.add1(h.item(k));\n      } else {\n        e.add(k);\n      }\n    }\n\n    var o = e.count;\n    var p = f.count > 0;\n    var q = PieChartBase.cs(a);\n    var r = PieChartBase.cs(a);\n\n    if (p) {\n      o++;\n    }\n\n    var _loop_2 = function (s) {\n      var t = false;\n      var u = void 0;\n\n      if (s == o - 1 && p) {\n        u = d;\n        t = true;\n      } else {\n        u = i.item(e._inner[s]);\n      }\n\n      var v = 1;\n\n      if (v == 1) {\n        r += PieChartBase.cs(Math.abs(u) * b / c);\n      } else {\n        r -= PieChartBase.cs(Math.abs(u) * b / c);\n      }\n\n      this_2.g.add(function () {\n        var $ret = new SliceItem();\n        $ret.e = q;\n        $ret.d = r - q;\n        $ret.g = t ? g : h.item(e._inner[s]);\n        return $ret;\n      }());\n      q = r;\n    };\n\n    var this_2 = this;\n\n    for (var s = 0; s < o; s++) {\n      _loop_2(s);\n    }\n\n    h.deregisterColumn(i);\n    h.m();\n  };\n\n  ArcItem.prototype.f = function (a, b) {\n    var c = null;\n    return a.registerColumn(b, c, false);\n  };\n\n  ArcItem.prototype.p = function (a) {\n    var b = this.e == null ? a : this.e.e;\n    var c = this.e == null ? 360 : this.e.d;\n    this.o(b, c);\n  };\n\n  ArcItem.prototype.q = function (a) {\n    var _this = this;\n\n    this.g.clear();\n\n    var _loop_3 = function (b) {\n      var c = a.bg.item(b);\n      this_3.g.add(function () {\n        var $ret = new SliceItem();\n        $ret.e = c.a3;\n        $ret.d = c.ax - c.a3;\n        $ret.f = b;\n        $ret.a = _this;\n        $ret.g = c.dataContext;\n        $ret.c = c.isOthersSlice;\n        $ret.b = c;\n        return $ret;\n      }());\n    };\n\n    var this_3 = this;\n\n    for (var b = 0; b < a.bg.count; b++) {\n      _loop_3(b);\n    }\n  };\n\n  ArcItem.$t = markType(ArcItem, 'ArcItem');\n  return ArcItem;\n}(Base);\n\nexport { ArcItem };\n/**\n * @hidden\n */\n\nvar RingSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingSeriesBase, _super);\n\n  function RingSeriesBase() {\n    var _this = _super.call(this) || this;\n\n    _this.ao = null;\n    _this.at = null;\n    _this.propertyChanged = null;\n    _this.propertyUpdated = null;\n    _this.a7 = null;\n    _this.aw = false;\n    _this.av = false;\n    _this.a5 = null;\n    _this.dq = null;\n    _this.as = null;\n    _this.cq = null;\n    _this.dq = {\n      $type: Point_$type,\n      x: 0,\n      y: 0\n    };\n\n    _this.ao = function (a, b) {\n      return _this.cl(a, b.propertyName, b.oldValue, b.newValue);\n    };\n\n    _this.propertyUpdated = delegateCombine(_this.propertyUpdated, _this.ao);\n    _this.as = _this.ar();\n\n    _this.ci(_this.as);\n\n    _this.as.k();\n\n    _this.a5 = function (a, b) {\n      return _this.cc(b.action, b.position, b.count, b.propertyName);\n    };\n\n    return _this;\n  }\n\n  RingSeriesBase.prototype.cn = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    if (this.propertyUpdated != null) {\n      this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n    }\n  };\n\n  Object.defineProperty(RingSeriesBase.prototype, \"du\", {\n    get: function () {\n      if (this.dt != null) {\n        return this.dt;\n      }\n\n      if (this.at != null && this.at.cg != null) {\n        return this.at.cg;\n      }\n\n      return null;\n    },\n    set: function (a) {\n      var b = this.du;\n\n      if (this.dt != null && a != this.dt) {\n        a = this.dt;\n      }\n\n      this.cn(\"SelectedStyleResolved\", b, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"b5\", {\n    get: function () {\n      return this.a7;\n    },\n    set: function (a) {\n      var b = this.a7;\n      this.a7 = a;\n      this.cn(\"TextStyle\", b, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"cr\", {\n    get: function () {\n      return typeCast(DataTemplate.$, this.c(RingSeriesBase.c3));\n    },\n    set: function (a) {\n      this.h(RingSeriesBase.c3, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"ax\", {\n    get: function () {\n      return this.c(RingSeriesBase.cw);\n    },\n    set: function (a) {\n      this.aw = true;\n      this.h(RingSeriesBase.cw, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"ay\", {\n    get: function () {\n      if (!this.aw) {\n        return this.at.ax;\n      } else {\n        return this.ax;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RingSeriesBase.prototype.cl = function (a, b, c, d) {\n    if (b == RingSeriesBase.$$p[4]) {\n      this.au = function () {\n        var $ret = new FastItemsSource();\n        $ret.e = d;\n        return $ret;\n      }();\n    }\n\n    if (b == RingSeriesBase.$$p[1]) {\n      if (typeCast(FastItemsSource.$, c) != null) {\n        var e = typeCast(FastItemsSource.$, c);\n        e.event = delegateRemove(e.event, this.a5);\n        this.av = false;\n      }\n\n      if (typeCast(FastItemsSource.$, d) != null) {\n        var f = typeCast(FastItemsSource.$, d);\n        f.event = delegateCombine(f.event, this.a5);\n        this.av = true;\n      }\n\n      this.ck();\n    }\n\n    switch (b) {\n      case RingSeriesBase.$$p[24]:\n        this.du = d;\n        break;\n\n      case RingSeriesBase.$$p[28]:\n        this.ck();\n        break;\n    }\n  };\n\n  Object.defineProperty(RingSeriesBase.prototype, \"container\", {\n    get: function () {\n      return this.at;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"isStacked\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"isVertical\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"isUsableInLegend\", {\n    get: function () {\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"hasMarkers\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingSeriesBase.prototype, \"hasSubItems\", {\n    get: function () {\n      return false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RingSeriesBase.prototype.cc = function (a, b, c, d) {\n    this.ck();\n  };\n\n  RingSeriesBase.prototype.ar = function () {\n    return new RingSeriesBaseView(this);\n  };\n\n  RingSeriesBase.prototype.ci = function (a) {};\n\n  RingSeriesBase.prototype.cm = function (a) {\n    this.as.n(a);\n  };\n\n  RingSeriesBase.prototype.cb = function () {\n    if (this.as != null) {\n      this.as.i();\n    }\n  };\n\n  RingSeriesBase.prototype.cf = function (a, b) {\n    this.cd(new NotifyCollectionChangedEventArgs(1, 0, b, a));\n  };\n\n  RingSeriesBase.prototype.ch = function (a, b, c) {\n    this.cd(new NotifyCollectionChangedEventArgs(2, 2, c, b, a));\n  };\n\n  RingSeriesBase.prototype.ce = function () {\n    this.cd(new NotifyCollectionChangedEventArgs(0, 4));\n  };\n\n  RingSeriesBase.prototype.cg = function (a, b) {\n    this.cd(new NotifyCollectionChangedEventArgs(1, 1, b, a));\n  };\n\n  RingSeriesBase.prototype.cd = function (a) {\n    if (this.au != null) {\n      this.au.handleCollectionChanged(a);\n    }\n  };\n\n  RingSeriesBase.prototype.resolveLegendIndex = function () {\n    return -1;\n  };\n\n  RingSeriesBase.prototype.forSubItems = function (a) {};\n\n  RingSeriesBase.$t = markType(RingSeriesBase, 'RingSeriesBase', Control.$, [INotifyPropertyChanged_$type, ILegendSeries_$type, ILegendTemplateProvider_$type]);\n  RingSeriesBase.c3 = DependencyProperty.i(\"LabelTemplate\", DataTemplate.$, RingSeriesBase.$, new PropertyMetadata(2, null, function (a, b) {\n    return typeCast(RingSeriesBase.$, a).cn(\"LabelTemplate\", b.oldValue, b.newValue);\n  }));\n  RingSeriesBase.cw = DependencyProperty.i(\"IsSurfaceInteractionDisabled\", Boolean_$type, RingSeriesBase.$, new PropertyMetadata(2, false, function (a, b) {\n    return a.cn(\"IsSurfaceInteractionDisabled\", b.oldValue, b.newValue);\n  }));\n  RingSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, RingSeriesBase, 'cn', ['Brushes:ag:cs', [BrushCollection.$, null], 'FastItemsSource:au:ct', [FastItemsSource.$], 'FormatLabel:am:cu', [Delegate_$type], 'FormatLegendLabel:an:cv', [Delegate_$type], 'ItemsSource::cx', [IEnumerable_$type, null], 'LabelExtent:a0:cy', [1, 10], 'LabelInnerColor:dn:cz', [Brush.$, null], 'LabelMemberPath:bg:c0', [2], 'LabelOuterColor:dp:c1', [Brush.$, null], 'LabelsPosition:aj:c2', [LabelsPosition_$type, enumGetBox(LabelsPosition_$type, 1)], 'LeaderLineMargin:a1:c4', [1, 6], 'LeaderLineStyle:dr:c5', [Style.$, null], 'LeaderLineType:ak:c6', [LeaderLineType_$type, enumGetBox(LeaderLineType_$type, 0)], 'LeaderLineVisibility:dw:c7', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'LegendItemBadgeTemplate::c8', [DataTemplate.$, null], 'LegendItemTemplate::c9', [DataTemplate.$, null], 'LegendLabelMemberPath:br:da', [2], 'Legend::db', [IChartLegend_$type, null], 'OthersCategoryStyle:ds:dc', [Style.$, null], 'OthersCategoryText:bv:dd', [2, \"Others\"], 'OthersCategoryThreshold:a2:de', [1, 3], 'OthersCategoryType:al:df', [OthersCategoryType_$type, enumGetBox(OthersCategoryType_$type, 1)], 'Outlines:ah:dg', [BrushCollection.$, null], 'RadiusFactor:a3:dh', [1, 0.9], 'SelectedStyle:dt:di', [Style.$, null], 'StartAngle:a4:dj', [1, 0], 'ToolTip::dk', [4, null], 'ToolTipStyle:dv:dl', [Style.$, null], 'ValueMemberPath:b9:dm', [2, null]]);\n  return RingSeriesBase;\n}(Control);\n\nexport { RingSeriesBase };\n/**\n * @hidden\n */\n\nvar Ring =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(Ring, _super);\n\n  function Ring() {\n    var _this = _super.call(this) || this;\n\n    _this.j = 0;\n    _this.h = 0;\n    _this.q = new Size();\n    _this.p = null;\n    _this._ringControl = null;\n    _this.b = null;\n    _this.i = 0;\n    _this.g = null;\n    _this.d = null;\n    _this.e = false;\n    _this.p = {\n      $type: Point_$type,\n      x: 0,\n      y: 0\n    };\n    _this.q = new Size(1, 0, 0);\n\n    _this.ringControl = function () {\n      var $ret = new RingControl();\n      $ret.ai = _this;\n      return $ret;\n    }();\n\n    _this.g = new List$1(ArcItem.$, 0);\n    _this.e = true;\n    return _this;\n  }\n\n  Object.defineProperty(Ring.prototype, \"ringControl\", {\n    get: function () {\n      return this._ringControl;\n    },\n    set: function (a) {\n      this._ringControl = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Ring.prototype, \"c\", {\n    get: function () {\n      return this.b;\n    },\n    set: function (a) {\n      this.b = a;\n      this.b.as.h(this.ringControl);\n\n      if (this.ringControl != null) {\n        this.ringControl.ak.s(a);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Ring.prototype.f = function () {\n    if (this.ringControl != null && this.ringControl.ak.d()) {\n      var a = void 0,\n          b = void 0;\n      a = this.p.x - this.c.dq.x;\n      b = this.p.y - this.c.dq.y;\n      this.ringControl.ak.v(a, b);\n      return this.ringControl.an();\n    }\n\n    return false;\n  };\n\n  Ring.prototype.o = function () {\n    if (this.ringControl != null) {\n      this.ringControl.width = this.q.width;\n      this.ringControl.height = this.q.height;\n      this.c.as.h(this.ringControl);\n      this.ringControl.ao = this.g;\n    }\n  };\n\n  Ring.prototype.l = function (source_, a, b) {\n    this.ringControl.as(source_, a, b);\n  };\n\n  Ring.prototype.k = function (source_) {\n    this.ringControl.ar(source_);\n  };\n\n  Ring.prototype.m = function (source_, a, b) {\n    this.ringControl.at(source_, a, b);\n  };\n\n  Ring.prototype.n = function (source_, a, b, c) {\n    this.ringControl.au(source_, a, b, c);\n  };\n\n  Ring.$t = markType(Ring, 'Ring');\n  return Ring;\n}(Base);\n\nexport { Ring };\n/**\n * @hidden\n */\n\nvar RingCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingCollection, _super);\n\n  function RingCollection() {\n    return _super.call(this, Ring.$, 0) || this;\n  }\n\n  RingCollection.prototype.p = function () {\n    var e_4, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n\n        if (a.e) {\n          var b = 0;\n          var c = a.ringControl.arcs.count;\n\n          while (b < c) {\n            a.ringControl.arcs.destroy(a.ringControl.arcs.item(b));\n            b++;\n          }\n\n          a.ringControl.arcs.count = 0;\n          a.ringControl = null;\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    _super.prototype.p.call(this);\n  };\n\n  RingCollection.prototype.u = function (a) {\n    var b = this._inner[a];\n\n    if (b.e) {\n      b.ringControl.arcs.destroy(b.ringControl.arcs.item(a));\n      b.ringControl.arcs.count = 0;\n      b.ringControl = null;\n    }\n\n    _super.prototype.u.call(this, a);\n  };\n\n  RingCollection.$t = markType(RingCollection, 'RingCollection', ObservableCollection$1.$.specialize(Ring.$));\n  return RingCollection;\n}(ObservableCollection$1);\n\nexport { RingCollection };\n/**\n * @hidden\n */\n\nvar RingControl =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingControl, _super);\n\n  function RingControl() {\n    var _this = _super.call(this) || this;\n\n    _this.ak = null;\n    _this.ah = null;\n    _this.arcs = null;\n    _this.ao = null;\n    _this.a0 = null;\n    _this.propertyChanged = null;\n    _this.propertyUpdated = null;\n    _this.ab = RingControl.$;\n    _this.ak = _this.aj();\n\n    _this.ax(_this.ak);\n\n    _this.ak.r();\n\n    _this.arcs = function () {\n      var $ret = new Pool$1(Arc.$);\n      $ret.create = runOn(_this.ak, _this.ak.a);\n      $ret.activate = runOn(_this.ak, _this.ak.l);\n      $ret.disactivate = runOn(_this.ak, _this.ak.n);\n      $ret.destroy = runOn(_this.ak, _this.ak.m);\n      return $ret;\n    }();\n\n    return _this;\n  }\n\n  Object.defineProperty(RingControl.prototype, \"al\", {\n    get: function () {\n      return this.ai.c;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RingControl.prototype, \"ai\", {\n    get: function () {\n      return this.ah;\n    },\n    set: function (a) {\n      this.ah = a;\n\n      if (this.ah == null) {\n        this.ak.s(null);\n      } else {\n        this.ak.s(this.ah.c);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  RingControl.prototype.aj = function () {\n    return new RingControlView(this);\n  };\n\n  RingControl.prototype.ax = function (a) {};\n\n  RingControl.prototype.az = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    if (this.propertyUpdated != null) {\n      this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n    }\n  };\n\n  RingControl.prototype.aw = function () {\n    this.an();\n  };\n\n  RingControl.prototype.an = function () {\n    var e_5, _a;\n\n    if (this.ao == null) {\n      return false;\n    }\n\n    if (!this.ak.d()) {\n      return false;\n    }\n\n    var a = 0;\n    var b = false;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.ao)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        var d = this.arcs.item(a);\n        d.hb = c;\n\n        if (d.cl != this.ai.h) {\n          d.cl = this.ai.h;\n        }\n\n        if ((d.width != this.ai.q.width || d.height != this.ai.q.height) && d.as.r()) {\n          d.width = this.ai.q.width;\n          d.height = this.ai.q.height;\n          this.ak.ab(d);\n          b = true;\n        }\n\n        if (d.ct != c.k) {\n          d.ct = c.k;\n        }\n\n        if (d.hi != c.i) {\n          d.hi = c.i;\n        }\n\n        if (d.itemsSource != c.h) {\n          d.itemsSource = c.h;\n        }\n\n        if (d.ag != c.a) {\n          d.ag = c.a;\n        }\n\n        this.ak.t(d, 0, 0);\n        a++;\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    this.arcs.count = a;\n    return b;\n  };\n\n  RingControl.prototype.ay = function (a) {\n    this.ak.w(a);\n  };\n\n  RingControl.prototype.av = function () {\n    this.ak.q();\n  };\n\n  RingControl.prototype.ap = function () {\n    return this.ak.j();\n  };\n\n  RingControl.prototype.as = function (source_, a, b) {\n    for (var c = 0; c < this.arcs.count; c++) {\n      this.arcs.item(c).es(source_, a, b);\n    }\n  };\n\n  RingControl.prototype.ar = function (source_) {\n    for (var a = 0; a < this.arcs.count; a++) {\n      this.arcs.item(a).eq(source_);\n    }\n  };\n\n  RingControl.prototype.at = function (source_, a, b) {\n    for (var c = 0; c < this.arcs.count; c++) {\n      this.arcs.item(c).et(source_, a, b);\n    }\n  };\n\n  RingControl.prototype.au = function (source_, a, b, c) {\n    for (var d = 0; d < this.arcs.count; d++) {\n      this.arcs.item(d).eu(source_, a, b, c);\n    }\n  };\n\n  RingControl.$t = markType(RingControl, 'RingControl', Control.$, [INotifyPropertyChanged_$type]);\n  return RingControl;\n}(Control);\n\nexport { RingControl };\n/**\n * @hidden\n */\n\nvar RingSeriesCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingSeriesCollection, _super);\n\n  function RingSeriesCollection() {\n    return _super.call(this, RingSeriesBase.$, 0) || this;\n  }\n\n  RingSeriesCollection.$t = markType(RingSeriesCollection, 'RingSeriesCollection', ObservableCollection$1.$.specialize(RingSeriesBase.$));\n  return RingSeriesCollection;\n}(ObservableCollection$1);\n\nexport { RingSeriesCollection };\n/**\n * @hidden\n */\n\nvar SliceItem =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SliceItem, _super);\n\n  function SliceItem() {\n    var _this = _super.call(this) || this;\n\n    _this.e = 0;\n    _this.d = 0;\n    _this.a = null;\n    _this.f = 0;\n    _this.b = null;\n    _this.g = null;\n    _this.c = false;\n    return _this;\n  }\n\n  SliceItem.$t = markType(SliceItem, 'SliceItem');\n  return SliceItem;\n}(Base);\n\nexport { SliceItem };\n/**\n * @hidden\n */\n\nvar SliceCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(SliceCollection, _super);\n\n  function SliceCollection() {\n    var _this = _super.call(this, SliceItem.$, 0) || this;\n\n    _this.ae = false;\n    _this.ag = false;\n    return _this;\n  }\n\n  SliceCollection.prototype.r = function (a, b) {\n    if (this.contains(b)) {\n      return;\n    }\n\n    var c = this.ah(b.b);\n\n    if (c != -1) {\n      _super.prototype.x.call(this, c, b);\n    } else {\n      _super.prototype.r.call(this, a, b);\n\n      if (this.ae) {\n        if (this.ag) {\n          b.b.isSelected = true;\n        } else {\n          b.b.isExploded = true;\n        }\n      }\n    }\n  };\n\n  SliceCollection.prototype.x = function (a, b) {\n    if (this.ae) {\n      if (this.ag) {\n        this._inner[a].b.isSelected = false;\n      } else {\n        this._inner[a].b.isExploded = false;\n      }\n    }\n\n    _super.prototype.x.call(this, a, b);\n  };\n\n  SliceCollection.prototype.u = function (a) {\n    var b = this._inner[a];\n\n    _super.prototype.u.call(this, a);\n\n    if (this.ae) {\n      if (this.ag) {\n        b.b.isSelected = false;\n      } else {\n        b.b.isExploded = false;\n      }\n    }\n  };\n\n  SliceCollection.prototype.remove = function (a) {\n    var b = this.ah(a.b);\n\n    if (b != -1) {\n      this.u(b);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  SliceCollection.prototype.p = function () {\n    while (this.count > 0) {\n      this.u(0);\n    }\n  };\n\n  SliceCollection.prototype.ah = function (a) {\n    for (var b = 0; b < this.count; b++) {\n      if (this._inner[b].b == a) {\n        return b;\n      }\n    }\n\n    return -1;\n  };\n\n  SliceCollection.$t = markType(SliceCollection, 'SliceCollection', ObservableCollection$1.$.specialize(SliceItem.$));\n  return SliceCollection;\n}(ObservableCollection$1);\n\nexport { SliceCollection };\n/**\n * @hidden\n */\n\nvar XamDoughnutChart =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XamDoughnutChart, _super);\n\n  function XamDoughnutChart() {\n    var _this = _super.call(this) || this;\n\n    _this.al = new RingSeriesCollection();\n    _this.aj = new RingCollection();\n\n    _this.ap = function () {\n      var $ret = new SliceCollection();\n      $ret.ae = true;\n      $ret.ag = true;\n      return $ret;\n    }();\n\n    _this.ao = function () {\n      var $ret = new SliceCollection();\n      $ret.ae = true;\n      $ret.ag = false;\n      return $ret;\n    }();\n\n    _this.ah = null;\n    _this.a0 = NaN;\n    _this.az = 1;\n    _this.au = null;\n    _this.sliceClick = null;\n    _this.propertyChanged = null;\n    _this.propertyUpdated = null;\n    _this.holeDimensionsChanged = null;\n\n    var a = _this.at();\n\n    _this.bv(a);\n\n    a.s();\n    _this.ab = XamDoughnutChart.$;\n\n    _this.ah = function (b, c) {\n      return _this.bz(b, c.propertyName, c.oldValue, c.newValue);\n    };\n\n    _this.propertyUpdated = delegateCombine(_this.propertyUpdated, _this.ah);\n    var b = _this.series;\n    b.collectionChanged = delegateCombine(b.collectionChanged, runOn(_this, _this.b6));\n    return _this;\n  }\n\n  Object.defineProperty(XamDoughnutChart.prototype, \"ak\", {\n    get: function () {\n      return this.aj;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamDoughnutChart.prototype, \"series\", {\n    get: function () {\n      return this.al;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamDoughnutChart.prototype.b6 = function (a, b) {\n    var e_6, _a;\n\n    var c = new List$1(RingSeriesBase.$, 0);\n\n    if (b.oldItems != null) {\n      try {\n        for (var _b = tslib_1.__values(fromEn(b.oldItems)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var d = _c.value;\n\n          if (b.newItems == null || !b.newItems.contains(d)) {\n            d.cb();\n            this.au.w(d);\n          }\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    }\n\n    this.bx();\n    this.b2();\n  };\n\n  Object.defineProperty(XamDoughnutChart.prototype, \"a3\", {\n    get: function () {\n      return this.c(XamDoughnutChart.cc);\n    },\n    set: function (a) {\n      this.h(XamDoughnutChart.cc, a);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamDoughnutChart.prototype, \"ar\", {\n    get: function () {\n      return this.ap;\n    },\n    set: function (a) {\n      this.ap.clear();\n      this.ap.ae = false;\n      this.ap = a;\n      this.ap.ae = true;\n      this.ap.ag = true;\n\n      for (var b = 0; b < this.ap.count; b++) {\n        this.ap._inner[b].b.isSelected = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamDoughnutChart.prototype, \"aq\", {\n    get: function () {\n      return this.ao;\n    },\n    set: function (a) {\n      this.ao.clear();\n      this.ao.ae = false;\n      this.ao = a;\n      this.ao.ae = true;\n      this.ao.ag = false;\n\n      for (var b = 0; b < this.ao.count; b++) {\n        this.ao._inner[b].b.isExploded = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamDoughnutChart.prototype, \"a4\", {\n    get: function () {\n      return this.a0;\n    },\n    set: function (a) {\n      var b = this.a0;\n      this.a0 = a;\n      this.b1(\"PixelScalingRatio\", b, this.a0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XamDoughnutChart.prototype, \"a1\", {\n    get: function () {\n      return this.az;\n    },\n    set: function (a) {\n      var b = this.az;\n      this.az = a;\n      this.b1(\"ActualPixelScalingRatio\", b, this.az);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XamDoughnutChart.prototype.destroy = function () {\n    var e_7, _a;\n\n    this.au.v(null);\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.cb();\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.b5 = function (a, b) {\n    if (b) {\n      this.ar.add(a);\n    } else {\n      this.ar.remove(a);\n    }\n  };\n\n  XamDoughnutChart.prototype.bj = function (a, b) {\n    if (b) {\n      this.aq.add(a);\n    } else {\n      this.aq.remove(a);\n    }\n  };\n\n  XamDoughnutChart.prototype.bz = function (a, b, c, d) {\n    var e_8, _a, e_9, _b, e_10, _c, e_11, _d, e_12, _e;\n\n    switch (b) {\n      case XamDoughnutChart.$$p[5]:\n        try {\n          for (var _f = tslib_1.__values(fromEnum(this.series)), _g = _f.next(); !_g.done; _g = _f.next()) {\n            var e = _g.value;\n            e.du = d;\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n\n        break;\n\n      case XamDoughnutChart.$$p[0]:\n        for (var f = 0; f < this.aj.count; f++) {\n          try {\n            for (var _h = (e_9 = void 0, tslib_1.__values(fromEnum(this.aj._inner[f].ringControl.arcs.a))), _j = _h.next(); !_j.done; _j = _h.next()) {\n              var g = _j.value;\n              g.bp = this.av;\n            }\n          } catch (e_9_1) {\n            e_9 = {\n              error: e_9_1\n            };\n          } finally {\n            try {\n              if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n            } finally {\n              if (e_9) throw e_9.error;\n            }\n          }\n        }\n\n        break;\n\n      case XamDoughnutChart.$$p[1]:\n        for (var h = 0; h < this.aj.count; h++) {\n          try {\n            for (var _k = (e_10 = void 0, tslib_1.__values(fromEnum(this.aj._inner[h].ringControl.arcs.a))), _l = _k.next(); !_l.done; _l = _k.next()) {\n              var i = _l.value;\n              i.bq = this.aw;\n            }\n          } catch (e_10_1) {\n            e_10 = {\n              error: e_10_1\n            };\n          } finally {\n            try {\n              if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n            } finally {\n              if (e_10) throw e_10.error;\n            }\n          }\n        }\n\n        break;\n\n      case \"PixelScalingRatio\":\n        var j = DeviceUtils.a(this.a4);\n\n        if (isNaN_(j)) {\n          this.a1 = 1;\n        } else {\n          this.a1 = j;\n        }\n\n        break;\n\n      case \"ActualPixelScalingRatio\":\n        try {\n          for (var _m = tslib_1.__values(fromEnum(this.aj)), _o = _m.next(); !_o.done; _o = _m.next()) {\n            var k = _o.value;\n\n            try {\n              for (var _p = (e_12 = void 0, tslib_1.__values(fromEnum(k.ringControl.arcs.a))), _q = _p.next(); !_q.done; _q = _p.next()) {\n                var l = _q.value;\n                l.cd = this.a1;\n              }\n            } catch (e_12_1) {\n              e_12 = {\n                error: e_12_1\n              };\n            } finally {\n              try {\n                if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n              } finally {\n                if (e_12) throw e_12.error;\n              }\n            }\n          }\n        } catch (e_11_1) {\n          e_11 = {\n            error: e_11_1\n          };\n        } finally {\n          try {\n            if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n          } finally {\n            if (e_11) throw e_11.error;\n          }\n        }\n\n        break;\n    }\n  };\n\n  XamDoughnutChart.prototype.at = function () {\n    return new XamDoughnutChartView(this);\n  };\n\n  XamDoughnutChart.prototype.bv = function (a) {\n    this.au = a;\n  };\n\n  XamDoughnutChart.prototype.b2 = function () {\n    this.by();\n    this.b4();\n    this.b3();\n    this.bw();\n    this.au.z();\n  };\n\n  XamDoughnutChart.prototype.b4 = function () {\n    var e_13, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.cp();\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bw = function () {\n    var a = this.au.ab;\n\n    if (a.isEmpty || a.width == 0 || a.height == 0) {\n      return;\n    }\n\n    var b = {\n      $type: Point_$type,\n      x: a.width / 2,\n      y: a.height / 2\n    };\n    var c = Math.min(a.width / 2, a.height / 2);\n    var d = 0.9;\n\n    if (this.series.count > 0) {\n      d = this.series._inner[0].a3;\n\n      if (isNaN_(d) || isInfinity(d) || d < 0) {\n        d = 0;\n      } else if (d > 1) {\n        d = 1;\n      }\n    }\n\n    var e = this.a3 * c / 100 * d;\n    this.au.x(e * 2, e * 2);\n    this.au.u(b.x - e, b.y - e);\n  };\n\n  XamDoughnutChart.prototype.b3 = function () {\n    var e_14, _a, e_15, _b;\n\n    var a = false;\n\n    try {\n      for (var _c = tslib_1.__values(fromEnum(this.aj)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var b = _d.value;\n\n        if (b.f()) {\n          a = true;\n        }\n      }\n    } catch (e_14_1) {\n      e_14 = {\n        error: e_14_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_14) throw e_14.error;\n      }\n    }\n\n    if (a) {\n      try {\n        for (var _e = tslib_1.__values(fromEnum(this.aj)), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var c = _f.value;\n          c.c.as.l();\n        }\n      } catch (e_15_1) {\n        e_15 = {\n          error: e_15_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_15) throw e_15.error;\n        }\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.by = function () {\n    var e_16, _a;\n\n    var a = this.au.ab;\n\n    if (a.isEmpty || a.width == 0 || a.height == 0) {\n      return;\n    }\n\n    var b = {\n      $type: Point_$type,\n      x: a.width / 2,\n      y: a.height / 2\n    };\n    var c = Math.min(a.width / 2, a.height / 2);\n    var d = Math.max(a.width / 2, a.height / 2);\n\n    if (a.width > a.height) {\n      c = c + d;\n      d = c - d;\n      c = c - d;\n    }\n\n    var e = (100 - this.a3) / 100 * c / this.aj.count;\n    var f = (100 - this.a3) / 100 * d / this.aj.count;\n    var g = this.a3 * c / 100;\n    var h = this.a3 * d / 100;\n    var i = 1;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.aj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var j = _c.value;\n        var k = g + e * i;\n        var l = h + f * i;\n        j.i = e;\n        j.q = new Size(1, k * 2, l * 2);\n        j.p = {\n          $type: Point_$type,\n          x: b.x - k,\n          y: b.y - l\n        };\n        j.h = 100 - e / k * 100;\n        j.o();\n        i++;\n      }\n    } catch (e_16_1) {\n      e_16 = {\n        error: e_16_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_16) throw e_16.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bx = function () {\n    var e_17, _a;\n\n    this.aq.clear();\n    this.ar.clear();\n    this.aj.clear();\n    this.au.j();\n    this.au.i();\n    var a = 0;\n\n    for (var b = 0; b < this.series.count; b++) {\n      var c = this.series._inner[b];\n      c.at = this;\n      this.au.h(c);\n      var series_ = c;\n      series_.externalObject.sychronizeCollections();\n      var d = c.aq();\n\n      try {\n        for (var _b = (e_17 = void 0, tslib_1.__values(fromEnum(d))), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var e = _c.value;\n          e.d = this;\n          e.j = a;\n          this.aj.add(e);\n          a++;\n        }\n      } catch (e_17_1) {\n        e_17 = {\n          error: e_17_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_17) throw e_17.error;\n        }\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bt = function () {\n    if (this.au != null) {\n      this.height = this.au.ab.height;\n      this.width = this.au.ab.width;\n    }\n\n    this.b2();\n  };\n\n  XamDoughnutChart.prototype.bu = function (a, b) {\n    var c = a;\n    var d = c.he.c;\n\n    if (d.ay) {\n      return;\n    }\n\n    if (this.sliceClick != null) {\n      this.sliceClick(a, b);\n    }\n  };\n\n  XamDoughnutChart.prototype.b1 = function (a, b, c) {\n    if (this.propertyChanged != null) {\n      this.propertyChanged(this, new PropertyChangedEventArgs(a));\n    }\n\n    if (this.propertyUpdated != null) {\n      this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n    }\n  };\n\n  XamDoughnutChart.prototype.onDetachedFromUI = function () {\n    var e_18, _a, e_19, _b;\n\n    this.au.r();\n\n    for (var a = 0; a < this.aj.count; a++) {\n      try {\n        for (var _c = (e_18 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.a))), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var b = _d.value;\n          b.onDetachedFromUI();\n        }\n      } catch (e_18_1) {\n        e_18 = {\n          error: e_18_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_18) throw e_18.error;\n        }\n      }\n\n      try {\n        for (var _e = (e_19 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.b))), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var c = _f.value;\n          c.onDetachedFromUI();\n        }\n      } catch (e_19_1) {\n        e_19 = {\n          error: e_19_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_19) throw e_19.error;\n        }\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.onAttachedToUI = function () {\n    var e_20, _a, e_21, _b;\n\n    this.au.q();\n\n    for (var a = 0; a < this.aj.count; a++) {\n      try {\n        for (var _c = (e_20 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.a))), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var b = _d.value;\n          b.onAttachedToUI();\n        }\n      } catch (e_20_1) {\n        e_20 = {\n          error: e_20_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_20) throw e_20.error;\n        }\n      }\n\n      try {\n        for (var _e = (e_21 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.b))), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var c = _f.value;\n          c.onAttachedToUI();\n        }\n      } catch (e_21_1) {\n        e_21 = {\n          error: e_21_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_21) throw e_21.error;\n        }\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.provideContainer = function (a) {\n    this.au.v(a);\n  };\n\n  XamDoughnutChart.prototype.notifyResized = function () {\n    this.au.y();\n  };\n\n  XamDoughnutChart.prototype.bd = function () {\n    return this.au.g();\n  };\n\n  XamDoughnutChart.prototype.cf = function () {\n    return this.au.aa;\n  };\n\n  XamDoughnutChart.prototype.a2 = function () {\n    return this.au.d;\n  };\n\n  XamDoughnutChart.prototype.bk = function () {\n    var a;\n    var b;\n\n    for (var c = 0; c < this.series.count; c++) {\n      b = this.series._inner[c].aq();\n\n      for (var d = 0; d < b.count; d++) {\n        a = b._inner[d].ringControl.ak.h();\n\n        for (var e = 0; e < a.count; e++) {\n          a._inner[e].el();\n        }\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bs = function () {\n    if (this.holeDimensionsChanged != null) {\n      this.holeDimensionsChanged(this, new HoleDimensionsChangedEventArgs(this.cf(), this.a2()));\n    }\n  };\n\n  XamDoughnutChart.prototype.as = function () {\n    var a = new DoughnutChartVisualData();\n    a.series = new RingSeriesVisualDataList();\n    a.viewport = RectData.b(this.au.ab);\n    this.au.o(a);\n    return a;\n  };\n\n  XamDoughnutChart.prototype.bc = function () {\n    var a = this.as();\n    a.scaleByViewport();\n    return a.serialize();\n  };\n\n  XamDoughnutChart.prototype._ay = function (a) {\n    var _a, _b, b, e_22_1;\n\n    var e_22, _c;\n\n    return tslib_1.__generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _d.trys.push([0, 5, 6, 7]);\n\n          _a = tslib_1.__values(fromEnum(this.series)), _b = _a.next();\n          _d.label = 1;\n\n        case 1:\n          if (!!_b.done) return [3\n          /*break*/\n          , 4];\n          b = _b.value;\n          if (!PieChartBase.by(a, b.itemsSource)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , b];\n\n        case 2:\n          _d.sent();\n\n          _d.label = 3;\n\n        case 3:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          e_22_1 = _d.sent();\n          e_22 = {\n            error: e_22_1\n          };\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n          } finally {\n            if (e_22) throw e_22.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n\n  XamDoughnutChart.prototype.ay = function (a) {\n    var _this = this;\n\n    return toEnum(function () {\n      return _this._ay(a);\n    });\n  };\n\n  XamDoughnutChart.prototype.bm = function (source_, a, b) {\n    var e_23, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        c.cf(a, b);\n      }\n    } catch (e_23_1) {\n      e_23 = {\n        error: e_23_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_23) throw e_23.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bp = function (source_, a, b, c) {\n    var e_24, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var d = _c.value;\n        d.ch(a, b, c);\n      }\n    } catch (e_24_1) {\n      e_24 = {\n        error: e_24_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_24) throw e_24.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bl = function (source_) {\n    var e_25, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.ce();\n      }\n    } catch (e_25_1) {\n      e_25 = {\n        error: e_25_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_25) throw e_25.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.prototype.bn = function (source_, a, b) {\n    var e_26, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        c.cg(a, b);\n      }\n    } catch (e_26_1) {\n      e_26 = {\n        error: e_26_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_26) throw e_26.error;\n      }\n    }\n  };\n\n  XamDoughnutChart.$t = markType(XamDoughnutChart, 'XamDoughnutChart', Control.$, [INotifyPropertyChanged_$type, ILegendOwner_$type]);\n  XamDoughnutChart.cc = DependencyProperty.i(\"InnerExtent\", Number_$type, XamDoughnutChart.$, new PropertyMetadata(2, 40, function (a, b) {\n    var c = b.newValue;\n\n    if (c < 0 || c > 100) {\n      if (b.oldValue != null) {\n        a.a3 = b.oldValue;\n      }\n\n      return;\n    }\n\n    a.b2();\n    a.b1(\"InnerExtent\", b.oldValue, b.newValue);\n  }));\n  XamDoughnutChart.$$p = markDep(DependencyProperty, PropertyMetadata, XamDoughnutChart, 'b1', ['AllowSliceExplosion:av:b8', [0, true], 'AllowSliceSelection:aw:b9', [0, true], 'CenterData:a5:ca', [4, null], 'CenterDataTemplate:b7:cb', [DataTemplate.$, null], 'IsSurfaceInteractionDisabled:ax:cd', [0, false], 'SelectedStyle:cg:ce', [Style.$, null]]);\n  return XamDoughnutChart;\n}(Control);\n\nexport { XamDoughnutChart };\n/**\n * @hidden\n */\n\nvar ArcView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ArcView, _super);\n\n  function ArcView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.b4 = null;\n    _this.b4 = a;\n    return _this;\n  }\n\n  ArcView.prototype.b6 = function (a, b) {\n    this.e.series = this.b4.he.c;\n  };\n\n  ArcView.prototype.b5 = function () {\n    return this.f;\n  };\n\n  ArcView.prototype.b7 = function () {\n    this.bb();\n    this.bs = new Brush();\n    var a = this.c.t();\n    this.bs._fill = a.rootWrapper.getStyleProperty(\"color\");\n  };\n\n  ArcView.$t = markType(ArcView, 'ArcView', PieChartBaseView.$);\n  return ArcView;\n}(PieChartBaseView);\n\nexport { ArcView };\n/**\n * @hidden\n */\n\nvar RingControlView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingControlView, _super);\n\n  function RingControlView(a) {\n    var _this = _super.call(this) || this;\n\n    _this.b = null;\n    _this.f = new List$1(Arc.$, 0);\n    _this.g = new List$1(Arc.$, 0);\n    _this.i = null;\n    _this.e = new Dictionary$2(Arc.$, DomRenderer_$type, 0);\n    _this.c = null;\n    _this.b = a;\n    return _this;\n  }\n\n  RingControlView.prototype.a = function () {\n    var a = new Arc();\n    a.o = 0;\n    a.n = 0;\n    a.he = this.b.ai;\n    this.f.add(a);\n    this.z(a);\n\n    if (a.eb != this.b.al.b5) {\n      a.eb = this.b.al.b5;\n    }\n\n    a.cm = this.b.al.a0;\n    a.at = this.b.al.am;\n    a.di = this.b.al.bg;\n    a.ao = this.b.al.aj;\n    a.fu = this.b.al.cr;\n    a.eg = this.b.al.b9;\n\n    if (this.b.al.toolTip != null) {\n      a.c0 = this.b.al.toolTip;\n    }\n\n    a.ha = this.b.al.dw;\n    a.g6 = this.b.al.dr;\n    a.ap = this.b.al.ak;\n    a.cn = this.b.al.a1;\n    a.co = this.b.al.a2;\n    a.aq = this.b.al.al;\n    a.dz = this.b.al.bv;\n    a.g7 = this.b.al.ds;\n    a.legend = this.b.al.legend;\n    a.legendItemTemplate = this.b.al.legendItemTemplate;\n    a.legendItemBadgeTemplate = this.b.al.legendItemBadgeTemplate;\n    a.ah = this.b.al.ah;\n    a.gx = this.b.al.dn;\n    a.gy = this.b.al.dp;\n    a.ct = this.b.al.a4;\n    a.ag = this.b.al.ag;\n    a.g8 = this.b.al.du;\n    a.bv = true;\n    a.cr = this.b.al.a3;\n    a.bp = this.b.al.at.av;\n    a.bq = this.b.al.at.aw;\n    a.au = this.b.al.an;\n    a.dv = this.b.al.br;\n    a.cd = this.b.al.at.a1;\n    return a;\n  };\n\n  RingControlView.prototype.l = function (a) {\n    var b = this.e.item(a).rootWrapper;\n\n    if (b != null) {\n      b.show();\n    }\n\n    this.g.add(a);\n  };\n\n  RingControlView.prototype.n = function (a) {\n    var b = this.e.item(a).rootWrapper;\n\n    if (b != null) {\n      b.hide();\n    }\n\n    this.g.remove(a);\n  };\n\n  RingControlView.prototype.m = function (a) {\n    this.o(a);\n    this.f.remove(a);\n  };\n\n  RingControlView.prototype.h = function () {\n    return this.f;\n  };\n\n  RingControlView.prototype.r = function () {};\n\n  RingControlView.prototype.aa = function () {\n    this.b.aw();\n  };\n\n  RingControlView.prototype.t = function (a, b, c) {\n    b = b + this.b.n;\n    c = c + this.b.o;\n\n    if (this.c != null) {\n      b = b + this.c.n;\n      c = c + this.c.o;\n    }\n\n    if (a.n != b || a.o != c) {\n      a.n = b;\n      a.o = c;\n      this.u(a, this.e.item(a).rootWrapper);\n    }\n  };\n\n  RingControlView.prototype.w = function (a) {\n    var e_27, _a, e_28, _b;\n\n    if (a == null) {\n      this.b.arcs.count = 0;\n\n      try {\n        for (var _c = tslib_1.__values(fromEnum(this.f)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var b = _d.value;\n          b.destroy();\n        }\n      } catch (e_27_1) {\n        e_27 = {\n          error: e_27_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_27) throw e_27.error;\n        }\n      }\n\n      this.f.clear();\n      this.e.clear();\n      this.g.clear();\n      return;\n    }\n\n    this.i = a;\n    this.i.rootWrapper.setStyleProperty(\"position\", \"relative\");\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(this.f)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var c = _f.value;\n        var d = this.e.item(c);\n        this.i.append(d.rootWrapper);\n        c.hc.b7();\n      }\n    } catch (e_28_1) {\n      e_28 = {\n        error: e_28_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_28) throw e_28.error;\n      }\n    }\n\n    this.aa();\n  };\n\n  RingControlView.prototype.z = function (a) {\n    var b = this.i.createElement(\"div\");\n    b.setStyleProperty(\"position\", \"absolute\");\n    this.e.addItem(a, this.i.getSubRenderer(b));\n    this.k(a, b);\n    this.u(a, b);\n\n    if (this.i != null) {\n      this.i.append(b);\n    }\n\n    a.provideContainer(this.e.item(a));\n    b.setStyleProperty(\"position\", \"absolute\");\n  };\n\n  RingControlView.prototype.k = function (a, b) {\n    b.setStyleProperty(\"width\", a.width.toString() + \"px\");\n    b.setStyleProperty(\"height\", a.height.toString() + \"px\");\n  };\n\n  RingControlView.prototype.u = function (a, b) {\n    b.setStyleProperty(\"top\", a.o.toString() + \"px\");\n    b.setStyleProperty(\"left\", a.n.toString() + \"px\");\n  };\n\n  RingControlView.prototype.o = function (a) {\n    var b = this.e.item(a);\n    b.rootWrapper.remove();\n    this.e.removeItem(a);\n    a.provideContainer(null);\n  };\n\n  RingControlView.prototype.ab = function (a) {\n    this.k(a, a.hj().rootWrapper);\n    a.ew(a.width, a.height);\n  };\n\n  RingControlView.prototype.d = function () {\n    return this.i != null;\n  };\n\n  RingControlView.prototype.q = function () {};\n\n  RingControlView.prototype.s = function (a) {\n    this.c = a;\n\n    if (a != null) {\n      a.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.y));\n    }\n  };\n\n  RingControlView.prototype.y = function (a, b) {\n    switch (b.propertyName) {\n      case \"LabelExtent\":\n        for (var c = 0; c < this.f.count; c++) {\n          this.f._inner[c].cm = b.newValue;\n        }\n\n        break;\n\n      case \"LabelMemberPath\":\n        for (var d = 0; d < this.f.count; d++) {\n          this.f._inner[d].di = b.newValue;\n        }\n\n        break;\n\n      case \"LabelsPosition\":\n        for (var e = 0; e < this.f.count; e++) {\n          this.f._inner[e].ao = EnumUtil.getEnumValue(LabelsPosition_$type, b.newValue);\n        }\n\n        break;\n\n      case \"LabelTemplate\":\n        for (var f = 0; f < this.f.count; f++) {\n          this.f._inner[f].fu = b.newValue;\n        }\n\n        break;\n\n      case \"ValueMemberPath\":\n        for (var g = 0; g < this.f.count; g++) {\n          this.f._inner[g].eg = b.newValue;\n        }\n\n        break;\n\n      case \"ToolTip\":\n        for (var h = 0; h < this.f.count; h++) {\n          this.f._inner[h].c0 = b.newValue;\n        }\n\n        break;\n\n      case \"LeaderLineVisibility\":\n        for (var i = 0; i < this.f.count; i++) {\n          this.f._inner[i].ha = EnumUtil.getEnumValue(Visibility_$type, b.newValue);\n        }\n\n        break;\n\n      case \"LeaderLineStyle\":\n        for (var j = 0; j < this.f.count; j++) {\n          this.f._inner[j].g6 = b.newValue;\n        }\n\n        break;\n\n      case \"LeaderLineType\":\n        for (var k = 0; k < this.f.count; k++) {\n          this.f._inner[k].ap = EnumUtil.getEnumValue(LeaderLineType_$type, b.newValue);\n        }\n\n        break;\n\n      case \"LeaderLineMargin\":\n        for (var l = 0; l < this.f.count; l++) {\n          this.f._inner[l].cn = b.newValue;\n        }\n\n        break;\n\n      case \"OthersCategoryThreshold\":\n        for (var m = 0; m < this.f.count; m++) {\n          this.f._inner[m].co = b.newValue;\n        }\n\n        break;\n\n      case \"OthersCategoryType\":\n        for (var n = 0; n < this.f.count; n++) {\n          this.f._inner[n].aq = EnumUtil.getEnumValue(OthersCategoryType_$type, b.newValue);\n        }\n\n        break;\n\n      case \"OthersCategoryText\":\n        for (var o = 0; o < this.f.count; o++) {\n          this.f._inner[o].dz = b.newValue;\n        }\n\n        break;\n\n      case \"OthersCategoryStyle\":\n        for (var p = 0; p < this.f.count; p++) {\n          this.f._inner[p].g7 = b.newValue;\n        }\n\n        break;\n\n      case \"Legend\":\n        for (var q = 0; q < this.f.count; q++) {\n          this.f._inner[q].legend = b.newValue;\n        }\n\n        break;\n\n      case \"LegendItemTemplate\":\n        for (var r = 0; r < this.f.count; r++) {\n          this.f._inner[r].legendItemTemplate = b.newValue;\n        }\n\n        break;\n\n      case \"LegendItemBadgeTemplate\":\n        for (var s = 0; s < this.f.count; s++) {\n          this.f._inner[s].legendItemBadgeTemplate = b.newValue;\n        }\n\n        break;\n\n      case \"Outlines\":\n        for (var t = 0; t < this.f.count; t++) {\n          this.f._inner[t].ah = b.newValue;\n        }\n\n        break;\n\n      case \"Brushes\":\n        for (var u = 0; u < this.f.count; u++) {\n          this.f._inner[u].ag = b.newValue;\n        }\n\n        break;\n\n      case \"SelectedStyle\":\n        for (var v = 0; v < this.f.count; v++) {\n          this.f._inner[v].g8 = b.newValue;\n        }\n\n        break;\n\n      case \"SelectedStyleResolved\":\n        for (var w = 0; w < this.f.count; w++) {\n          this.f._inner[w].g8 = b.newValue;\n        }\n\n        break;\n\n      case \"RadiusFactor\":\n        for (var x = 0; x < this.f.count; x++) {\n          this.f._inner[x].cr = b.newValue;\n        }\n\n        break;\n    }\n  };\n\n  RingControlView.prototype.p = function () {\n    var e_29, _a;\n\n    try {\n      for (var _b = tslib_1.__values(fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var a = _c.value;\n        a.el();\n      }\n    } catch (e_29_1) {\n      e_29 = {\n        error: e_29_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_29) throw e_29.error;\n      }\n    }\n  };\n\n  RingControlView.prototype.j = function () {\n    return this.i;\n  };\n\n  RingControlView.prototype.v = function (a, b) {\n    this.b.n = a;\n    this.b.o = b;\n    this.x();\n  };\n\n  RingControlView.prototype.x = function () {\n    for (var a = 0; a < this.f.count; a++) {\n      var b = this.f._inner[a];\n      this.t(b, 0, 0);\n    }\n  };\n\n  RingControlView.$t = markType(RingControlView, 'RingControlView');\n  return RingControlView;\n}(Base);\n\nexport { RingControlView };\n/**\n * @hidden\n */\n\nvar RingSeriesBaseView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(RingSeriesBaseView, _super);\n\n  function RingSeriesBaseView(a) {\n    var _this = _super.call(this) || this;\n\n    _this.c = null;\n    _this.f = null;\n    _this.g = null;\n    _this.a = null;\n    _this.b = null;\n    _this.o = null;\n    _this.d = null;\n    _this.f = new List$1(RingControl.$, 0);\n    _this.c = a;\n    return _this;\n  }\n\n  RingSeriesBaseView.prototype.k = function () {\n    this.c.legendItemTemplate = function () {\n      var $ret = new DataTemplate();\n      $ret.render = PieLegendTemplates.c;\n      $ret.measure = PieLegendTemplates.a;\n      return $ret;\n    }();\n\n    this.c.legendItemBadgeTemplate = function () {\n      var $ret = new DataTemplate();\n      $ret.render = PieLegendTemplates.b;\n      $ret.measure = PieLegendTemplates.d;\n      return $ret;\n    }();\n  };\n\n  RingSeriesBaseView.prototype.h = function (a) {\n    if (!this.f.contains(a)) {\n      this.f.add(a);\n    }\n\n    if (this.g != null && a.ap() != this.g) {\n      a.ay(this.g);\n    }\n  };\n\n  RingSeriesBaseView.prototype.j = function (a, b, c, d, e) {\n    var f = BrushUtil.d(\"chart\", a, b, c);\n    b = f.p2;\n    c = f.p3;\n    var g = new Array(b.count * 2);\n\n    for (var h = 0; h < g.length; h += 2) {\n      g[h] = \"#fff\";\n      g[h + 1] = b.item(intDivide(h, 2))._fill;\n    }\n\n    var i = BrushUtil.d(\"doughnut\", a, b, c, g);\n    b = i.p2;\n    c = i.p3;\n    d = new Brush();\n    d._fill = this.g.rootWrapper.getStyleProperty(\"color\");\n    e = FontUtil.getFont(a);\n    return {\n      p1: b,\n      p2: c,\n      p3: d,\n      p4: e\n    };\n  };\n\n  RingSeriesBaseView.prototype.n = function (a) {\n    var e_30, _a, e_31, _b;\n\n    if (a == null) {\n      try {\n        for (var _c = tslib_1.__values(fromEnum(this.f)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var b = _d.value;\n          b.ay(null);\n        }\n      } catch (e_30_1) {\n        e_30 = {\n          error: e_30_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_30) throw e_30.error;\n        }\n      }\n\n      return;\n    }\n\n    this.g = a;\n    var c;\n    var d;\n    var e;\n    var f;\n    var g = this.j(this.g, c, d, e, f);\n    c = g.p1;\n    d = g.p2;\n    e = g.p3;\n    f = g.p4;\n    this.a = c;\n    this.b = d;\n    this.o = e;\n    this.d = f;\n\n    if (this.c.ag == null) {\n      this.c.ag = this.a;\n    }\n\n    if (this.c.ah == null) {\n      this.c.ah = this.b;\n    }\n\n    try {\n      for (var _e = tslib_1.__values(fromEnum(this.f)), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var h = _f.value;\n        h.ay(this.g);\n      }\n    } catch (e_31_1) {\n      e_31 = {\n        error: e_31_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_31) throw e_31.error;\n      }\n    }\n  };\n\n  RingSeriesBaseView.prototype.e = function () {\n    return true;\n  };\n\n  RingSeriesBaseView.prototype.i = function () {\n    this.n(null);\n  };\n\n  RingSeriesBaseView.prototype.l = function () {\n    for (var a = 0; a < this.f.count; a++) {\n      var b = this.f._inner[a];\n\n      for (var c = 0; c < b.arcs.a.count; c++) {\n        var d = b.arcs.a._inner[c];\n        d.el();\n      }\n    }\n  };\n\n  RingSeriesBaseView.prototype.m = function (a, b) {\n    this.c.n = a;\n    this.c.o = b;\n    this.c.dq = {\n      $type: Point_$type,\n      x: a,\n      y: b\n    };\n  };\n\n  RingSeriesBaseView.$t = markType(RingSeriesBaseView, 'RingSeriesBaseView');\n  return RingSeriesBaseView;\n}(Base);\n\nexport { RingSeriesBaseView };\n/**\n * @hidden\n */\n\nvar XamDoughnutChartView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(XamDoughnutChartView, _super);\n\n  function XamDoughnutChartView(a) {\n    var _this = _super.call(this) || this;\n\n    _this.a = null;\n    _this.aa = null;\n    _this.d = 0;\n    _this.c = null;\n    _this.ab = null;\n    _this.f = null;\n    _this.e = null;\n    _this.b = null;\n    _this.ab = Rect.empty;\n    _this.aa = {\n      $type: Point_$type,\n      x: 0,\n      y: 0\n    };\n    _this.d = 0;\n    _this.c = new List$1(RingSeriesBase.$, 0);\n    _this.a = a;\n    return _this;\n  }\n\n  XamDoughnutChartView.prototype.s = function () {\n    this.p();\n  };\n\n  XamDoughnutChartView.prototype.z = function () {};\n\n  XamDoughnutChartView.prototype.h = function (a) {\n    if (!this.c.contains(a)) {\n      a.cm(this.e);\n      this.c.add(a);\n    }\n  };\n\n  XamDoughnutChartView.prototype.w = function (a) {\n    if (this.c.contains(a)) {\n      a.cm(null);\n      this.c.remove(a);\n    }\n  };\n\n  XamDoughnutChartView.prototype.i = function () {};\n\n  XamDoughnutChartView.prototype.y = function () {\n    if (this.e == null) {\n      return;\n    }\n\n    this.p();\n    var a = this.e.rootWrapper.width();\n    var b = this.e.rootWrapper.height();\n    this.ab = new Rect(0, 0, 0, a, b);\n\n    if (this.b != null) {\n      this.b.bf = this.ab;\n    }\n\n    this.a.bt();\n  };\n\n  XamDoughnutChartView.prototype.v = function (a) {\n    if (a == null) {\n      if (this.b != null) {\n        this.b.aq();\n      }\n\n      return;\n    }\n\n    var b = a;\n    this.e = b;\n    var c = this.e.rootWrapper.width();\n    var d = this.e.rootWrapper.height();\n    this.ab = new Rect(0, 0, 0, c, d);\n    this.b = new DOMEventProxy(this.e.rootWrapper, this.e, false);\n    this.b.bf = this.ab;\n    var e = this.b;\n    e.onMouseOver = delegateCombine(e.onMouseOver, runOn(this, this.m));\n    var f = this.b;\n    f.onMouseLeave = delegateCombine(f.onMouseLeave, runOn(this, this.l));\n    var g = this.b;\n    g.onMouseDown = delegateCombine(g.onMouseDown, runOn(this, this.k));\n    var h = this.b;\n    h.onMouseUp = delegateCombine(h.onMouseUp, runOn(this, this.n));\n    this.y();\n  };\n\n  XamDoughnutChartView.prototype.t = function (a, b, c) {\n    for (var d = this.c.count - 1; d >= 0; d--) {\n      var e = this.c._inner[d];\n\n      if (e.ay) {\n        continue;\n      }\n\n      var f = e.as.f;\n\n      for (var g = 0; g < f.count; g++) {\n        var h = f._inner[g];\n        var i = h.arcs.a;\n\n        for (var j = 0; j < i.count; j++) {\n          var k = i._inner[j];\n          var l = {\n            $type: Point_$type,\n            x: a.x - k.n,\n            y: a.y - k.o\n          };\n          b(k.as, l);\n\n          if (c == \"mouseUp\") {\n            var m = k.hc.b5();\n\n            if (m != null) {\n              return;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  XamDoughnutChartView.prototype.n = function (a) {\n    this.t(a, function (b, c) {\n      return b.ak(c);\n    }, \"mouseUp\");\n  };\n\n  XamDoughnutChartView.prototype.k = function (a) {\n    this.t(a, function (b, c) {\n      return b.ah(c);\n    }, \"mouseDown\");\n  };\n\n  XamDoughnutChartView.prototype.l = function (a) {\n    this.t(a, function (b, c) {\n      return b.ai(c);\n    }, \"mouseLeave\");\n  };\n\n  XamDoughnutChartView.prototype.m = function (a, b, c) {\n    this.t(a, function (d, e) {\n      return d.aj(e, b, c);\n    }, \"mouseOver\");\n  };\n\n  XamDoughnutChartView.prototype.g = function () {\n    return this.e.rootWrapper.getAttribute(\"id\");\n  };\n\n  XamDoughnutChartView.prototype.u = function (a, b) {\n    if (!this.ab.isEmpty && this.ab.width != 0 && this.ab.height != 0) {\n      var c = this.aa.x;\n      var d = this.aa.y;\n      this.aa.x = this.ab.width / 2;\n      this.aa.y = this.ab.height / 2;\n\n      if (this.aa.x != c || this.aa.y != d) {\n        this.a.bs();\n      }\n    }\n  };\n\n  XamDoughnutChartView.prototype.x = function (a, b) {\n    var c = this.d;\n    this.d = a / 2;\n\n    if (c != this.d) {\n      this.a.bs();\n    }\n  };\n\n  XamDoughnutChartView.prototype.j = function () {};\n\n  XamDoughnutChartView.prototype.o = function (a) {\n    a.width = this.a.width;\n    a.height = this.a.height;\n    a.holeRadius = this.a.a2();\n\n    for (var b = 0; b < this.a.series.count; b++) {\n      a.series.add(new RingSeriesVisualData());\n      a.series._inner[b].rings = new RingVisualDataList();\n      a.series._inner[b].name = this.a.series._inner[b].name;\n      a.series._inner[b].labelExtent = this.a.series._inner[b].a0;\n      a.series._inner[b].leaderLineMargin = this.a.series._inner[b].a1;\n      a.series._inner[b].leaderLineType = EnumUtil.getName(LeaderLineType_$type, this.a.series._inner[b].ak);\n      a.series._inner[b].labelsPosition = EnumUtil.getName(LabelsPosition_$type, this.a.series._inner[b].aj);\n      a.series._inner[b].leaderLineVisibility = this.a.series._inner[b].dw == 0;\n\n      for (var c = 0; c < this.a.series._inner[b].aq().count; c++) {\n        a.series._inner[b].rings.add(new RingVisualData());\n\n        a.series._inner[b].rings._inner[c].arcs = new ArcVisualDataList();\n\n        for (var d = 0; d < this.a.series._inner[b].aq()._inner[c].g.count; d++) {\n          a.series._inner[b].rings._inner[c].arcs.add(new ArcVisualData());\n\n          a.series._inner[b].rings._inner[c].arcs._inner[d].a = new SliceVisualDataList();\n\n          var _loop_4 = function (e) {\n            if (null == this_4.a.series._inner[b].aq()._inner[c].g._inner[d].g._inner[e].b) {\n              return \"continue\";\n            }\n\n            a.series._inner[b].rings._inner[c].arcs._inner[d].a.add(new SliceVisualData());\n\n            var f = new SliceVisualData();\n\n            var g = this_4.a.series._inner[b].aq()._inner[c].g._inner[d].g._inner[e].b;\n\n            f.visibility = g._visibility == 0;\n            f.endAngle = g.ax;\n            f.startAngle = g.a3;\n            f.radius = g.a2;\n            f.origin = PointData.b(g.b7);\n            f.explodedOrigin = PointData.b(g.b5);\n            f.index = g.a5;\n            f.isExploded = g.isExploded;\n            f.isSelected = g.isSelected;\n            f.outline = AppearanceHelper.a(g.b1);\n            f.backgroundPath = new PathVisualData(1, \"slicePath\", g.al.f());\n            a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e] = f;\n            var h = g.aj;\n\n            if (null != h) {\n              a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e].labelVisualData = function () {\n                var $ret = new DoughnutChartLabelVisualData();\n                $ret.labelSize = SizeData.b(RectUtil.z(h.ao));\n                $ret.labelValue = h.aj.ak;\n                return $ret;\n              }();\n\n              if (!isNaN_(h.n) && !isNaN_(h.o)) {\n                a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e].labelVisualData.labelPosition = new PointData(h.n, h.o);\n              }\n            }\n          };\n\n          var this_4 = this;\n\n          for (var e = 0; e < this.a.series._inner[b].aq()._inner[c].g._inner[d].g.count; e++) {\n            _loop_4(e);\n          }\n        }\n      }\n    }\n  };\n\n  XamDoughnutChartView.prototype.p = function () {\n    var a = this.a.a4;\n    var b = this.a.a1;\n\n    if (!isNaN_(a) && a != 0) {\n      return;\n    }\n\n    if (window.devicePixelRatio != undefined && window.devicePixelRatio != b) {\n      this.a.a1 = window.devicePixelRatio;\n    }\n  };\n\n  XamDoughnutChartView.prototype.r = function () {\n    if (this.b != null) {\n      this.b.bb(this.e.rootWrapper, \"\");\n    }\n  };\n\n  XamDoughnutChartView.prototype.q = function () {\n    this.p();\n\n    if (this.b != null) {\n      this.b.ap(this.e.rootWrapper, \"\");\n    }\n  };\n\n  XamDoughnutChartView.$t = markType(XamDoughnutChartView, 'XamDoughnutChartView');\n  return XamDoughnutChartView;\n}(Base);\n\nexport { XamDoughnutChartView };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/Arc_combined.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { PieChartBase } from \"./PieChartBase\";\nimport { DependencyProperty } from \"igniteui-react-core\";\nimport { PieChartBaseView } from \"./PieChartBaseView\";\nimport { Base, Number_$type, typeCast, fromEnum, markType, markDep, IEnumerable_$type, INotifyPropertyChanged_$type, PropertyChangedEventArgs, Point_$type, delegateCombine, enumGetBox, EnumUtil, Delegate_$type, Boolean_$type, delegateRemove, runOn, fromEn, toEnum } from \"igniteui-react-core\";\nimport { Control } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-react-core\";\nimport { Pool$1 } from \"igniteui-react-core\";\nimport { FastItemsSource } from \"igniteui-react-core\";\nimport { IChartLegend_$type } from \"igniteui-react-core\";\nimport { ContentControl } from \"igniteui-react-core\";\nimport { Brush } from \"igniteui-react-core\";\nimport { PieSliceDataContext } from \"./PieSliceDataContext\";\nimport { UIElement } from \"igniteui-react-core\";\nimport { PropertyMetadata } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { BrushCollection } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity, intDivide } from \"igniteui-react-core\";\nimport { ILegendSeries_$type } from \"igniteui-react-core\";\nimport { ILegendTemplateProvider_$type } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Style } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { DataTemplate } from \"igniteui-react-core\";\nimport { ILegendOwner_$type } from \"igniteui-react-core\";\nimport { PropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { Size } from \"igniteui-react-core\";\nimport { ObservableCollection$1 } from \"igniteui-react-core\";\nimport { DomRenderer_$type } from \"igniteui-react-core\";\nimport { DeviceUtils } from \"igniteui-react-core\";\nimport { Rect } from \"igniteui-react-core\";\nimport { HoleDimensionsChangedEventArgs } from \"./HoleDimensionsChangedEventArgs\";\nimport { DoughnutChartVisualData } from \"./DoughnutChartVisualData\";\nimport { RingSeriesVisualDataList } from \"./RingSeriesVisualDataList\";\nimport { RectData } from \"igniteui-react-core\";\nimport { Dictionary$2 } from \"igniteui-react-core\";\nimport { PieLegendTemplates } from \"./PieLegendTemplates\";\nimport { BrushUtil } from \"igniteui-react-core\";\nimport { FontUtil } from \"igniteui-react-core\";\nimport { DOMEventProxy } from \"igniteui-react-core\";\nimport { SliceVisualData } from \"./SliceVisualData\";\nimport { RingSeriesVisualData } from \"./RingSeriesVisualData\";\nimport { RingVisualDataList } from \"./RingVisualDataList\";\nimport { RingVisualData } from \"./RingVisualData\";\nimport { ArcVisualDataList } from \"./ArcVisualDataList\";\nimport { ArcVisualData } from \"./ArcVisualData\";\nimport { SliceVisualDataList } from \"./SliceVisualDataList\";\nimport { PointData } from \"igniteui-react-core\";\nimport { AppearanceHelper } from \"igniteui-react-core\";\nimport { PathVisualData } from \"igniteui-react-core\";\nimport { DoughnutChartLabelVisualData } from \"./DoughnutChartLabelVisualData\";\nimport { RectUtil } from \"igniteui-react-core\";\nimport { SizeData } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar Arc = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Arc, _super);\n    function Arc() {\n        var _this = _super.call(this) || this;\n        _this.hd = null;\n        _this.hb = null;\n        _this.hg = 0;\n        _this.ab = Arc.$;\n        return _this;\n    }\n    Arc.prototype.ar = function () {\n        return new ArcView(this);\n    };\n    Arc.prototype.e6 = function (a) {\n        _super.prototype.e6.call(this, a);\n        this.hc = a;\n    };\n    Object.defineProperty(Arc.prototype, \"he\", {\n        get: function () {\n            return this.hd;\n        },\n        set: function (a) {\n            var b = this.hd;\n            this.hd = a;\n            this.hc.b6(b, this.hd);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Arc.prototype, \"hh\", {\n        get: function () {\n            if (this.he != null) {\n                return this.he.i;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Arc.prototype.e5 = function (a, b) {\n        _super.prototype.e5.call(this, a, b);\n        if (this.he != null) {\n            this.he.c.at.bu(a, b);\n        }\n    };\n    Arc.prototype.ek = function (a, b) {\n        if (this.he != null && this.he.d != null) {\n            _super.prototype.ek.call(this, a, b);\n            var c = this.hf(a);\n            if (c != null) {\n                this.he.d.bj(c, b);\n            }\n        }\n    };\n    Arc.prototype.fk = function (a, b) {\n        if (this.he != null && this.he.d != null) {\n            _super.prototype.fk.call(this, a, b);\n            var c = this.hf(a);\n            if (c != null) {\n                this.he.d.b5(c, b);\n            }\n        }\n    };\n    Arc.prototype.hf = function (a) {\n        var e_1, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.hb.g)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var b = _c.value;\n                if (b.b == a) {\n                    return b;\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return null;\n    };\n    Arc.prototype.fj = function (a) {\n        if (this.bq) {\n            this.e9();\n            this.fh();\n            this.fg();\n        }\n    };\n    Arc.prototype.e9 = function () {\n        if (this.itemsSource == null || this.a5 == null) {\n            this.bg.count = 0;\n            return;\n        }\n        var a = this.b2.count;\n        var b = this.b1.count > 0;\n        var c = PieChartBase.cs(this.cf);\n        var d = PieChartBase.cs(this.cf);\n        this.cx = a;\n        if (b) {\n            a++;\n        }\n        for (var e = 0; e < a; e++) {\n            var f = false;\n            var g = void 0;\n            if (e == a - 1 && b) {\n                g = this.cp;\n                f = true;\n            }\n            else {\n                g = this.be.item(this.b2._inner[e]);\n            }\n            if (this.gz == 1) {\n                d += PieChartBase.cs(Math.abs(g) * this.hi / this.cu);\n            }\n            else {\n                d -= PieChartBase.cs(Math.abs(g) * this.hi / this.cu);\n            }\n            var h = this.bg.item(e);\n            if (this.cc >= 100) {\n                h._visibility = 1;\n            }\n            else {\n                h._visibility = 0;\n            }\n            h.aw = true;\n            h.a3 = c;\n            h.ax = d;\n            h.a1 = h.a0 = this.cc;\n            h.isOthersSlice = f;\n            h.ay = this.cb;\n            h.a5 = e;\n            h.dataContext = f ? this.b0 : this.a5.item(this.b2._inner[e]);\n            h.isExploded = this.explodedSlices.contains(e);\n            h.isSelected = this.selectedSlices.contains(e);\n            c = d;\n            h.aw = false;\n        }\n        this.bg.count = a;\n        if (this.hb != null) {\n            this.hb.q(this);\n        }\n    };\n    Arc.prototype.fg = function () {\n        var e_2, _a;\n        var _this = this;\n        var a = typeCast(IChartLegend_$type, this.legend);\n        if (a == null) {\n            return;\n        }\n        if (this.ba == null || this.ba.count == 0 || ((this.he != null && this.he.c != null) && (this.he.d != null && !this.he.d.series.contains(this.he.c)))) {\n            a.clearLegendItemsForSeries(this.he.c);\n            return;\n        }\n        this.bz = new List$1(UIElement.$, 0);\n        var _loop_1 = function (b) {\n            var c = new ContentControl();\n            var d = this_1.cy(b);\n            var e = b.b0;\n            var f = b.isOthersSlice ? this_1.dz : (this_1.bb != null && this_1.bb.count > 0) ? this_1.bb.item(this_1.b2._inner[b.a5]) : null;\n            f = (f == null && this_1.ba.count > 0) ? this_1.ba.item(this_1.b2._inner[b.a5]) : f;\n            c.content = ((function () {\n                var $ret = new PieSliceDataContext();\n                $ret.series = _this.he.c;\n                $ret.slice = b;\n                $ret.item = b.dataContext;\n                $ret.itemBrush = e;\n                $ret.legendLabel = f != null ? f.toString() : null;\n                $ret.itemLabel = d != null ? d.toString() : null;\n                $ret.percentValue = _this.ck(b);\n                $ret.isOthersSlice = b.isOthersSlice;\n                return $ret;\n            })());\n            var g = c.content;\n            if (this_1.au != null) {\n                var h = this_1.au(g);\n                if (h != null) {\n                    g.legendLabel = h.toString();\n                }\n            }\n            if (this_1.legendItemTemplate != null) {\n                c.ah = this_1.legendItemTemplate;\n            }\n            this_1.bz.add(c);\n        };\n        var this_1 = this;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.bg.a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var b = _c.value;\n                _loop_1(b);\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        if (a.isItemwise) {\n            var i = a;\n            i.createLegendItemsInsert(this.bz, this.he.c);\n        }\n    };\n    Arc.prototype.fa = function (a, b, c, d) {\n        _super.prototype.fa.call(this, a, b, c, d);\n        switch (b) {\n            case Arc.$$p[0]:\n                this.hg = d;\n                this.e9();\n                this.e8();\n                this.fh();\n                this.ff();\n                break;\n            case \"RadiusFactor\":\n                if (this.he != null && this.he.d != null) {\n                    this.he.d.bw();\n                }\n                break;\n            case \"Legend\":\n                var e = typeCast(IChartLegend_$type, c);\n                if (e != null && this.he != null && this.he.c != null) {\n                    e.clearLegendItemsForSeries(this.he.c);\n                }\n                break;\n        }\n    };\n    Arc.prototype.hj = function () {\n        return this.as.ac();\n    };\n    Arc.$t = markType(Arc, 'Arc', PieChartBase.$);\n    Arc.$$p = markDep(DependencyProperty, PropertyMetadata, Arc, 'fc', ['EndAngle:hi:hl', [1, 360]]);\n    return Arc;\n}(PieChartBase));\nexport { Arc };\n/**\n * @hidden\n */\nvar ArcItem = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArcItem, _super);\n    function ArcItem() {\n        var _this = _super.call(this) || this;\n        _this.d = null;\n        _this.b = null;\n        _this.n = null;\n        _this.l = 0;\n        _this.m = 0;\n        _this.k = 0;\n        _this.i = 0;\n        _this.j = 0;\n        _this.c = 0;\n        _this.a = null;\n        _this.g = null;\n        _this.e = null;\n        _this.h = null;\n        _this.k = 0;\n        _this.i = 360;\n        _this.g = new List$1(SliceItem.$, 0);\n        return _this;\n    }\n    ArcItem.prototype.o = function (a, b) {\n        var e_3, _a;\n        var c = 0;\n        var d = 0;\n        var e = new List$1(Number_$type, 0);\n        var f = new List$1(Number_$type, 0);\n        var g = new List$1(Base.$, 0);\n        this.g.clear();\n        if (this.h == null) {\n            return;\n        }\n        var h = new FastItemsSource();\n        h.e = this.h;\n        var i = this.f(h, this.n);\n        if (i == null || i.count == 0) {\n            h.deregisterColumn(i);\n            h.m();\n            return;\n        }\n        try {\n            for (var _b = tslib_1.__values(fromEnum(i)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var j = _c.value;\n                if (isNaN_(j) || isInfinity(j) || j <= 0) {\n                    continue;\n                }\n                c = c + j;\n            }\n        }\n        catch (e_3_1) {\n            e_3 = { error: e_3_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_3)\n                    throw e_3.error;\n            }\n        }\n        for (var k = 0; k < i.count; k++) {\n            var l = i.item(k);\n            if (isNaN_(l) || isInfinity(l) || l <= 0) {\n                continue;\n            }\n            var m = this.c == 1 ? l / c : l;\n            var n = this.c == 1 ? this.j / 100 : this.j;\n            if (m <= n) {\n                d = d + l;\n                f.add(k);\n                g.add1(h.item(k));\n            }\n            else {\n                e.add(k);\n            }\n        }\n        var o = e.count;\n        var p = f.count > 0;\n        var q = PieChartBase.cs(a);\n        var r = PieChartBase.cs(a);\n        if (p) {\n            o++;\n        }\n        var _loop_2 = function (s) {\n            var t = false;\n            var u = void 0;\n            if (s == o - 1 && p) {\n                u = d;\n                t = true;\n            }\n            else {\n                u = i.item(e._inner[s]);\n            }\n            var v = 1;\n            if (v == 1) {\n                r += PieChartBase.cs(Math.abs(u) * b / c);\n            }\n            else {\n                r -= PieChartBase.cs(Math.abs(u) * b / c);\n            }\n            this_2.g.add(((function () {\n                var $ret = new SliceItem();\n                $ret.e = q;\n                $ret.d = r - q;\n                $ret.g = t ? g : h.item(e._inner[s]);\n                return $ret;\n            })()));\n            q = r;\n        };\n        var this_2 = this;\n        for (var s = 0; s < o; s++) {\n            _loop_2(s);\n        }\n        h.deregisterColumn(i);\n        h.m();\n    };\n    ArcItem.prototype.f = function (a, b) {\n        var c = null;\n        return a.registerColumn(b, c, false);\n    };\n    ArcItem.prototype.p = function (a) {\n        var b = this.e == null ? a : this.e.e;\n        var c = this.e == null ? 360 : this.e.d;\n        this.o(b, c);\n    };\n    ArcItem.prototype.q = function (a) {\n        var _this = this;\n        this.g.clear();\n        var _loop_3 = function (b) {\n            var c = a.bg.item(b);\n            this_3.g.add(((function () {\n                var $ret = new SliceItem();\n                $ret.e = c.a3;\n                $ret.d = c.ax - c.a3;\n                $ret.f = b;\n                $ret.a = _this;\n                $ret.g = c.dataContext;\n                $ret.c = c.isOthersSlice;\n                $ret.b = c;\n                return $ret;\n            })()));\n        };\n        var this_3 = this;\n        for (var b = 0; b < a.bg.count; b++) {\n            _loop_3(b);\n        }\n    };\n    ArcItem.$t = markType(ArcItem, 'ArcItem');\n    return ArcItem;\n}(Base));\nexport { ArcItem };\n/**\n * @hidden\n */\nvar RingSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingSeriesBase, _super);\n    function RingSeriesBase() {\n        var _this = _super.call(this) || this;\n        _this.ao = null;\n        _this.at = null;\n        _this.propertyChanged = null;\n        _this.propertyUpdated = null;\n        _this.a7 = null;\n        _this.aw = false;\n        _this.av = false;\n        _this.a5 = null;\n        _this.dq = null;\n        _this.as = null;\n        _this.cq = null;\n        _this.dq = { $type: Point_$type, x: 0, y: 0 };\n        _this.ao = function (a, b) { return _this.cl(a, b.propertyName, b.oldValue, b.newValue); };\n        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, _this.ao);\n        _this.as = _this.ar();\n        _this.ci(_this.as);\n        _this.as.k();\n        _this.a5 = function (a, b) { return _this.cc(b.action, b.position, b.count, b.propertyName); };\n        return _this;\n    }\n    RingSeriesBase.prototype.cn = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        if (this.propertyUpdated != null) {\n            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n        }\n    };\n    Object.defineProperty(RingSeriesBase.prototype, \"du\", {\n        get: function () {\n            if (this.dt != null) {\n                return this.dt;\n            }\n            if (this.at != null && this.at.cg != null) {\n                return this.at.cg;\n            }\n            return null;\n        },\n        set: function (a) {\n            var b = this.du;\n            if (this.dt != null && a != this.dt) {\n                a = this.dt;\n            }\n            this.cn(\"SelectedStyleResolved\", b, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"b5\", {\n        get: function () {\n            return this.a7;\n        },\n        set: function (a) {\n            var b = this.a7;\n            this.a7 = a;\n            this.cn(\"TextStyle\", b, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"cr\", {\n        get: function () {\n            return typeCast(DataTemplate.$, this.c(RingSeriesBase.c3));\n        },\n        set: function (a) {\n            this.h(RingSeriesBase.c3, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"ax\", {\n        get: function () {\n            return this.c(RingSeriesBase.cw);\n        },\n        set: function (a) {\n            this.aw = true;\n            this.h(RingSeriesBase.cw, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"ay\", {\n        get: function () {\n            if (!this.aw) {\n                return this.at.ax;\n            }\n            else {\n                return this.ax;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RingSeriesBase.prototype.cl = function (a, b, c, d) {\n        if (b == RingSeriesBase.$$p[4]) {\n            this.au = ((function () {\n                var $ret = new FastItemsSource();\n                $ret.e = d;\n                return $ret;\n            })());\n        }\n        if (b == RingSeriesBase.$$p[1]) {\n            if (typeCast(FastItemsSource.$, c) != null) {\n                var e = (typeCast(FastItemsSource.$, c));\n                e.event = delegateRemove(e.event, this.a5);\n                this.av = false;\n            }\n            if (typeCast(FastItemsSource.$, d) != null) {\n                var f = (typeCast(FastItemsSource.$, d));\n                f.event = delegateCombine(f.event, this.a5);\n                this.av = true;\n            }\n            this.ck();\n        }\n        switch (b) {\n            case RingSeriesBase.$$p[24]:\n                this.du = d;\n                break;\n            case RingSeriesBase.$$p[28]:\n                this.ck();\n                break;\n        }\n    };\n    Object.defineProperty(RingSeriesBase.prototype, \"container\", {\n        get: function () {\n            return this.at;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"isStacked\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"isVertical\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"isUsableInLegend\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"hasMarkers\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingSeriesBase.prototype, \"hasSubItems\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RingSeriesBase.prototype.cc = function (a, b, c, d) {\n        this.ck();\n    };\n    RingSeriesBase.prototype.ar = function () {\n        return new RingSeriesBaseView(this);\n    };\n    RingSeriesBase.prototype.ci = function (a) {\n    };\n    RingSeriesBase.prototype.cm = function (a) {\n        this.as.n(a);\n    };\n    RingSeriesBase.prototype.cb = function () {\n        if (this.as != null) {\n            this.as.i();\n        }\n    };\n    RingSeriesBase.prototype.cf = function (a, b) {\n        this.cd(new NotifyCollectionChangedEventArgs(1, 0, b, a));\n    };\n    RingSeriesBase.prototype.ch = function (a, b, c) {\n        this.cd(new NotifyCollectionChangedEventArgs(2, 2, c, b, a));\n    };\n    RingSeriesBase.prototype.ce = function () {\n        this.cd(new NotifyCollectionChangedEventArgs(0, 4));\n    };\n    RingSeriesBase.prototype.cg = function (a, b) {\n        this.cd(new NotifyCollectionChangedEventArgs(1, 1, b, a));\n    };\n    RingSeriesBase.prototype.cd = function (a) {\n        if (this.au != null) {\n            this.au.handleCollectionChanged(a);\n        }\n    };\n    RingSeriesBase.prototype.resolveLegendIndex = function () {\n        return -1;\n    };\n    RingSeriesBase.prototype.forSubItems = function (a) {\n    };\n    RingSeriesBase.$t = markType(RingSeriesBase, 'RingSeriesBase', Control.$, [INotifyPropertyChanged_$type, ILegendSeries_$type, ILegendTemplateProvider_$type]);\n    RingSeriesBase.c3 = DependencyProperty.i(\"LabelTemplate\", DataTemplate.$, RingSeriesBase.$, new PropertyMetadata(2, null, function (a, b) { return (typeCast(RingSeriesBase.$, a)).cn(\"LabelTemplate\", b.oldValue, b.newValue); }));\n    RingSeriesBase.cw = DependencyProperty.i(\"IsSurfaceInteractionDisabled\", Boolean_$type, RingSeriesBase.$, new PropertyMetadata(2, false, function (a, b) { return a.cn(\"IsSurfaceInteractionDisabled\", b.oldValue, b.newValue); }));\n    RingSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, RingSeriesBase, 'cn', ['Brushes:ag:cs', [BrushCollection.$, null], 'FastItemsSource:au:ct', [FastItemsSource.$], 'FormatLabel:am:cu', [Delegate_$type], 'FormatLegendLabel:an:cv', [Delegate_$type], 'ItemsSource::cx', [IEnumerable_$type, null], 'LabelExtent:a0:cy', [1, 10], 'LabelInnerColor:dn:cz', [Brush.$, null], 'LabelMemberPath:bg:c0', [2], 'LabelOuterColor:dp:c1', [Brush.$, null], 'LabelsPosition:aj:c2', [LabelsPosition_$type, enumGetBox(LabelsPosition_$type, 1)], 'LeaderLineMargin:a1:c4', [1, 6], 'LeaderLineStyle:dr:c5', [Style.$, null], 'LeaderLineType:ak:c6', [LeaderLineType_$type, enumGetBox(LeaderLineType_$type, 0)], 'LeaderLineVisibility:dw:c7', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'LegendItemBadgeTemplate::c8', [DataTemplate.$, null], 'LegendItemTemplate::c9', [DataTemplate.$, null], 'LegendLabelMemberPath:br:da', [2], 'Legend::db', [IChartLegend_$type, null], 'OthersCategoryStyle:ds:dc', [Style.$, null], 'OthersCategoryText:bv:dd', [2, \"Others\"], 'OthersCategoryThreshold:a2:de', [1, 3], 'OthersCategoryType:al:df', [OthersCategoryType_$type, enumGetBox(OthersCategoryType_$type, 1)], 'Outlines:ah:dg', [BrushCollection.$, null], 'RadiusFactor:a3:dh', [1, 0.9], 'SelectedStyle:dt:di', [Style.$, null], 'StartAngle:a4:dj', [1, 0], 'ToolTip::dk', [4, null], 'ToolTipStyle:dv:dl', [Style.$, null], 'ValueMemberPath:b9:dm', [2, null]]);\n    return RingSeriesBase;\n}(Control));\nexport { RingSeriesBase };\n/**\n * @hidden\n */\nvar Ring = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Ring, _super);\n    function Ring() {\n        var _this = _super.call(this) || this;\n        _this.j = 0;\n        _this.h = 0;\n        _this.q = new Size();\n        _this.p = null;\n        _this._ringControl = null;\n        _this.b = null;\n        _this.i = 0;\n        _this.g = null;\n        _this.d = null;\n        _this.e = false;\n        _this.p = { $type: Point_$type, x: 0, y: 0 };\n        _this.q = new Size(1, 0, 0);\n        _this.ringControl = ((function () {\n            var $ret = new RingControl();\n            $ret.ai = _this;\n            return $ret;\n        })());\n        _this.g = new List$1(ArcItem.$, 0);\n        _this.e = true;\n        return _this;\n    }\n    Object.defineProperty(Ring.prototype, \"ringControl\", {\n        get: function () {\n            return this._ringControl;\n        },\n        set: function (a) {\n            this._ringControl = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Ring.prototype, \"c\", {\n        get: function () {\n            return this.b;\n        },\n        set: function (a) {\n            this.b = a;\n            this.b.as.h(this.ringControl);\n            if (this.ringControl != null) {\n                this.ringControl.ak.s(a);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ring.prototype.f = function () {\n        if (this.ringControl != null && this.ringControl.ak.d()) {\n            var a = void 0, b = void 0;\n            a = this.p.x - this.c.dq.x;\n            b = this.p.y - this.c.dq.y;\n            this.ringControl.ak.v(a, b);\n            return this.ringControl.an();\n        }\n        return false;\n    };\n    Ring.prototype.o = function () {\n        if (this.ringControl != null) {\n            this.ringControl.width = this.q.width;\n            this.ringControl.height = this.q.height;\n            this.c.as.h(this.ringControl);\n            this.ringControl.ao = this.g;\n        }\n    };\n    Ring.prototype.l = function (source_, a, b) {\n        this.ringControl.as(source_, a, b);\n    };\n    Ring.prototype.k = function (source_) {\n        this.ringControl.ar(source_);\n    };\n    Ring.prototype.m = function (source_, a, b) {\n        this.ringControl.at(source_, a, b);\n    };\n    Ring.prototype.n = function (source_, a, b, c) {\n        this.ringControl.au(source_, a, b, c);\n    };\n    Ring.$t = markType(Ring, 'Ring');\n    return Ring;\n}(Base));\nexport { Ring };\n/**\n * @hidden\n */\nvar RingCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingCollection, _super);\n    function RingCollection() {\n        return _super.call(this, Ring.$, 0) || this;\n    }\n    RingCollection.prototype.p = function () {\n        var e_4, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                if (a.e) {\n                    var b = 0;\n                    var c = a.ringControl.arcs.count;\n                    while (b < c) {\n                        a.ringControl.arcs.destroy(a.ringControl.arcs.item(b));\n                        b++;\n                    }\n                    a.ringControl.arcs.count = 0;\n                    a.ringControl = null;\n                }\n            }\n        }\n        catch (e_4_1) {\n            e_4 = { error: e_4_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_4)\n                    throw e_4.error;\n            }\n        }\n        _super.prototype.p.call(this);\n    };\n    RingCollection.prototype.u = function (a) {\n        var b = this._inner[a];\n        if (b.e) {\n            b.ringControl.arcs.destroy(b.ringControl.arcs.item(a));\n            b.ringControl.arcs.count = 0;\n            b.ringControl = null;\n        }\n        _super.prototype.u.call(this, a);\n    };\n    RingCollection.$t = markType(RingCollection, 'RingCollection', ObservableCollection$1.$.specialize(Ring.$));\n    return RingCollection;\n}(ObservableCollection$1));\nexport { RingCollection };\n/**\n * @hidden\n */\nvar RingControl = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingControl, _super);\n    function RingControl() {\n        var _this = _super.call(this) || this;\n        _this.ak = null;\n        _this.ah = null;\n        _this.arcs = null;\n        _this.ao = null;\n        _this.a0 = null;\n        _this.propertyChanged = null;\n        _this.propertyUpdated = null;\n        _this.ab = RingControl.$;\n        _this.ak = _this.aj();\n        _this.ax(_this.ak);\n        _this.ak.r();\n        _this.arcs = ((function () {\n            var $ret = new Pool$1(Arc.$);\n            $ret.create = runOn(_this.ak, _this.ak.a);\n            $ret.activate = runOn(_this.ak, _this.ak.l);\n            $ret.disactivate = runOn(_this.ak, _this.ak.n);\n            $ret.destroy = runOn(_this.ak, _this.ak.m);\n            return $ret;\n        })());\n        return _this;\n    }\n    Object.defineProperty(RingControl.prototype, \"al\", {\n        get: function () {\n            return this.ai.c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RingControl.prototype, \"ai\", {\n        get: function () {\n            return this.ah;\n        },\n        set: function (a) {\n            this.ah = a;\n            if (this.ah == null) {\n                this.ak.s(null);\n            }\n            else {\n                this.ak.s(this.ah.c);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RingControl.prototype.aj = function () {\n        return new RingControlView(this);\n    };\n    RingControl.prototype.ax = function (a) {\n    };\n    RingControl.prototype.az = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        if (this.propertyUpdated != null) {\n            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n        }\n    };\n    RingControl.prototype.aw = function () {\n        this.an();\n    };\n    RingControl.prototype.an = function () {\n        var e_5, _a;\n        if (this.ao == null) {\n            return false;\n        }\n        if (!this.ak.d()) {\n            return false;\n        }\n        var a = 0;\n        var b = false;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.ao)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                var d = this.arcs.item(a);\n                d.hb = c;\n                if (d.cl != this.ai.h) {\n                    d.cl = this.ai.h;\n                }\n                if ((d.width != this.ai.q.width || d.height != this.ai.q.height) && d.as.r()) {\n                    d.width = this.ai.q.width;\n                    d.height = this.ai.q.height;\n                    this.ak.ab(d);\n                    b = true;\n                }\n                if (d.ct != c.k) {\n                    d.ct = c.k;\n                }\n                if (d.hi != c.i) {\n                    d.hi = c.i;\n                }\n                if (d.itemsSource != c.h) {\n                    d.itemsSource = c.h;\n                }\n                if (d.ag != c.a) {\n                    d.ag = c.a;\n                }\n                this.ak.t(d, 0, 0);\n                a++;\n            }\n        }\n        catch (e_5_1) {\n            e_5 = { error: e_5_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_5)\n                    throw e_5.error;\n            }\n        }\n        this.arcs.count = a;\n        return b;\n    };\n    RingControl.prototype.ay = function (a) {\n        this.ak.w(a);\n    };\n    RingControl.prototype.av = function () {\n        this.ak.q();\n    };\n    RingControl.prototype.ap = function () {\n        return this.ak.j();\n    };\n    RingControl.prototype.as = function (source_, a, b) {\n        for (var c = 0; c < this.arcs.count; c++) {\n            this.arcs.item(c).es(source_, a, b);\n        }\n    };\n    RingControl.prototype.ar = function (source_) {\n        for (var a = 0; a < this.arcs.count; a++) {\n            this.arcs.item(a).eq(source_);\n        }\n    };\n    RingControl.prototype.at = function (source_, a, b) {\n        for (var c = 0; c < this.arcs.count; c++) {\n            this.arcs.item(c).et(source_, a, b);\n        }\n    };\n    RingControl.prototype.au = function (source_, a, b, c) {\n        for (var d = 0; d < this.arcs.count; d++) {\n            this.arcs.item(d).eu(source_, a, b, c);\n        }\n    };\n    RingControl.$t = markType(RingControl, 'RingControl', Control.$, [INotifyPropertyChanged_$type]);\n    return RingControl;\n}(Control));\nexport { RingControl };\n/**\n * @hidden\n */\nvar RingSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingSeriesCollection, _super);\n    function RingSeriesCollection() {\n        return _super.call(this, RingSeriesBase.$, 0) || this;\n    }\n    RingSeriesCollection.$t = markType(RingSeriesCollection, 'RingSeriesCollection', ObservableCollection$1.$.specialize(RingSeriesBase.$));\n    return RingSeriesCollection;\n}(ObservableCollection$1));\nexport { RingSeriesCollection };\n/**\n * @hidden\n */\nvar SliceItem = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SliceItem, _super);\n    function SliceItem() {\n        var _this = _super.call(this) || this;\n        _this.e = 0;\n        _this.d = 0;\n        _this.a = null;\n        _this.f = 0;\n        _this.b = null;\n        _this.g = null;\n        _this.c = false;\n        return _this;\n    }\n    SliceItem.$t = markType(SliceItem, 'SliceItem');\n    return SliceItem;\n}(Base));\nexport { SliceItem };\n/**\n * @hidden\n */\nvar SliceCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SliceCollection, _super);\n    function SliceCollection() {\n        var _this = _super.call(this, SliceItem.$, 0) || this;\n        _this.ae = false;\n        _this.ag = false;\n        return _this;\n    }\n    SliceCollection.prototype.r = function (a, b) {\n        if (this.contains(b)) {\n            return;\n        }\n        var c = this.ah(b.b);\n        if (c != -1) {\n            _super.prototype.x.call(this, c, b);\n        }\n        else {\n            _super.prototype.r.call(this, a, b);\n            if (this.ae) {\n                if (this.ag) {\n                    b.b.isSelected = true;\n                }\n                else {\n                    b.b.isExploded = true;\n                }\n            }\n        }\n    };\n    SliceCollection.prototype.x = function (a, b) {\n        if (this.ae) {\n            if (this.ag) {\n                this._inner[a].b.isSelected = false;\n            }\n            else {\n                this._inner[a].b.isExploded = false;\n            }\n        }\n        _super.prototype.x.call(this, a, b);\n    };\n    SliceCollection.prototype.u = function (a) {\n        var b = this._inner[a];\n        _super.prototype.u.call(this, a);\n        if (this.ae) {\n            if (this.ag) {\n                b.b.isSelected = false;\n            }\n            else {\n                b.b.isExploded = false;\n            }\n        }\n    };\n    SliceCollection.prototype.remove = function (a) {\n        var b = this.ah(a.b);\n        if (b != -1) {\n            this.u(b);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    SliceCollection.prototype.p = function () {\n        while (this.count > 0) {\n            this.u(0);\n        }\n    };\n    SliceCollection.prototype.ah = function (a) {\n        for (var b = 0; b < this.count; b++) {\n            if (this._inner[b].b == a) {\n                return b;\n            }\n        }\n        return -1;\n    };\n    SliceCollection.$t = markType(SliceCollection, 'SliceCollection', ObservableCollection$1.$.specialize(SliceItem.$));\n    return SliceCollection;\n}(ObservableCollection$1));\nexport { SliceCollection };\n/**\n * @hidden\n */\nvar XamDoughnutChart = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XamDoughnutChart, _super);\n    function XamDoughnutChart() {\n        var _this = _super.call(this) || this;\n        _this.al = new RingSeriesCollection();\n        _this.aj = new RingCollection();\n        _this.ap = ((function () {\n            var $ret = new SliceCollection();\n            $ret.ae = true;\n            $ret.ag = true;\n            return $ret;\n        })());\n        _this.ao = ((function () {\n            var $ret = new SliceCollection();\n            $ret.ae = true;\n            $ret.ag = false;\n            return $ret;\n        })());\n        _this.ah = null;\n        _this.a0 = NaN;\n        _this.az = 1;\n        _this.au = null;\n        _this.sliceClick = null;\n        _this.propertyChanged = null;\n        _this.propertyUpdated = null;\n        _this.holeDimensionsChanged = null;\n        var a = _this.at();\n        _this.bv(a);\n        a.s();\n        _this.ab = XamDoughnutChart.$;\n        _this.ah = function (b, c) { return _this.bz(b, c.propertyName, c.oldValue, c.newValue); };\n        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, _this.ah);\n        var b = _this.series;\n        b.collectionChanged = delegateCombine(b.collectionChanged, runOn(_this, _this.b6));\n        return _this;\n    }\n    Object.defineProperty(XamDoughnutChart.prototype, \"ak\", {\n        get: function () {\n            return this.aj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamDoughnutChart.prototype, \"series\", {\n        get: function () {\n            return this.al;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamDoughnutChart.prototype.b6 = function (a, b) {\n        var e_6, _a;\n        var c = new List$1(RingSeriesBase.$, 0);\n        if (b.oldItems != null) {\n            try {\n                for (var _b = tslib_1.__values(fromEn(b.oldItems)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var d = _c.value;\n                    if (b.newItems == null || !b.newItems.contains(d)) {\n                        d.cb();\n                        this.au.w(d);\n                    }\n                }\n            }\n            catch (e_6_1) {\n                e_6 = { error: e_6_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_6)\n                        throw e_6.error;\n                }\n            }\n        }\n        this.bx();\n        this.b2();\n    };\n    Object.defineProperty(XamDoughnutChart.prototype, \"a3\", {\n        get: function () {\n            return this.c(XamDoughnutChart.cc);\n        },\n        set: function (a) {\n            this.h(XamDoughnutChart.cc, a);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamDoughnutChart.prototype, \"ar\", {\n        get: function () {\n            return this.ap;\n        },\n        set: function (a) {\n            this.ap.clear();\n            this.ap.ae = false;\n            this.ap = a;\n            this.ap.ae = true;\n            this.ap.ag = true;\n            for (var b = 0; b < this.ap.count; b++) {\n                this.ap._inner[b].b.isSelected = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamDoughnutChart.prototype, \"aq\", {\n        get: function () {\n            return this.ao;\n        },\n        set: function (a) {\n            this.ao.clear();\n            this.ao.ae = false;\n            this.ao = a;\n            this.ao.ae = true;\n            this.ao.ag = false;\n            for (var b = 0; b < this.ao.count; b++) {\n                this.ao._inner[b].b.isExploded = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamDoughnutChart.prototype, \"a4\", {\n        get: function () {\n            return this.a0;\n        },\n        set: function (a) {\n            var b = this.a0;\n            this.a0 = a;\n            this.b1(\"PixelScalingRatio\", b, this.a0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(XamDoughnutChart.prototype, \"a1\", {\n        get: function () {\n            return this.az;\n        },\n        set: function (a) {\n            var b = this.az;\n            this.az = a;\n            this.b1(\"ActualPixelScalingRatio\", b, this.az);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XamDoughnutChart.prototype.destroy = function () {\n        var e_7, _a;\n        this.au.v(null);\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.cb();\n            }\n        }\n        catch (e_7_1) {\n            e_7 = { error: e_7_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_7)\n                    throw e_7.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.b5 = function (a, b) {\n        if (b) {\n            this.ar.add(a);\n        }\n        else {\n            this.ar.remove(a);\n        }\n    };\n    XamDoughnutChart.prototype.bj = function (a, b) {\n        if (b) {\n            this.aq.add(a);\n        }\n        else {\n            this.aq.remove(a);\n        }\n    };\n    XamDoughnutChart.prototype.bz = function (a, b, c, d) {\n        var e_8, _a, e_9, _b, e_10, _c, e_11, _d, e_12, _e;\n        switch (b) {\n            case XamDoughnutChart.$$p[5]:\n                try {\n                    for (var _f = tslib_1.__values(fromEnum(this.series)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                        var e = _g.value;\n                        e.du = d;\n                    }\n                }\n                catch (e_8_1) {\n                    e_8 = { error: e_8_1 };\n                }\n                finally {\n                    try {\n                        if (_g && !_g.done && (_a = _f.return))\n                            _a.call(_f);\n                    }\n                    finally {\n                        if (e_8)\n                            throw e_8.error;\n                    }\n                }\n                break;\n            case XamDoughnutChart.$$p[0]:\n                for (var f = 0; f < this.aj.count; f++) {\n                    try {\n                        for (var _h = (e_9 = void 0, tslib_1.__values(fromEnum(this.aj._inner[f].ringControl.arcs.a))), _j = _h.next(); !_j.done; _j = _h.next()) {\n                            var g = _j.value;\n                            g.bp = this.av;\n                        }\n                    }\n                    catch (e_9_1) {\n                        e_9 = { error: e_9_1 };\n                    }\n                    finally {\n                        try {\n                            if (_j && !_j.done && (_b = _h.return))\n                                _b.call(_h);\n                        }\n                        finally {\n                            if (e_9)\n                                throw e_9.error;\n                        }\n                    }\n                }\n                break;\n            case XamDoughnutChart.$$p[1]:\n                for (var h = 0; h < this.aj.count; h++) {\n                    try {\n                        for (var _k = (e_10 = void 0, tslib_1.__values(fromEnum(this.aj._inner[h].ringControl.arcs.a))), _l = _k.next(); !_l.done; _l = _k.next()) {\n                            var i = _l.value;\n                            i.bq = this.aw;\n                        }\n                    }\n                    catch (e_10_1) {\n                        e_10 = { error: e_10_1 };\n                    }\n                    finally {\n                        try {\n                            if (_l && !_l.done && (_c = _k.return))\n                                _c.call(_k);\n                        }\n                        finally {\n                            if (e_10)\n                                throw e_10.error;\n                        }\n                    }\n                }\n                break;\n            case \"PixelScalingRatio\":\n                var j = DeviceUtils.a(this.a4);\n                if (isNaN_(j)) {\n                    this.a1 = 1;\n                }\n                else {\n                    this.a1 = j;\n                }\n                break;\n            case \"ActualPixelScalingRatio\":\n                try {\n                    for (var _m = tslib_1.__values(fromEnum(this.aj)), _o = _m.next(); !_o.done; _o = _m.next()) {\n                        var k = _o.value;\n                        try {\n                            for (var _p = (e_12 = void 0, tslib_1.__values(fromEnum(k.ringControl.arcs.a))), _q = _p.next(); !_q.done; _q = _p.next()) {\n                                var l = _q.value;\n                                l.cd = this.a1;\n                            }\n                        }\n                        catch (e_12_1) {\n                            e_12 = { error: e_12_1 };\n                        }\n                        finally {\n                            try {\n                                if (_q && !_q.done && (_e = _p.return))\n                                    _e.call(_p);\n                            }\n                            finally {\n                                if (e_12)\n                                    throw e_12.error;\n                            }\n                        }\n                    }\n                }\n                catch (e_11_1) {\n                    e_11 = { error: e_11_1 };\n                }\n                finally {\n                    try {\n                        if (_o && !_o.done && (_d = _m.return))\n                            _d.call(_m);\n                    }\n                    finally {\n                        if (e_11)\n                            throw e_11.error;\n                    }\n                }\n                break;\n        }\n    };\n    XamDoughnutChart.prototype.at = function () {\n        return new XamDoughnutChartView(this);\n    };\n    XamDoughnutChart.prototype.bv = function (a) {\n        this.au = a;\n    };\n    XamDoughnutChart.prototype.b2 = function () {\n        this.by();\n        this.b4();\n        this.b3();\n        this.bw();\n        this.au.z();\n    };\n    XamDoughnutChart.prototype.b4 = function () {\n        var e_13, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.series)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.cp();\n            }\n        }\n        catch (e_13_1) {\n            e_13 = { error: e_13_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_13)\n                    throw e_13.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bw = function () {\n        var a = this.au.ab;\n        if (a.isEmpty || a.width == 0 || a.height == 0) {\n            return;\n        }\n        var b = { $type: Point_$type, x: a.width / 2, y: a.height / 2 };\n        var c = Math.min(a.width / 2, a.height / 2);\n        var d = 0.9;\n        if (this.series.count > 0) {\n            d = this.series._inner[0].a3;\n            if (isNaN_(d) || isInfinity(d) || d < 0) {\n                d = 0;\n            }\n            else if (d > 1) {\n                d = 1;\n            }\n        }\n        var e = this.a3 * c / 100 * d;\n        this.au.x(e * 2, e * 2);\n        this.au.u(b.x - e, b.y - e);\n    };\n    XamDoughnutChart.prototype.b3 = function () {\n        var e_14, _a, e_15, _b;\n        var a = false;\n        try {\n            for (var _c = tslib_1.__values(fromEnum(this.aj)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var b = _d.value;\n                if (b.f()) {\n                    a = true;\n                }\n            }\n        }\n        catch (e_14_1) {\n            e_14 = { error: e_14_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_14)\n                    throw e_14.error;\n            }\n        }\n        if (a) {\n            try {\n                for (var _e = tslib_1.__values(fromEnum(this.aj)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var c = _f.value;\n                    c.c.as.l();\n                }\n            }\n            catch (e_15_1) {\n                e_15 = { error: e_15_1 };\n            }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return))\n                        _b.call(_e);\n                }\n                finally {\n                    if (e_15)\n                        throw e_15.error;\n                }\n            }\n        }\n    };\n    XamDoughnutChart.prototype.by = function () {\n        var e_16, _a;\n        var a = this.au.ab;\n        if (a.isEmpty || a.width == 0 || a.height == 0) {\n            return;\n        }\n        var b = { $type: Point_$type, x: a.width / 2, y: a.height / 2 };\n        var c = Math.min(a.width / 2, a.height / 2);\n        var d = Math.max(a.width / 2, a.height / 2);\n        if (a.width > a.height) {\n            c = c + d;\n            d = c - d;\n            c = c - d;\n        }\n        var e = ((100 - this.a3) / 100 * c) / this.aj.count;\n        var f = ((100 - this.a3) / 100 * d) / this.aj.count;\n        var g = this.a3 * c / 100;\n        var h = this.a3 * d / 100;\n        var i = 1;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.aj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var j = _c.value;\n                var k = (g + (e * i));\n                var l = (h + (f * i));\n                j.i = e;\n                j.q = new Size(1, k * 2, l * 2);\n                j.p = { $type: Point_$type, x: b.x - k, y: b.y - l };\n                j.h = 100 - (e / k * 100);\n                j.o();\n                i++;\n            }\n        }\n        catch (e_16_1) {\n            e_16 = { error: e_16_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_16)\n                    throw e_16.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bx = function () {\n        var e_17, _a;\n        this.aq.clear();\n        this.ar.clear();\n        this.aj.clear();\n        this.au.j();\n        this.au.i();\n        var a = 0;\n        for (var b = 0; b < this.series.count; b++) {\n            var c = this.series._inner[b];\n            c.at = this;\n            this.au.h(c);\n            var series_ = c;\n            series_.externalObject.sychronizeCollections();\n            var d = c.aq();\n            try {\n                for (var _b = (e_17 = void 0, tslib_1.__values(fromEnum(d))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var e = _c.value;\n                    e.d = this;\n                    e.j = a;\n                    this.aj.add(e);\n                    a++;\n                }\n            }\n            catch (e_17_1) {\n                e_17 = { error: e_17_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_17)\n                        throw e_17.error;\n                }\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bt = function () {\n        if (this.au != null) {\n            this.height = this.au.ab.height;\n            this.width = this.au.ab.width;\n        }\n        this.b2();\n    };\n    XamDoughnutChart.prototype.bu = function (a, b) {\n        var c = a;\n        var d = c.he.c;\n        if (d.ay) {\n            return;\n        }\n        if (this.sliceClick != null) {\n            this.sliceClick(a, b);\n        }\n    };\n    XamDoughnutChart.prototype.b1 = function (a, b, c) {\n        if (this.propertyChanged != null) {\n            this.propertyChanged(this, new PropertyChangedEventArgs(a));\n        }\n        if (this.propertyUpdated != null) {\n            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));\n        }\n    };\n    XamDoughnutChart.prototype.onDetachedFromUI = function () {\n        var e_18, _a, e_19, _b;\n        this.au.r();\n        for (var a = 0; a < this.aj.count; a++) {\n            try {\n                for (var _c = (e_18 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.a))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var b = _d.value;\n                    b.onDetachedFromUI();\n                }\n            }\n            catch (e_18_1) {\n                e_18 = { error: e_18_1 };\n            }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return))\n                        _a.call(_c);\n                }\n                finally {\n                    if (e_18)\n                        throw e_18.error;\n                }\n            }\n            try {\n                for (var _e = (e_19 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.b))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var c = _f.value;\n                    c.onDetachedFromUI();\n                }\n            }\n            catch (e_19_1) {\n                e_19 = { error: e_19_1 };\n            }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return))\n                        _b.call(_e);\n                }\n                finally {\n                    if (e_19)\n                        throw e_19.error;\n                }\n            }\n        }\n    };\n    XamDoughnutChart.prototype.onAttachedToUI = function () {\n        var e_20, _a, e_21, _b;\n        this.au.q();\n        for (var a = 0; a < this.aj.count; a++) {\n            try {\n                for (var _c = (e_20 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.a))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var b = _d.value;\n                    b.onAttachedToUI();\n                }\n            }\n            catch (e_20_1) {\n                e_20 = { error: e_20_1 };\n            }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return))\n                        _a.call(_c);\n                }\n                finally {\n                    if (e_20)\n                        throw e_20.error;\n                }\n            }\n            try {\n                for (var _e = (e_21 = void 0, tslib_1.__values(fromEnum(this.aj._inner[a].ringControl.arcs.b))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var c = _f.value;\n                    c.onAttachedToUI();\n                }\n            }\n            catch (e_21_1) {\n                e_21 = { error: e_21_1 };\n            }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return))\n                        _b.call(_e);\n                }\n                finally {\n                    if (e_21)\n                        throw e_21.error;\n                }\n            }\n        }\n    };\n    XamDoughnutChart.prototype.provideContainer = function (a) {\n        this.au.v(a);\n    };\n    XamDoughnutChart.prototype.notifyResized = function () {\n        this.au.y();\n    };\n    XamDoughnutChart.prototype.bd = function () {\n        return this.au.g();\n    };\n    XamDoughnutChart.prototype.cf = function () {\n        return this.au.aa;\n    };\n    XamDoughnutChart.prototype.a2 = function () {\n        return this.au.d;\n    };\n    XamDoughnutChart.prototype.bk = function () {\n        var a;\n        var b;\n        for (var c = 0; c < this.series.count; c++) {\n            b = this.series._inner[c].aq();\n            for (var d = 0; d < b.count; d++) {\n                a = b._inner[d].ringControl.ak.h();\n                for (var e = 0; e < a.count; e++) {\n                    a._inner[e].el();\n                }\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bs = function () {\n        if (this.holeDimensionsChanged != null) {\n            this.holeDimensionsChanged(this, new HoleDimensionsChangedEventArgs(this.cf(), this.a2()));\n        }\n    };\n    XamDoughnutChart.prototype.as = function () {\n        var a = new DoughnutChartVisualData();\n        a.series = new RingSeriesVisualDataList();\n        a.viewport = RectData.b(this.au.ab);\n        this.au.o(a);\n        return a;\n    };\n    XamDoughnutChart.prototype.bc = function () {\n        var a = this.as();\n        a.scaleByViewport();\n        return a.serialize();\n    };\n    XamDoughnutChart.prototype._ay = function (a) {\n        var _a, _b, b, e_22_1;\n        var e_22, _c;\n        return tslib_1.__generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 5, 6, 7]);\n                    _a = tslib_1.__values(fromEnum(this.series)), _b = _a.next();\n                    _d.label = 1;\n                case 1:\n                    if (!!_b.done)\n                        return [3 /*break*/, 4];\n                    b = _b.value;\n                    if (!PieChartBase.by(a, b.itemsSource))\n                        return [3 /*break*/, 3];\n                    return [4 /*yield*/, b];\n                case 2:\n                    _d.sent();\n                    _d.label = 3;\n                case 3:\n                    _b = _a.next();\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 7];\n                case 5:\n                    e_22_1 = _d.sent();\n                    e_22 = { error: e_22_1 };\n                    return [3 /*break*/, 7];\n                case 6:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return))\n                            _c.call(_a);\n                    }\n                    finally {\n                        if (e_22)\n                            throw e_22.error;\n                    }\n                    return [7 /*endfinally*/];\n                case 7: return [2 /*return*/];\n            }\n        });\n    };\n    XamDoughnutChart.prototype.ay = function (a) {\n        var _this = this;\n        return toEnum(function () { return _this._ay(a); });\n    };\n    XamDoughnutChart.prototype.bm = function (source_, a, b) {\n        var e_23, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                c.cf(a, b);\n            }\n        }\n        catch (e_23_1) {\n            e_23 = { error: e_23_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_23)\n                    throw e_23.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bp = function (source_, a, b, c) {\n        var e_24, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var d = _c.value;\n                d.ch(a, b, c);\n            }\n        }\n        catch (e_24_1) {\n            e_24 = { error: e_24_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_24)\n                    throw e_24.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bl = function (source_) {\n        var e_25, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.ce();\n            }\n        }\n        catch (e_25_1) {\n            e_25 = { error: e_25_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_25)\n                    throw e_25.error;\n            }\n        }\n    };\n    XamDoughnutChart.prototype.bn = function (source_, a, b) {\n        var e_26, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.ay(source_))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                c.cg(a, b);\n            }\n        }\n        catch (e_26_1) {\n            e_26 = { error: e_26_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_26)\n                    throw e_26.error;\n            }\n        }\n    };\n    XamDoughnutChart.$t = markType(XamDoughnutChart, 'XamDoughnutChart', Control.$, [INotifyPropertyChanged_$type, ILegendOwner_$type]);\n    XamDoughnutChart.cc = DependencyProperty.i(\"InnerExtent\", Number_$type, XamDoughnutChart.$, new PropertyMetadata(2, 40, function (a, b) {\n        var c = b.newValue;\n        if (c < 0 || c > 100) {\n            if (b.oldValue != null) {\n                a.a3 = b.oldValue;\n            }\n            return;\n        }\n        a.b2();\n        a.b1(\"InnerExtent\", b.oldValue, b.newValue);\n    }));\n    XamDoughnutChart.$$p = markDep(DependencyProperty, PropertyMetadata, XamDoughnutChart, 'b1', ['AllowSliceExplosion:av:b8', [0, true], 'AllowSliceSelection:aw:b9', [0, true], 'CenterData:a5:ca', [4, null], 'CenterDataTemplate:b7:cb', [DataTemplate.$, null], 'IsSurfaceInteractionDisabled:ax:cd', [0, false], 'SelectedStyle:cg:ce', [Style.$, null]]);\n    return XamDoughnutChart;\n}(Control));\nexport { XamDoughnutChart };\n/**\n * @hidden\n */\nvar ArcView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArcView, _super);\n    function ArcView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.b4 = null;\n        _this.b4 = a;\n        return _this;\n    }\n    ArcView.prototype.b6 = function (a, b) {\n        this.e.series = this.b4.he.c;\n    };\n    ArcView.prototype.b5 = function () {\n        return this.f;\n    };\n    ArcView.prototype.b7 = function () {\n        this.bb();\n        this.bs = new Brush();\n        var a = this.c.t();\n        this.bs._fill = a.rootWrapper.getStyleProperty(\"color\");\n    };\n    ArcView.$t = markType(ArcView, 'ArcView', PieChartBaseView.$);\n    return ArcView;\n}(PieChartBaseView));\nexport { ArcView };\n/**\n * @hidden\n */\nvar RingControlView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingControlView, _super);\n    function RingControlView(a) {\n        var _this = _super.call(this) || this;\n        _this.b = null;\n        _this.f = new List$1(Arc.$, 0);\n        _this.g = new List$1(Arc.$, 0);\n        _this.i = null;\n        _this.e = new Dictionary$2(Arc.$, DomRenderer_$type, 0);\n        _this.c = null;\n        _this.b = a;\n        return _this;\n    }\n    RingControlView.prototype.a = function () {\n        var a = new Arc();\n        a.o = 0;\n        a.n = 0;\n        a.he = this.b.ai;\n        this.f.add(a);\n        this.z(a);\n        if (a.eb != this.b.al.b5) {\n            a.eb = this.b.al.b5;\n        }\n        a.cm = this.b.al.a0;\n        a.at = this.b.al.am;\n        a.di = this.b.al.bg;\n        a.ao = this.b.al.aj;\n        a.fu = this.b.al.cr;\n        a.eg = this.b.al.b9;\n        if (this.b.al.toolTip != null) {\n            a.c0 = this.b.al.toolTip;\n        }\n        a.ha = this.b.al.dw;\n        a.g6 = this.b.al.dr;\n        a.ap = this.b.al.ak;\n        a.cn = this.b.al.a1;\n        a.co = this.b.al.a2;\n        a.aq = this.b.al.al;\n        a.dz = this.b.al.bv;\n        a.g7 = this.b.al.ds;\n        a.legend = this.b.al.legend;\n        a.legendItemTemplate = this.b.al.legendItemTemplate;\n        a.legendItemBadgeTemplate = this.b.al.legendItemBadgeTemplate;\n        a.ah = this.b.al.ah;\n        a.gx = this.b.al.dn;\n        a.gy = this.b.al.dp;\n        a.ct = this.b.al.a4;\n        a.ag = this.b.al.ag;\n        a.g8 = this.b.al.du;\n        a.bv = true;\n        a.cr = this.b.al.a3;\n        a.bp = this.b.al.at.av;\n        a.bq = this.b.al.at.aw;\n        a.au = this.b.al.an;\n        a.dv = this.b.al.br;\n        a.cd = this.b.al.at.a1;\n        return a;\n    };\n    RingControlView.prototype.l = function (a) {\n        var b = this.e.item(a).rootWrapper;\n        if (b != null) {\n            b.show();\n        }\n        this.g.add(a);\n    };\n    RingControlView.prototype.n = function (a) {\n        var b = this.e.item(a).rootWrapper;\n        if (b != null) {\n            b.hide();\n        }\n        this.g.remove(a);\n    };\n    RingControlView.prototype.m = function (a) {\n        this.o(a);\n        this.f.remove(a);\n    };\n    RingControlView.prototype.h = function () {\n        return this.f;\n    };\n    RingControlView.prototype.r = function () {\n    };\n    RingControlView.prototype.aa = function () {\n        this.b.aw();\n    };\n    RingControlView.prototype.t = function (a, b, c) {\n        b = b + this.b.n;\n        c = c + this.b.o;\n        if (this.c != null) {\n            b = b + this.c.n;\n            c = c + this.c.o;\n        }\n        if (a.n != b || a.o != c) {\n            a.n = b;\n            a.o = c;\n            this.u(a, this.e.item(a).rootWrapper);\n        }\n    };\n    RingControlView.prototype.w = function (a) {\n        var e_27, _a, e_28, _b;\n        if (a == null) {\n            this.b.arcs.count = 0;\n            try {\n                for (var _c = tslib_1.__values(fromEnum(this.f)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var b = _d.value;\n                    b.destroy();\n                }\n            }\n            catch (e_27_1) {\n                e_27 = { error: e_27_1 };\n            }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return))\n                        _a.call(_c);\n                }\n                finally {\n                    if (e_27)\n                        throw e_27.error;\n                }\n            }\n            this.f.clear();\n            this.e.clear();\n            this.g.clear();\n            return;\n        }\n        this.i = a;\n        this.i.rootWrapper.setStyleProperty(\"position\", \"relative\");\n        try {\n            for (var _e = tslib_1.__values(fromEnum(this.f)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var c = _f.value;\n                var d = this.e.item(c);\n                this.i.append(d.rootWrapper);\n                c.hc.b7();\n            }\n        }\n        catch (e_28_1) {\n            e_28 = { error: e_28_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_28)\n                    throw e_28.error;\n            }\n        }\n        this.aa();\n    };\n    RingControlView.prototype.z = function (a) {\n        var b = this.i.createElement(\"div\");\n        b.setStyleProperty(\"position\", \"absolute\");\n        this.e.addItem(a, this.i.getSubRenderer(b));\n        this.k(a, b);\n        this.u(a, b);\n        if (this.i != null) {\n            this.i.append(b);\n        }\n        a.provideContainer(this.e.item(a));\n        b.setStyleProperty(\"position\", \"absolute\");\n    };\n    RingControlView.prototype.k = function (a, b) {\n        b.setStyleProperty(\"width\", a.width.toString() + \"px\");\n        b.setStyleProperty(\"height\", a.height.toString() + \"px\");\n    };\n    RingControlView.prototype.u = function (a, b) {\n        b.setStyleProperty(\"top\", a.o.toString() + \"px\");\n        b.setStyleProperty(\"left\", a.n.toString() + \"px\");\n    };\n    RingControlView.prototype.o = function (a) {\n        var b = this.e.item(a);\n        b.rootWrapper.remove();\n        this.e.removeItem(a);\n        a.provideContainer(null);\n    };\n    RingControlView.prototype.ab = function (a) {\n        this.k(a, a.hj().rootWrapper);\n        a.ew(a.width, a.height);\n    };\n    RingControlView.prototype.d = function () {\n        return this.i != null;\n    };\n    RingControlView.prototype.q = function () {\n    };\n    RingControlView.prototype.s = function (a) {\n        this.c = a;\n        if (a != null) {\n            a.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.y));\n        }\n    };\n    RingControlView.prototype.y = function (a, b) {\n        switch (b.propertyName) {\n            case \"LabelExtent\":\n                for (var c = 0; c < this.f.count; c++) {\n                    this.f._inner[c].cm = b.newValue;\n                }\n                break;\n            case \"LabelMemberPath\":\n                for (var d = 0; d < this.f.count; d++) {\n                    this.f._inner[d].di = b.newValue;\n                }\n                break;\n            case \"LabelsPosition\":\n                for (var e = 0; e < this.f.count; e++) {\n                    this.f._inner[e].ao = EnumUtil.getEnumValue(LabelsPosition_$type, b.newValue);\n                }\n                break;\n            case \"LabelTemplate\":\n                for (var f = 0; f < this.f.count; f++) {\n                    this.f._inner[f].fu = b.newValue;\n                }\n                break;\n            case \"ValueMemberPath\":\n                for (var g = 0; g < this.f.count; g++) {\n                    this.f._inner[g].eg = b.newValue;\n                }\n                break;\n            case \"ToolTip\":\n                for (var h = 0; h < this.f.count; h++) {\n                    this.f._inner[h].c0 = b.newValue;\n                }\n                break;\n            case \"LeaderLineVisibility\":\n                for (var i = 0; i < this.f.count; i++) {\n                    this.f._inner[i].ha = EnumUtil.getEnumValue(Visibility_$type, b.newValue);\n                }\n                break;\n            case \"LeaderLineStyle\":\n                for (var j = 0; j < this.f.count; j++) {\n                    this.f._inner[j].g6 = b.newValue;\n                }\n                break;\n            case \"LeaderLineType\":\n                for (var k = 0; k < this.f.count; k++) {\n                    this.f._inner[k].ap = EnumUtil.getEnumValue(LeaderLineType_$type, b.newValue);\n                }\n                break;\n            case \"LeaderLineMargin\":\n                for (var l = 0; l < this.f.count; l++) {\n                    this.f._inner[l].cn = b.newValue;\n                }\n                break;\n            case \"OthersCategoryThreshold\":\n                for (var m = 0; m < this.f.count; m++) {\n                    this.f._inner[m].co = b.newValue;\n                }\n                break;\n            case \"OthersCategoryType\":\n                for (var n = 0; n < this.f.count; n++) {\n                    this.f._inner[n].aq = EnumUtil.getEnumValue(OthersCategoryType_$type, b.newValue);\n                }\n                break;\n            case \"OthersCategoryText\":\n                for (var o = 0; o < this.f.count; o++) {\n                    this.f._inner[o].dz = b.newValue;\n                }\n                break;\n            case \"OthersCategoryStyle\":\n                for (var p = 0; p < this.f.count; p++) {\n                    this.f._inner[p].g7 = b.newValue;\n                }\n                break;\n            case \"Legend\":\n                for (var q = 0; q < this.f.count; q++) {\n                    this.f._inner[q].legend = b.newValue;\n                }\n                break;\n            case \"LegendItemTemplate\":\n                for (var r = 0; r < this.f.count; r++) {\n                    this.f._inner[r].legendItemTemplate = b.newValue;\n                }\n                break;\n            case \"LegendItemBadgeTemplate\":\n                for (var s = 0; s < this.f.count; s++) {\n                    this.f._inner[s].legendItemBadgeTemplate = b.newValue;\n                }\n                break;\n            case \"Outlines\":\n                for (var t = 0; t < this.f.count; t++) {\n                    this.f._inner[t].ah = b.newValue;\n                }\n                break;\n            case \"Brushes\":\n                for (var u = 0; u < this.f.count; u++) {\n                    this.f._inner[u].ag = b.newValue;\n                }\n                break;\n            case \"SelectedStyle\":\n                for (var v = 0; v < this.f.count; v++) {\n                    this.f._inner[v].g8 = b.newValue;\n                }\n                break;\n            case \"SelectedStyleResolved\":\n                for (var w = 0; w < this.f.count; w++) {\n                    this.f._inner[w].g8 = b.newValue;\n                }\n                break;\n            case \"RadiusFactor\":\n                for (var x = 0; x < this.f.count; x++) {\n                    this.f._inner[x].cr = b.newValue;\n                }\n                break;\n        }\n    };\n    RingControlView.prototype.p = function () {\n        var e_29, _a;\n        try {\n            for (var _b = tslib_1.__values(fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var a = _c.value;\n                a.el();\n            }\n        }\n        catch (e_29_1) {\n            e_29 = { error: e_29_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_29)\n                    throw e_29.error;\n            }\n        }\n    };\n    RingControlView.prototype.j = function () {\n        return this.i;\n    };\n    RingControlView.prototype.v = function (a, b) {\n        this.b.n = a;\n        this.b.o = b;\n        this.x();\n    };\n    RingControlView.prototype.x = function () {\n        for (var a = 0; a < this.f.count; a++) {\n            var b = this.f._inner[a];\n            this.t(b, 0, 0);\n        }\n    };\n    RingControlView.$t = markType(RingControlView, 'RingControlView');\n    return RingControlView;\n}(Base));\nexport { RingControlView };\n/**\n * @hidden\n */\nvar RingSeriesBaseView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RingSeriesBaseView, _super);\n    function RingSeriesBaseView(a) {\n        var _this = _super.call(this) || this;\n        _this.c = null;\n        _this.f = null;\n        _this.g = null;\n        _this.a = null;\n        _this.b = null;\n        _this.o = null;\n        _this.d = null;\n        _this.f = new List$1(RingControl.$, 0);\n        _this.c = a;\n        return _this;\n    }\n    RingSeriesBaseView.prototype.k = function () {\n        this.c.legendItemTemplate = ((function () {\n            var $ret = new DataTemplate();\n            $ret.render = PieLegendTemplates.c;\n            $ret.measure = PieLegendTemplates.a;\n            return $ret;\n        })());\n        this.c.legendItemBadgeTemplate = ((function () {\n            var $ret = new DataTemplate();\n            $ret.render = PieLegendTemplates.b;\n            $ret.measure = PieLegendTemplates.d;\n            return $ret;\n        })());\n    };\n    RingSeriesBaseView.prototype.h = function (a) {\n        if (!this.f.contains(a)) {\n            this.f.add(a);\n        }\n        if (this.g != null && (a.ap() != this.g)) {\n            a.ay(this.g);\n        }\n    };\n    RingSeriesBaseView.prototype.j = function (a, b, c, d, e) {\n        var f = BrushUtil.d(\"chart\", a, b, c);\n        b = f.p2;\n        c = f.p3;\n        var g = new Array(b.count * 2);\n        for (var h = 0; h < g.length; h += 2) {\n            g[h] = \"#fff\";\n            g[h + 1] = b.item(intDivide(h, 2))._fill;\n        }\n        var i = BrushUtil.d(\"doughnut\", a, b, c, g);\n        b = i.p2;\n        c = i.p3;\n        d = new Brush();\n        d._fill = this.g.rootWrapper.getStyleProperty(\"color\");\n        e = FontUtil.getFont(a);\n        return {\n            p1: b,\n            p2: c,\n            p3: d,\n            p4: e\n        };\n    };\n    RingSeriesBaseView.prototype.n = function (a) {\n        var e_30, _a, e_31, _b;\n        if (a == null) {\n            try {\n                for (var _c = tslib_1.__values(fromEnum(this.f)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var b = _d.value;\n                    b.ay(null);\n                }\n            }\n            catch (e_30_1) {\n                e_30 = { error: e_30_1 };\n            }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return))\n                        _a.call(_c);\n                }\n                finally {\n                    if (e_30)\n                        throw e_30.error;\n                }\n            }\n            return;\n        }\n        this.g = a;\n        var c;\n        var d;\n        var e;\n        var f;\n        var g = this.j(this.g, c, d, e, f);\n        c = g.p1;\n        d = g.p2;\n        e = g.p3;\n        f = g.p4;\n        this.a = c;\n        this.b = d;\n        this.o = e;\n        this.d = f;\n        if (this.c.ag == null) {\n            this.c.ag = this.a;\n        }\n        if (this.c.ah == null) {\n            this.c.ah = this.b;\n        }\n        try {\n            for (var _e = tslib_1.__values(fromEnum(this.f)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var h = _f.value;\n                h.ay(this.g);\n            }\n        }\n        catch (e_31_1) {\n            e_31 = { error: e_31_1 };\n        }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return))\n                    _b.call(_e);\n            }\n            finally {\n                if (e_31)\n                    throw e_31.error;\n            }\n        }\n    };\n    RingSeriesBaseView.prototype.e = function () {\n        return true;\n    };\n    RingSeriesBaseView.prototype.i = function () {\n        this.n(null);\n    };\n    RingSeriesBaseView.prototype.l = function () {\n        for (var a = 0; a < this.f.count; a++) {\n            var b = this.f._inner[a];\n            for (var c = 0; c < b.arcs.a.count; c++) {\n                var d = b.arcs.a._inner[c];\n                d.el();\n            }\n        }\n    };\n    RingSeriesBaseView.prototype.m = function (a, b) {\n        this.c.n = a;\n        this.c.o = b;\n        this.c.dq = { $type: Point_$type, x: a, y: b };\n    };\n    RingSeriesBaseView.$t = markType(RingSeriesBaseView, 'RingSeriesBaseView');\n    return RingSeriesBaseView;\n}(Base));\nexport { RingSeriesBaseView };\n/**\n * @hidden\n */\nvar XamDoughnutChartView = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(XamDoughnutChartView, _super);\n    function XamDoughnutChartView(a) {\n        var _this = _super.call(this) || this;\n        _this.a = null;\n        _this.aa = null;\n        _this.d = 0;\n        _this.c = null;\n        _this.ab = null;\n        _this.f = null;\n        _this.e = null;\n        _this.b = null;\n        _this.ab = Rect.empty;\n        _this.aa = { $type: Point_$type, x: 0, y: 0 };\n        _this.d = 0;\n        _this.c = new List$1(RingSeriesBase.$, 0);\n        _this.a = a;\n        return _this;\n    }\n    XamDoughnutChartView.prototype.s = function () {\n        this.p();\n    };\n    XamDoughnutChartView.prototype.z = function () {\n    };\n    XamDoughnutChartView.prototype.h = function (a) {\n        if (!this.c.contains(a)) {\n            a.cm(this.e);\n            this.c.add(a);\n        }\n    };\n    XamDoughnutChartView.prototype.w = function (a) {\n        if (this.c.contains(a)) {\n            a.cm(null);\n            this.c.remove(a);\n        }\n    };\n    XamDoughnutChartView.prototype.i = function () {\n    };\n    XamDoughnutChartView.prototype.y = function () {\n        if (this.e == null) {\n            return;\n        }\n        this.p();\n        var a = this.e.rootWrapper.width();\n        var b = this.e.rootWrapper.height();\n        this.ab = new Rect(0, 0, 0, a, b);\n        if (this.b != null) {\n            this.b.bf = this.ab;\n        }\n        this.a.bt();\n    };\n    XamDoughnutChartView.prototype.v = function (a) {\n        if (a == null) {\n            if (this.b != null) {\n                this.b.aq();\n            }\n            return;\n        }\n        var b = a;\n        this.e = b;\n        var c = this.e.rootWrapper.width();\n        var d = this.e.rootWrapper.height();\n        this.ab = new Rect(0, 0, 0, c, d);\n        this.b = new DOMEventProxy(this.e.rootWrapper, this.e, false);\n        this.b.bf = this.ab;\n        var e = this.b;\n        e.onMouseOver = delegateCombine(e.onMouseOver, runOn(this, this.m));\n        var f = this.b;\n        f.onMouseLeave = delegateCombine(f.onMouseLeave, runOn(this, this.l));\n        var g = this.b;\n        g.onMouseDown = delegateCombine(g.onMouseDown, runOn(this, this.k));\n        var h = this.b;\n        h.onMouseUp = delegateCombine(h.onMouseUp, runOn(this, this.n));\n        this.y();\n    };\n    XamDoughnutChartView.prototype.t = function (a, b, c) {\n        for (var d = this.c.count - 1; d >= 0; d--) {\n            var e = this.c._inner[d];\n            if (e.ay) {\n                continue;\n            }\n            var f = e.as.f;\n            for (var g = 0; g < f.count; g++) {\n                var h = f._inner[g];\n                var i = h.arcs.a;\n                for (var j = 0; j < i.count; j++) {\n                    var k = i._inner[j];\n                    var l = { $type: Point_$type, x: a.x - k.n, y: a.y - k.o };\n                    b(k.as, l);\n                    if (c == \"mouseUp\") {\n                        var m = k.hc.b5();\n                        if (m != null) {\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    XamDoughnutChartView.prototype.n = function (a) {\n        this.t(a, function (b, c) { return b.ak(c); }, \"mouseUp\");\n    };\n    XamDoughnutChartView.prototype.k = function (a) {\n        this.t(a, function (b, c) { return b.ah(c); }, \"mouseDown\");\n    };\n    XamDoughnutChartView.prototype.l = function (a) {\n        this.t(a, function (b, c) { return b.ai(c); }, \"mouseLeave\");\n    };\n    XamDoughnutChartView.prototype.m = function (a, b, c) {\n        this.t(a, function (d, e) { return d.aj(e, b, c); }, \"mouseOver\");\n    };\n    XamDoughnutChartView.prototype.g = function () {\n        return this.e.rootWrapper.getAttribute(\"id\");\n    };\n    XamDoughnutChartView.prototype.u = function (a, b) {\n        if (!this.ab.isEmpty && this.ab.width != 0 && this.ab.height != 0) {\n            var c = this.aa.x;\n            var d = this.aa.y;\n            this.aa.x = this.ab.width / 2;\n            this.aa.y = this.ab.height / 2;\n            if (this.aa.x != c || this.aa.y != d) {\n                this.a.bs();\n            }\n        }\n    };\n    XamDoughnutChartView.prototype.x = function (a, b) {\n        var c = this.d;\n        this.d = a / 2;\n        if (c != this.d) {\n            this.a.bs();\n        }\n    };\n    XamDoughnutChartView.prototype.j = function () {\n    };\n    XamDoughnutChartView.prototype.o = function (a) {\n        a.width = this.a.width;\n        a.height = this.a.height;\n        a.holeRadius = this.a.a2();\n        for (var b = 0; b < this.a.series.count; b++) {\n            a.series.add(new RingSeriesVisualData());\n            a.series._inner[b].rings = new RingVisualDataList();\n            a.series._inner[b].name = this.a.series._inner[b].name;\n            a.series._inner[b].labelExtent = this.a.series._inner[b].a0;\n            a.series._inner[b].leaderLineMargin = this.a.series._inner[b].a1;\n            a.series._inner[b].leaderLineType = EnumUtil.getName(LeaderLineType_$type, this.a.series._inner[b].ak);\n            a.series._inner[b].labelsPosition = EnumUtil.getName(LabelsPosition_$type, this.a.series._inner[b].aj);\n            a.series._inner[b].leaderLineVisibility = this.a.series._inner[b].dw == 0;\n            for (var c = 0; c < this.a.series._inner[b].aq().count; c++) {\n                a.series._inner[b].rings.add(new RingVisualData());\n                a.series._inner[b].rings._inner[c].arcs = new ArcVisualDataList();\n                for (var d = 0; d < this.a.series._inner[b].aq()._inner[c].g.count; d++) {\n                    a.series._inner[b].rings._inner[c].arcs.add(new ArcVisualData());\n                    a.series._inner[b].rings._inner[c].arcs._inner[d].a = new SliceVisualDataList();\n                    var _loop_4 = function (e) {\n                        if (null == this_4.a.series._inner[b].aq()._inner[c].g._inner[d].g._inner[e].b) {\n                            return \"continue\";\n                        }\n                        a.series._inner[b].rings._inner[c].arcs._inner[d].a.add(new SliceVisualData());\n                        var f = new SliceVisualData();\n                        var g = this_4.a.series._inner[b].aq()._inner[c].g._inner[d].g._inner[e].b;\n                        f.visibility = g._visibility == 0;\n                        f.endAngle = g.ax;\n                        f.startAngle = g.a3;\n                        f.radius = g.a2;\n                        f.origin = PointData.b(g.b7);\n                        f.explodedOrigin = PointData.b(g.b5);\n                        f.index = g.a5;\n                        f.isExploded = g.isExploded;\n                        f.isSelected = g.isSelected;\n                        f.outline = AppearanceHelper.a(g.b1);\n                        f.backgroundPath = new PathVisualData(1, \"slicePath\", g.al.f());\n                        a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e] = f;\n                        var h = g.aj;\n                        if (null != h) {\n                            a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e].labelVisualData = ((function () {\n                                var $ret = new DoughnutChartLabelVisualData();\n                                $ret.labelSize = SizeData.b(RectUtil.z(h.ao));\n                                $ret.labelValue = h.aj.ak;\n                                return $ret;\n                            })());\n                            if (!isNaN_(h.n) && !isNaN_(h.o)) {\n                                a.series._inner[b].rings._inner[c].arcs._inner[d].a._inner[e].labelVisualData.labelPosition = new PointData(h.n, h.o);\n                            }\n                        }\n                    };\n                    var this_4 = this;\n                    for (var e = 0; e < this.a.series._inner[b].aq()._inner[c].g._inner[d].g.count; e++) {\n                        _loop_4(e);\n                    }\n                }\n            }\n        }\n    };\n    XamDoughnutChartView.prototype.p = function () {\n        var a = this.a.a4;\n        var b = this.a.a1;\n        if (!isNaN_(a) && a != 0) {\n            return;\n        }\n        if (window.devicePixelRatio != undefined && window.devicePixelRatio != b) {\n            this.a.a1 = window.devicePixelRatio;\n        }\n    };\n    XamDoughnutChartView.prototype.r = function () {\n        if (this.b != null) {\n            this.b.bb(this.e.rootWrapper, \"\");\n        }\n    };\n    XamDoughnutChartView.prototype.q = function () {\n        this.p();\n        if (this.b != null) {\n            this.b.ap(this.e.rootWrapper, \"\");\n        }\n    };\n    XamDoughnutChartView.$t = markType(XamDoughnutChartView, 'XamDoughnutChartView');\n    return XamDoughnutChartView;\n}(Base));\nexport { XamDoughnutChartView };\n//# sourceMappingURL=Arc_combined.js.map\n"]},"metadata":{},"sourceType":"module"}