{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\nimport { PositiveVolumeIndexIndicatorStrategy } from \"./PositiveVolumeIndexIndicatorStrategy\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PositiveVolumeIndexIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PositiveVolumeIndexIndicator, _super);\n\n  function PositiveVolumeIndexIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PositiveVolumeIndexIndicator.prototype.get_qc = function () {\n    return new PositiveVolumeIndexIndicatorStrategy();\n  };\n\n  Object.defineProperty(PositiveVolumeIndexIndicator.prototype, \"qc\", {\n    get: function () {\n      return this.get_qc();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PositiveVolumeIndexIndicator.prototype.get_qp = function () {\n    return PositiveVolumeIndexIndicator.$;\n  };\n\n  Object.defineProperty(PositiveVolumeIndexIndicator.prototype, \"qp\", {\n    get: function () {\n      return this.get_qp();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PositiveVolumeIndexIndicator.$t = markType(PositiveVolumeIndexIndicator, 'PositiveVolumeIndexIndicator', StrategyBasedIndicator.$);\n  return PositiveVolumeIndexIndicator;\n}(StrategyBasedIndicator);\n\nexport { PositiveVolumeIndexIndicator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PositiveVolumeIndexIndicator.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,sBAAT,QAAuC,0BAAvC;AAEA,SAAS,oCAAT,QAAqD,wCAArD;AACA,SAAqB,QAArB,QAAqC,qBAArC;AAEA;;;;AAGA,IAAA,4BAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,OAAA,CAAA,SAAA,CAAA,4BAAA,EAAA,MAAA;;AAAlD,WAAA,4BAAA,GAAA;;AAcC;;AAZU,EAAA,4BAAA,CAAA,SAAA,CAAA,MAAA,GAAV,YAAA;AACC,WAAO,IAAI,oCAAJ,EAAP;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAc,4BAAA,CAAA,SAAd,EAAc,IAAd,EAAgB;SAAhB,YAAA;AACC,aAAO,KAAK,MAAL,EAAP;AACA,KAFe;oBAAA;;AAAA,GAAhB;;AAGU,EAAA,4BAAA,CAAA,SAAA,CAAA,MAAA,GAAV,YAAA;AACC,WAAa,4BAA6B,CAAC,CAA3C;AACA,GAFS;;AAGV,EAAA,MAAA,CAAA,cAAA,CAAc,4BAAA,CAAA,SAAd,EAAc,IAAd,EAAgB;SAAhB,YAAA;AACC,aAAO,KAAK,MAAL,EAAP;AACA,KAFe;oBAAA;;AAAA,GAAhB;AAVO,EAAA,4BAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,4BAAD,EAA+B,8BAA/B,EAAqE,sBAAuB,CAAC,CAA7F,CAAnB;AAaR,SAAA,4BAAA;AAAC,CAdD,CAAkD,sBAAlD,CAAA;;SAAa,4B","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\nimport { PositiveVolumeIndexIndicatorStrategy } from \"./PositiveVolumeIndexIndicatorStrategy\";\nimport { markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PositiveVolumeIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PositiveVolumeIndexIndicator, _super);\n    function PositiveVolumeIndexIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PositiveVolumeIndexIndicator.prototype.get_qc = function () {\n        return new PositiveVolumeIndexIndicatorStrategy();\n    };\n    Object.defineProperty(PositiveVolumeIndexIndicator.prototype, \"qc\", {\n        get: function () {\n            return this.get_qc();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PositiveVolumeIndexIndicator.prototype.get_qp = function () {\n        return PositiveVolumeIndexIndicator.$;\n    };\n    Object.defineProperty(PositiveVolumeIndexIndicator.prototype, \"qp\", {\n        get: function () {\n            return this.get_qp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PositiveVolumeIndexIndicator.$t = markType(PositiveVolumeIndexIndicator, 'PositiveVolumeIndexIndicator', StrategyBasedIndicator.$);\n    return PositiveVolumeIndexIndicator;\n}(StrategyBasedIndicator));\nexport { PositiveVolumeIndexIndicator };\n//# sourceMappingURL=PositiveVolumeIndexIndicator.js.map\n"]},"metadata":{},"sourceType":"module"}