{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Point_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { TrendCalculators } from \"igniteui-react-core\";\nimport { NotImplementedException } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar TrendAverageCalculator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(TrendAverageCalculator, _super);\n\n  function TrendAverageCalculator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TrendAverageCalculator.a = function (a, b, c) {\n    var d;\n\n    switch (a) {\n      case 9:\n      case 10:\n      case 11:\n      case 13:\n        if (c < 1) {\n          c = 1;\n        }\n\n        break;\n    }\n\n    switch (a) {\n      case 9:\n        d = TrendCalculators.e(b, c);\n        break;\n\n      case 10:\n        d = TrendCalculators.b(b, c);\n        break;\n\n      case 11:\n        d = TrendCalculators.c(b, c);\n        break;\n\n      case 12:\n        d = TrendCalculators.a(b);\n        break;\n\n      case 13:\n        d = TrendCalculators.g(b, c);\n        break;\n\n      default:\n        throw new NotImplementedException(0);\n    }\n\n    return d;\n  };\n\n  TrendAverageCalculator.b = function (a, b, c, d) {\n    var e_1, _a;\n\n    if (b.count == 0) {\n      var e = TrendAverageCalculator.a(a, c, d);\n\n      try {\n        for (var _b = tslib_1.__values(fromEnum(e)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var f = _c.value;\n          b.add(f);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  TrendAverageCalculator.c = function (a, b, c, d, e) {\n    if (b.count == 0) {\n      var f = getEnumerator(TrendAverageCalculator.a(a, c, e));\n      var g = getEnumerator(TrendAverageCalculator.a(a, d, e));\n\n      while (f.moveNext() && g.moveNext()) {\n        b.add({\n          $type: Point_$type,\n          x: f.current,\n          y: g.current\n        });\n      }\n    }\n  };\n\n  TrendAverageCalculator.$t = markType(TrendAverageCalculator, 'TrendAverageCalculator');\n  return TrendAverageCalculator;\n}(Base);\n\nexport { TrendAverageCalculator };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/TrendAverageCalculator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, Point_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { TrendCalculators } from \"igniteui-react-core\";\nimport { NotImplementedException } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar TrendAverageCalculator = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TrendAverageCalculator, _super);\n    function TrendAverageCalculator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TrendAverageCalculator.a = function (a, b, c) {\n        var d;\n        switch (a) {\n            case 9:\n            case 10:\n            case 11:\n            case 13:\n                if (c < 1) {\n                    c = 1;\n                }\n                break;\n        }\n        switch (a) {\n            case 9:\n                d = TrendCalculators.e(b, c);\n                break;\n            case 10:\n                d = TrendCalculators.b(b, c);\n                break;\n            case 11:\n                d = TrendCalculators.c(b, c);\n                break;\n            case 12:\n                d = TrendCalculators.a(b);\n                break;\n            case 13:\n                d = TrendCalculators.g(b, c);\n                break;\n            default: throw new NotImplementedException(0);\n        }\n        return d;\n    };\n    TrendAverageCalculator.b = function (a, b, c, d) {\n        var e_1, _a;\n        if (b.count == 0) {\n            var e = TrendAverageCalculator.a(a, c, d);\n            try {\n                for (var _b = tslib_1.__values(fromEnum(e)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var f = _c.value;\n                    b.add(f);\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n        }\n    };\n    TrendAverageCalculator.c = function (a, b, c, d, e) {\n        if (b.count == 0) {\n            var f = getEnumerator(TrendAverageCalculator.a(a, c, e));\n            var g = getEnumerator(TrendAverageCalculator.a(a, d, e));\n            while (f.moveNext() && g.moveNext()) {\n                b.add({ $type: Point_$type, x: f.current, y: g.current });\n            }\n        }\n    };\n    TrendAverageCalculator.$t = markType(TrendAverageCalculator, 'TrendAverageCalculator');\n    return TrendAverageCalculator;\n}(Base));\nexport { TrendAverageCalculator };\n//# sourceMappingURL=TrendAverageCalculator.js.map\n"]},"metadata":{},"sourceType":"module"}