{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PercentageVolumeOscillatorIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PercentageVolumeOscillatorIndicatorStrategy, _super);\n\n  function PercentageVolumeOscillatorIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PercentageVolumeOscillatorIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.o(b.h.c);\n    c.o(b.f.c);\n    return c;\n  };\n\n  PercentageVolumeOscillatorIndicatorStrategy.prototype.a = function (a, b) {\n    var c = getEnumerator(b.h.b(a));\n    var d = getEnumerator(b.f.b(a));\n    var e = a.indicatorColumn;\n    var f = 0;\n\n    while (c.moveNext() && d.moveNext()) {\n      var g = b.i(100 * (c.current - d.current) / d.current);\n      e.item(f, g);\n      ++f;\n    }\n\n    return true;\n  };\n\n  PercentageVolumeOscillatorIndicatorStrategy.$t = markType(PercentageVolumeOscillatorIndicatorStrategy, 'PercentageVolumeOscillatorIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return PercentageVolumeOscillatorIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { PercentageVolumeOscillatorIndicatorStrategy };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PercentageVolumeOscillatorIndicatorStrategy.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAA+I,YAA/I,EAAmK,QAAnK,EAA6K,aAA7K,QAAkM,qBAAlM;AAGA,SAAS,MAAT,QAAuB,qBAAvB;AAGA;;;;AAGA,IAAA,2CAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiE,EAAA,OAAA,CAAA,SAAA,CAAA,2CAAA,EAAA,MAAA;;AAAjE,WAAA,2CAAA,GAAA;;AAoBC;;AAlBA,EAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAAmB,IAAI,MAAJ,CAAmB,YAAnB,EAAiC,CAAjC,CAAxB;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAF,CAAI,CAAR;AACA,IAAA,CAAC,CAAC,CAAF,CAAI,CAAC,CAAC,CAAF,CAAI,CAAR;AACA,WAAO,CAAP;AACA,GALD;;AAMA,EAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAqC,CAArC,EAAkF;AACjF,QAAI,CAAC,GAA0B,aAAa,CAAC,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAN,CAAD,CAA5C;AACA,QAAI,CAAC,GAA0B,aAAa,CAAC,CAAC,CAAC,CAAF,CAAI,CAAJ,CAAM,CAAN,CAAD,CAA5C;AACA,QAAI,CAAC,GAAoB,CAAC,CAAC,eAA3B;AACA,QAAI,CAAC,GAAW,CAAhB;;AACA,WAAO,CAAC,CAAC,QAAF,MAAgB,CAAC,CAAC,QAAF,EAAvB,EAAqC;AACpC,UAAI,CAAC,GAAW,CAAC,CAAC,CAAF,CAAI,OAAO,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,OAArB,IAAgC,CAAC,CAAC,OAAtC,CAAhB;AACA,MAAA,CAAC,CAAC,IAAF,CAAO,CAAP,EAAU,CAAV;AACA,QAAE,CAAF;AACA;;AACD,WAAO,IAAP;AACA,GAXD;;AAPO,EAAA,2CAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,2CAAD,EAA8C,6CAA9C,EAAmG,4BAA6B,CAAC,CAAjI,CAAnB;AAmBR,SAAA,2CAAA;AAAC,CApBD,CAAiE,4BAAjE,CAAA;;SAAa,2C","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PercentageVolumeOscillatorIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PercentageVolumeOscillatorIndicatorStrategy, _super);\n    function PercentageVolumeOscillatorIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PercentageVolumeOscillatorIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.o(b.h.c);\n        c.o(b.f.c);\n        return c;\n    };\n    PercentageVolumeOscillatorIndicatorStrategy.prototype.a = function (a, b) {\n        var c = getEnumerator(b.h.b(a));\n        var d = getEnumerator(b.f.b(a));\n        var e = a.indicatorColumn;\n        var f = 0;\n        while (c.moveNext() && d.moveNext()) {\n            var g = b.i(100 * (c.current - d.current) / d.current);\n            e.item(f, g);\n            ++f;\n        }\n        return true;\n    };\n    PercentageVolumeOscillatorIndicatorStrategy.$t = markType(PercentageVolumeOscillatorIndicatorStrategy, 'PercentageVolumeOscillatorIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return PercentageVolumeOscillatorIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { PercentageVolumeOscillatorIndicatorStrategy };\n//# sourceMappingURL=PercentageVolumeOscillatorIndicatorStrategy.js.map\n"]},"metadata":{},"sourceType":"module"}