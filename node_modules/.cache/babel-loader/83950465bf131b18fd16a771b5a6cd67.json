{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Components/CityFilters.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { Dropdown, ButtonToolbar } from \"react-bootstrap\";\n\nclass CityFilters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: null,\n      state_filter: \"Select State\",\n      time_filter: \"Select Time Zone\",\n      apiLink: \"\"\n    };\n\n    this.state_selected = state_name => {\n      return state_name !== \"Select State\" && state_name !== \"All\";\n    };\n\n    this.time_selcted = time_zone => {\n      return time_zone !== \"Select Time Zone\" && time_zone !== \"All\";\n    };\n\n    this.time_zone_value = time_zone => {\n      if (time_zone === \"Central Time\") {\n        return \"America/Chicago\";\n      } else if (time_zone === \"Mountain Time\") {\n        // Missing Boise\n        return \"America/Denver\";\n      } else if (time_zone === \"Mountain Time w/o DST\") {\n        return \"America/Phoenix\";\n      } else if (time_zone === \"Pacific Time\") {\n        return \"America/Los_Angeles\";\n      } else if (time_zone === \"Alaska Time\") {\n        return \"America/Anchorage\";\n      } else if (time_zone === \"Hawaii-Aleutian Time\") {\n        return \"Pacific/Honolulu\";\n      } else {\n        // Missing Detroit, Indianapolis and Louisville\n        return \"America/New_York\";\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(ButtonToolbar, {\n        className: \"CitiesFilter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 3\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Dropdown, {\n        className: \"m-1\",\n        id: \"dropdown-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 4\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }\n      }, this.state.state_filter),\n      /*#__PURE__*/\n      React.createElement(Dropdown.Menu, {\n        className: \"ourdropdown\",\n        id: \"dropdown-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }\n      }, [\"All\", \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Deleware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montanat\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"].map(value => {\n        return (\n          /*#__PURE__*/\n          React.createElement(Dropdown.Item, {\n            key: value,\n            onClick: () => {\n              this.setState({\n                state_filter: value\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 7\n            }\n          }, value)\n        );\n      }))),\n      /*#__PURE__*/\n      React.createElement(Dropdown, {\n        className: \"m-1\",\n        id: \"dropdown-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 4\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }\n      }, this.state.time_filter),\n      /*#__PURE__*/\n      React.createElement(Dropdown.Menu, {\n        className: \"ourdropdown\",\n        id: \"dropdown-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }, [\"All\", \"Eastern Time\", \"Central Time\", \"Mountain Time\", \"Mountain Time w/o DST\", \"Pacific Time\", \"Alaska Time\", \"Hawaii-Aleutian Time\"].map(value => {\n        return (\n          /*#__PURE__*/\n          React.createElement(Dropdown.Item, {\n            key: value,\n            onClick: () => {\n              this.setState({\n                time_filter: value\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 7\n            }\n          }, value)\n        );\n      }))),\n      /*#__PURE__*/\n      React.createElement(Button, {\n        className: \"m-1\",\n        id: \"go-btn\",\n        onClick: () => {\n          if (this.state_selected(this.state.state_filter) && this.time_selcted(this.state.time_filter)) {\n            axios.get(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&time_zone=' + this.time_zone_value(this.state.time_filter) + '&page=1').then(res => {\n              const cities = res.data;\n              this.setState({\n                cities\n              });\n              this.props.setter(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&time_zone=' + this.time_zone_value(this.state.time_filter) + '&page=1');\n            });\n          } else if (this.state_selected(this.state.state_filter)) {\n            axios.get(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&page=1').then(res => {\n              const cities = res.data;\n              this.setState({\n                cities\n              });\n              this.props.setter(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&page=1');\n            });\n          } else if (this.time_selcted(this.state.time_filter)) {\n            axios.get(`https://api.collegefitfor.me/cities/filter/?time_zone=` + this.time_zone_value(this.state.time_filter) + '&page=1').then(res => {\n              const cities = res.data;\n              this.setState({\n                cities\n              });\n              this.props.setter(`https://api.collegefitfor.me/cities/filter/?time_zone=` + this.time_zone_value(this.state.time_filter) + '&page=1');\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 4\n        }\n      }, \"Go\"))\n    );\n  }\n\n}\n\nexport default CityFilters;","map":{"version":3,"sources":["/Users/Parth/web-project/src/Components/CityFilters.js"],"names":["React","Button","axios","Dropdown","ButtonToolbar","CityFilters","Component","constructor","props","state","cities","state_filter","time_filter","apiLink","state_selected","state_name","time_selcted","time_zone","time_zone_value","render","map","value","setState","get","then","res","data","setter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios';\nimport { Dropdown, ButtonToolbar } from \"react-bootstrap\";\n\nclass CityFilters extends React.Component {\n\tstate = {\n\t    cities: null,\n\t\tstate_filter: \"Select State\",\n\t\ttime_filter: \"Select Time Zone\",\n\t\tapiLink: \"\",\n\t}\n\n\tconstructor(props) {\n        super(props);\n\t}\n\t\n\tstate_selected = (state_name) => {\n\t\treturn state_name !== \"Select State\" && state_name !== \"All\";\n\t}\n\n\ttime_selcted = (time_zone) => {\n\t\treturn time_zone !== \"Select Time Zone\" && time_zone !== \"All\";\n\t}\n\n\ttime_zone_value = (time_zone) => {\n\t\tif (time_zone === \"Central Time\") {\n\t\t\treturn \"America/Chicago\"\n\t\t} else if (time_zone === \"Mountain Time\") {\n\t\t\t// Missing Boise\n\t\t\treturn \"America/Denver\"\n\t\t} else if (time_zone === \"Mountain Time w/o DST\") {\n\t\t\treturn \"America/Phoenix\"\n\t\t} else if (time_zone === \"Pacific Time\") {\n\t\t\treturn \"America/Los_Angeles\"\n\t\t} else if (time_zone === \"Alaska Time\") {\n\t\t\treturn \"America/Anchorage\"\n\t\t} else if (time_zone === \"Hawaii-Aleutian Time\") {\n\t\t\treturn \"Pacific/Honolulu\"\n\t\t} else {\n\t\t\t// Missing Detroit, Indianapolis and Louisville\n\t\t\treturn \"America/New_York\"\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t<ButtonToolbar className=\"CitiesFilter\">\n\t\t\t<Dropdown className='m-1' id='dropdown-btn'>\n\t\t\t\t<Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n\t\t\t\t\t{this.state.state_filter}\n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu className='ourdropdown' id='dropdown-options'>\n\t\t\t\t\t{[\"All\", \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Deleware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montanat\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"].map(value => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({ state_filter : value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{value}\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\n\t\t\t<Dropdown className='m-1' id='dropdown-btn'>\n\t\t\t\t<Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n\t\t\t\t\t{this.state.time_filter}\n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu className='ourdropdown' id='dropdown-options'>\n\t\t\t\t\t{[\"All\", \"Eastern Time\", \"Central Time\", \"Mountain Time\", \"Mountain Time w/o DST\", \"Pacific Time\", \"Alaska Time\", \"Hawaii-Aleutian Time\"].map(value => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.setState({ time_filter : value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{value}\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\n\t\t\t<Button className='m-1' id='go-btn'\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (this.state_selected(this.state.state_filter) && this.time_selcted(this.state.time_filter)) {\n\t\t\t\t\t\taxios.get(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&time_zone=' + this.time_zone_value(this.state.time_filter) + '&page=1')\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconst cities = res.data;\n\t\t\t\t\t\t\tthis.setState({ cities });\n\t\t\t\t\t\t\tthis.props.setter(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&time_zone=' + this.time_zone_value(this.state.time_filter) + '&page=1');\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (this.state_selected(this.state.state_filter)) {\n\t\t\t\t\t\taxios.get(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&page=1')\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconst cities = res.data;\n\t\t\t\t\t\t\tthis.setState({ cities });\n\t\t\t\t\t\t\tthis.props.setter(`https://api.collegefitfor.me/cities/filter/?state_name=` + this.state.state_filter + '&page=1');\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (this.time_selcted(this.state.time_filter)) {\n\t\t\t\t\t\taxios.get(`https://api.collegefitfor.me/cities/filter/?time_zone=` + this.time_zone_value(this.state.time_filter) + '&page=1')\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconst cities = res.data;\n\t\t\t\t\t\t\tthis.setState({ cities });\n\t\t\t\t\t\t\tthis.props.setter(`https://api.collegefitfor.me/cities/filter/?time_zone=` + this.time_zone_value(this.state.time_filter) + '&page=1');\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\tGo\n\t\t\t</Button>\n\t\t</ButtonToolbar>\n\t\t);\n\t}\n}\n\nexport default CityFilters;\n"]},"metadata":{},"sourceType":"module"}