{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/web-project/src/Pages/Universities.js\";\nimport React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Universities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport { api } from '../instance';\nexport default class Universities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      universities: null,\n      page: 1,\n      loading: true\n    };\n\n    this.fetchUniversities = () => {\n      api.get('/universities', {\n        params: {\n          page: this.state.page\n        }\n      }).then(res => res.data).then(universities => {\n        this.setState({\n          universities,\n          loading: false\n        });\n      });\n    };\n\n    this.displayUniversities = () => {\n      const {\n        universities\n      } = this.state;\n      let rows = [];\n\n      for (let r = 0; r < 5; r++) {\n        let children = [];\n\n        for (let c = 0; c < 3; c++) {\n          if (universities.length <= c + 3 * r) {\n            break;\n          }\n\n          var university = universities[c + 3 * r];\n          children.push(React.createElement(Card, {\n            className: \"universities-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(Nav.Link, {\n            href: '/universities/' + String(university.name).replace(/ /g, '_').toLowerCase(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(Card.Img, {\n            src: university.image_url,\n            variant: \"top\",\n            height: \"300\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }), React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, university.name), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"City: \", university.city_name, \", \", university.state_name), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Acceptance Rate: \", university.admission_rate.toFixed(2), \"%\")))));\n        }\n\n        rows.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n        rows.push(React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, children));\n        if (universities.length < 3 * r) break;\n      }\n\n      return rows;\n    };\n\n    this.changePage = page => {\n      this.setState({\n        page: page,\n        loading: true\n      }, () => this.fetchUniversities());\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUniversities();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      className: \"universities-jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Find the University that's the best fit for you. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Explore information on over 5,000 Universities across the country.\"), this.state.loading ? React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      className: \"Spinner-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.displayUniversities(this.state.universities)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"center-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: () => this.changePage(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"1\")), React.createElement(\"li\", {\n      class: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: () => this.changePage(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"li\", {\n      class: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: () => this.changePage(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"li\", {\n      class: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: () => this.changePage(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"4\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Parth/web-project/src/Pages/Universities.js"],"names":["React","Component","Nav","CardDeck","Spinner","Navigation","Footer","Jumbotron","Card","api","Universities","state","universities","page","loading","fetchUniversities","get","params","then","res","data","setState","displayUniversities","rows","r","children","c","length","university","push","String","name","replace","toLowerCase","image_url","city_name","state_name","admission_rate","toFixed","changePage","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, CardDeck, Spinner } from 'react-bootstrap';\nimport '../Styles/Universities.css';\nimport Navigation from '../Components/Navigation';\nimport Footer from '../Components/Footer';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport { api } from '../instance';\n\nexport default class Universities extends Component {\n  state = {\n    universities: null,\n    page: 1,\n    loading: true,\n  };\n\n  componentDidMount() {\n    this.fetchUniversities();\n  }\n\n  fetchUniversities = () => {\n    api\n      .get('/universities', {\n        params: {\n          page: this.state.page,\n        },\n      })\n      .then((res) => res.data)\n      .then((universities) => {\n        this.setState({ universities, loading: false });\n      });\n  };\n\n  displayUniversities = () => {\n    const { universities } = this.state;\n    let rows = [];\n    for (let r = 0; r < 5; r++) {\n      let children = [];\n      for (let c = 0; c < 3; c++) {\n        if (universities.length <= c + 3 * r) {\n          break;\n        }\n        var university = universities[c + 3 * r];\n        children.push(\n          <Card className=\"universities-card\">\n            <Nav.Link\n              href={\n                '/universities/' +\n                String(university.name)\n                  .replace(/ /g, '_')\n                  .toLowerCase()\n              }\n            >\n              <Card.Img src={university.image_url} variant=\"top\" height=\"300\" />\n              <Card.Body>\n                <Card.Title>{university.name}</Card.Title>\n                <Card.Text>\n                  City: {university.city_name}, {university.state_name}\n                </Card.Text>\n                <Card.Text>\n                  Acceptance Rate: {university.admission_rate.toFixed(2)}%\n                </Card.Text>\n              </Card.Body>\n            </Nav.Link>\n          </Card>\n        );\n      }\n      rows.push(<br></br>);\n      rows.push(<div className=\"row\">{children}</div>);\n      if (universities.length < 3 * r) break;\n    }\n    return rows;\n  };\n\n  changePage = (page) => {\n    this.setState(\n      {\n        page: page,\n        loading: true,\n      },\n      () => this.fetchUniversities()\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Jumbotron className=\"universities-jumbotron\"></Jumbotron>\n        <p>\n          Find the University that's the best fit for you. <br />\n          Explore information on over 5,000 Universities across the country.\n        </p>\n        {this.state.loading ? (\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            className=\"Spinner-custom\"\n          />\n        ) : (\n          <>\n            <CardDeck>\n              {this.displayUniversities(this.state.universities)}\n            </CardDeck>\n            <p />\n            <nav className=\"center-nav\">\n              <ul class=\"pagination\">\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    onClick={() => this.changePage(1)}\n                  >\n                    1\n                  </a>\n                </li>\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    onClick={() => this.changePage(2)}\n                  >\n                    2\n                  </a>\n                </li>\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    onClick={() => this.changePage(3)}\n                  >\n                    3\n                  </a>\n                </li>\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    onClick={() => this.changePage(4)}\n                  >\n                    4\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </>\n        )}\n        <p />\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}