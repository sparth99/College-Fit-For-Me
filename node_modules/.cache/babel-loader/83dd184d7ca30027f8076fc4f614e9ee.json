{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar PointerTooltipVisualData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(PointerTooltipVisualData, _super);\n\n  function PointerTooltipVisualData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._boxShape = null;\n    _this._pointerFillShape = null;\n    _this._pointerOutlineShape = null;\n    _this._offsetX = 0;\n    _this._offsetY = 0;\n    _this._categoryNames = null;\n    _this._viewport = null;\n    return _this;\n  }\n\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"boxShape\", {\n    get: function () {\n      return this._boxShape;\n    },\n    set: function (a) {\n      this._boxShape = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"pointerFillShape\", {\n    get: function () {\n      return this._pointerFillShape;\n    },\n    set: function (a) {\n      this._pointerFillShape = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"pointerOutlineShape\", {\n    get: function () {\n      return this._pointerOutlineShape;\n    },\n    set: function (a) {\n      this._pointerOutlineShape = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"offsetX\", {\n    get: function () {\n      return this._offsetX;\n    },\n    set: function (a) {\n      this._offsetX = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"offsetY\", {\n    get: function () {\n      return this._offsetY;\n    },\n    set: function (a) {\n      this._offsetY = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"categoryNames\", {\n    get: function () {\n      return this._categoryNames;\n    },\n    set: function (a) {\n      this._categoryNames = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PointerTooltipVisualData.prototype.serialize = function () {\n    var e_1, _a;\n\n    var a = \"\";\n\n    if (this.categoryNames != null) {\n      try {\n        for (var _b = tslib_1.__values(fromEnum(this.categoryNames)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var b = _c.value;\n          a += \"\\\"\" + b + \"\\\",\";\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (a != \"\") {\n        a = a.substr(0, a.length - 1);\n      }\n    }\n\n    var c = new StringBuilder(0);\n    c.u(\"{\");\n    c.u(\"offsetX: \" + this.offsetX + \", \");\n    c.u(\"offsetY: \" + this.offsetY + \", \");\n    c.u(\"boxShape: \" + this.boxShape.serialize() + \", \");\n    c.u(\"pointerFillShape: \" + this.pointerFillShape.serialize() + \", \");\n    c.u(\"viewport: { left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height + \"}, \");\n    c.u(\"pointerOutlineShape: \" + this.pointerOutlineShape.serialize() + \", \");\n    c.u(\"categoryNames: [\" + a + \"]\");\n    c.u(\"}\");\n    return c.toString();\n  };\n\n  PointerTooltipVisualData.prototype.scaleByViewport = function (a) {\n    this.boxShape.scaleByViewport(this.viewport);\n    this.pointerFillShape.scaleByViewport(this.viewport);\n    this.pointerOutlineShape.scaleByViewport(this.viewport);\n    this.offsetX = (this.offsetX - a.left) / a.width;\n    this.offsetY = (this.offsetY - a.top) / a.height;\n  };\n\n  Object.defineProperty(PointerTooltipVisualData.prototype, \"viewport\", {\n    get: function () {\n      return this._viewport;\n    },\n    set: function (a) {\n      this._viewport = a;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PointerTooltipVisualData.$t = markType(PointerTooltipVisualData, 'PointerTooltipVisualData');\n  return PointerTooltipVisualData;\n}(Base);\n\nexport { PointerTooltipVisualData };","map":{"version":3,"sources":["../../../../src/igniteui-charts/lib/PointerTooltipVisualData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, fromEnum, markType } from \"igniteui-react-core\";\nimport { StringBuilder } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar PointerTooltipVisualData = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PointerTooltipVisualData, _super);\n    function PointerTooltipVisualData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._boxShape = null;\n        _this._pointerFillShape = null;\n        _this._pointerOutlineShape = null;\n        _this._offsetX = 0;\n        _this._offsetY = 0;\n        _this._categoryNames = null;\n        _this._viewport = null;\n        return _this;\n    }\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"boxShape\", {\n        get: function () {\n            return this._boxShape;\n        },\n        set: function (a) {\n            this._boxShape = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"pointerFillShape\", {\n        get: function () {\n            return this._pointerFillShape;\n        },\n        set: function (a) {\n            this._pointerFillShape = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"pointerOutlineShape\", {\n        get: function () {\n            return this._pointerOutlineShape;\n        },\n        set: function (a) {\n            this._pointerOutlineShape = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"offsetX\", {\n        get: function () {\n            return this._offsetX;\n        },\n        set: function (a) {\n            this._offsetX = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"offsetY\", {\n        get: function () {\n            return this._offsetY;\n        },\n        set: function (a) {\n            this._offsetY = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"categoryNames\", {\n        get: function () {\n            return this._categoryNames;\n        },\n        set: function (a) {\n            this._categoryNames = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointerTooltipVisualData.prototype.serialize = function () {\n        var e_1, _a;\n        var a = \"\";\n        if (this.categoryNames != null) {\n            try {\n                for (var _b = tslib_1.__values(fromEnum(this.categoryNames)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var b = _c.value;\n                    a += \"\\\"\" + b + \"\\\",\";\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return))\n                        _a.call(_b);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n            if (a != \"\") {\n                a = a.substr(0, a.length - 1);\n            }\n        }\n        var c = new StringBuilder(0);\n        c.u(\"{\");\n        c.u(\"offsetX: \" + this.offsetX + \", \");\n        c.u(\"offsetY: \" + this.offsetY + \", \");\n        c.u(\"boxShape: \" + this.boxShape.serialize() + \", \");\n        c.u(\"pointerFillShape: \" + this.pointerFillShape.serialize() + \", \");\n        c.u(\"viewport: { left: \" + this.viewport.left + \", top: \" + this.viewport.top + \", width: \" + this.viewport.width + \", height: \" + this.viewport.height + \"}, \");\n        c.u(\"pointerOutlineShape: \" + this.pointerOutlineShape.serialize() + \", \");\n        c.u(\"categoryNames: [\" + a + \"]\");\n        c.u(\"}\");\n        return c.toString();\n    };\n    PointerTooltipVisualData.prototype.scaleByViewport = function (a) {\n        this.boxShape.scaleByViewport(this.viewport);\n        this.pointerFillShape.scaleByViewport(this.viewport);\n        this.pointerOutlineShape.scaleByViewport(this.viewport);\n        this.offsetX = (this.offsetX - a.left) / a.width;\n        this.offsetY = (this.offsetY - a.top) / a.height;\n    };\n    Object.defineProperty(PointerTooltipVisualData.prototype, \"viewport\", {\n        get: function () {\n            return this._viewport;\n        },\n        set: function (a) {\n            this._viewport = a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointerTooltipVisualData.$t = markType(PointerTooltipVisualData, 'PointerTooltipVisualData');\n    return PointerTooltipVisualData;\n}(Base));\nexport { PointerTooltipVisualData };\n//# sourceMappingURL=PointerTooltipVisualData.js.map\n"]},"metadata":{},"sourceType":"module"}